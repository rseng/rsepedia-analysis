titl pytreegrav fast python graviti solver tag python physic graviti simul author name michael grudić orcid affili name alexand b gurvich orcid affili affili name nasa hubbl fellow carnegi observatori index name depart physic astronomi ciera northwestern univers index date june bibliographi paperbib summari graviti import wide varieti scienc problem particular question astrophys nearli involv graviti larg gg number gravit mass star cluster galaxi discret fluid element hydrodynam simul often gravit field larg number mass comput expens comput directli sum contribut everi singl element everi point interest pytreegrav multimethod python packag comput gravit field potenti includ exact directsumm brute forc solver fast approxim treebas method order magnitud faster naïv method comput field potenti arbitrari particl distribut arbitrari point arbitrari softeningsmooth length parallel openmp statement need problem address pytreegrav follow given arbitrari set sourc mass m_i coordin mathbfx_i option finit spatial extent h_i _soften radius_ one would like comput gravit potenti phi andor gravit field mathbfg arbitrari set target point space mathbfy_i common applic nbodi simul wherein mathbfy_imathbfx_i also often use _analyzing_ simul result fact phi mathbfg sometim save simul output even often use analyz gravit interact specif _subsets_ mass element simul comput mathbfg also import gener equilibrium _initi conditions_ nbodi simul makediskgal identifi interest gravitationallybound structur halo star cluster giant molecular cloud rockstargrudicguszejnov mani graviti simul code multiphys simul code _including_ graviti written address problem graviti comput varieti way intern purpos aarseth_nbodydehnen howev pykdgrav precursor pytreegrav first python packag offer gener modular triviallyinstal graviti solver could easili integr python code use fast approxim treebas barneshut method practic larg particl number pykdgrav use kdtree implement acceler numba numba achiev high perform potentialfield evalu howev prerequisit treebuild step rel high overhead larg memori footprint entir dataset redundantli store everi level tree hierarchi made difficult scale variou practic research problem analyz highresolut galaxi simul fire_pressurebal pytreegrav full refactor pykdgrav address shortcom new octre implement drastic reduc treebuild time memori footprint effici nonrecurs tree travers field summat make suitabl postprocess dataset stateoftheart astrophys simul upward particl region interest method pytreegrav comput phi mathbfg use one two method brute forc explcitli sum field everi particl exact machin precis use fast approxim barneshut treebas method approxim much faster larg particl number nbodi problem field particl posit must known cost bruteforc method scale propto n cost treebas method scale less steepli propto n log n wallclock time per particl run pytreegrav sampl n particl plummer distribut variou n test run intel k workstat singl core _left_ parallel logic core _right_labelfigcputimeimagescpu_time_bothpng bruteforc method often fastest small particl point set lack overhead tree construct travers treebas method typic faster larger dataset reduc number floatingpoint oper requir method optim numba llvm jit compil numba basic accel potenti frontend function automat choos method like faster base heurist crossov point particl method also option parallel openmp via numba njitparalleltru interfac implement tree build treebas field summat larg follow gadget gadget start initi cube enclos particl particl insert tree one time node divid subnod subnod contain one particl indic subnod node store initi recurs travers complet tree optim tree travers need know _first_ subnod node refin index next branch tree field due node sum directli indic record initi recurs tree travers explicit subnod indic delet save memori remov empti node consider next branch first subnod indic known tree field summat done singl loop recurs function call gener improv perform memori usag field summat use barneshut geometr open criterion improv suggest dubinski node side length l centr mass locat distanc r target point contribut sum use monopol approxim treat whole node point mass r ltheta delta theta default give sim rm error mathbfg delta distanc node geometr center center mass condit approxim satisfi node subnod consid turn field contribut mass within node sum pytreegrav support gravit soften assum mass distribut particl take form standard cubic spline kernel zero beyond soften radiu h outsid field reduc point mass explicit express form soften gravit potenti field given gizmo h allow vari particl particl sum field larger sourc target soften use symmetr forc overlap particl soften nonzero largest soften h_rm max particl node store node alway open field summat r l maxlefth_rm target h_rm maxright delta h_rm target soften target particl field sum ensur interact physicallyoverlap particl sum directli soften kernel acknowledg acknowledg code contribut ben keller martin beroiz help feedback elisa bortola thorsten garcía github user herkesg develop pykdgrav incorpor pytreegrav refer pypihttpsimgshieldsiopypivpytreegravhttpspypiorgprojectpytreegravdocument statushttpsreadthedocsorgprojectspytreegravbadgeversionlatesthttpspytreegravreadthedocsioenlatestbadgelatest introduct pytreegrav packag comput gravit potenti andor field set particl includ method bruteforc direct summat fast approxim barneshut treecod method barneshut method implement octtre numba jitclass achiev much higher peform equival pure python implement without write singl line c cython full document avail herehttppytreegravreadthedocsio instal pip instal pytreegrav clone repo run python setuppi instal repo directori walkthrough first let import stuff want gener particl posit mass would particl data whatev problem python import numpi np pytreegrav import accel potenti python n number particl x nprandomrandn posit randomli sampl unit cube nprepeatnn mass let system unit mass h nprepeatn soften radii option assum provid frontend function use accel potenti function comput gravit field potenti particl posit python printaccelxmh printpotentialxmh default pytreegrav tri make optim choic bruteforc tree method speed also forc use one method anoth let tri compar runtim python time import time time tree gravit acceler accel_tre accelxmhmethodtre printtre accel runtim gstime time accel_bruteforc accelxmhmethodbruteforc printbrut forc accel runtim gstime time phi_tre potentialxmhmethodtre printtre potenti runtim gstime time phi_bruteforc potentialxmhmethodbruteforc printbrut forc potenti runtim gstime time tree accel runtim brute forc accel runtim tree potenti runtim brute forc potenti runtim see treebas method much faster bruteforc method especi particl count exceed here exampl much faster treecod run plummer sphere variabl number particl singl core intel k workstat benchmarkimagescpu_time_serialpng there free lunch tree method approxim let quantifi rm error stuff comput compar exact bruteforc solut python acc_error npsqrtnpmeannpsumaccel_treeaccel_bruteforceaxi rm forc error printrm forc error acc_error phi_error npstdphi_tre phi_bruteforc printrm potenti error phi_error rm forc error rm potenti error error typic default set forc error potenti error error tree approxim control barneshut open angl theta set default smaller theta give higher accuraci also run slower python theta differ theta tri theta theta time accel_tre accelxmhmethodtreethetatheta acc_error npsqrtnpmeannpsumaccel_treeaccel_bruteforceaxi printthetag runtim gs rm forc error gtheta timet acc_error theta runtim rm forc error e theta runtim rm forc error theta runtim rm forc error theta runtim rm forc error bruteforc treebas calcul parallel across avail logic core via openmp specifi paralleltru speed thing consider parallel scale vari core particl number python time import time time tree gravit acceler accel_tre accelxmhmethodtreeparalleltru printtre accel runtim parallel gstime time accel_bruteforc accelxmhmethodbruteforceparalleltru printbrut forc accel runtim parallel gstime time phi_tre potentialxmhmethodtreeparalleltru printtre potenti runtim parallel gstime time phi_bruteforc potentialxmhmethodbruteforceparalleltru printbrut forc potenti runtim parallel gstime time tree accel runtim parallel brute forc accel runtim parallel tree potenti runtim parallel brute forc potenti runtim parallel want evalu field differ point particl got cover target method exactli specifi separ set point particl posit field evalu everyth otherwis work exactli includ option parallel choic solver python pytreegrav import acceltarget potentialtarget gener separ set target posit want know potenti field n_target x_target nprandomrandn_target h_target nprepeatn_target option target soften set floor soften length forcespotenti comput accel_tre acceltargetx_target xm h_targeth_target h_sourcehmethodtre provid pointsmassessoften gener sourc particl accel_bruteforc acceltargetx_targetxmh_sourcehmethodbruteforc acc_error npsqrtnpmeannpsumaccel_treeaccel_bruteforceaxi rm forc error printrm forc error acc_error phi_tre potentialtargetx_target xm h_targeth_target h_sourcehmethodtre provid pointsmassessoften gener sourc particl phi_bruteforc potentialtargetx_targetxmh_targeth_target h_sourcehmethodbruteforc phi_error npstdphi_tre phi_bruteforc printrm potenti error phi_error rm forc error rm potenti error quickstart pytreegrav packag comput gravit potenti andor field set particl includ method bruteforc direct summat fast approxim barneshut treecod method barneshut method implement octtre numba jitclass achiev much higher peform equival pure python implement first let import stuff want gener particl posit mass would particl data whatev problem python import numpi np pytreegrav import accel potenti python n number particl x nprandomrandn posit randomli sampl unit cube nprepeatnn mass let system unit mass h nprepeatn soften radii option assum provid frontend function use accel potenti function comput gravit field potenti particl posit python printaccelxmh printpotentialxmh default pytreegrav tri make optim choic bruteforc tree method speed also forc use one method anoth let tri compar runtim python time import time time tree gravit acceler accel_tre accelxmhmethodtre printtre accel runtim gstime time accel_bruteforc accelxmhmethodbruteforc printbrut forc accel runtim gstime time phi_tre potentialxmhmethodtre printtre potenti runtim gstime time phi_bruteforc potentialxmhmethodbruteforc printbrut forc potenti runtim gstime time tree accel runtim brute forc accel runtim tree potenti runtim brute forc potenti runtim see treebas method much faster bruteforc method especi particl count exceed here exampl much faster treecod run plummer sphere variabl number particl singl core intel k workstat benchmarkcpu_time_serialpng there free lunch tree method approxim let quantifi rm error stuff comput compar exact bruteforc solut python acc_error npsqrtnpmeannpsumaccel_treeaccel_bruteforceaxi rm forc error printrm forc error acc_error phi_error npstdphi_tre phi_bruteforc printrm potenti error phi_error rm forc error rm potenti error error typic default set forc error potenti error error tree approxim control barneshut open angl theta set default smaller theta give higher accuraci also run slower python theta differ theta tri theta theta time accel_tre accelxmhmethodtreethetatheta acc_error npsqrtnpmeannpsumaccel_treeaccel_bruteforceaxi printthetag runtim gs rm forc error gtheta timet acc_error theta runtim rm forc error e theta runtim rm forc error theta runtim rm forc error theta runtim rm forc error bruteforc treebas calcul parallel across avail logic core via openmp specifi paralleltru speed thing consider parallel scale vari core particl number python time import time time tree gravit acceler accel_tre accelxmhmethodtreeparalleltru printtre accel runtim parallel gstime time accel_bruteforc accelxmhmethodbruteforceparalleltru printbrut forc accel runtim parallel gstime time phi_tre potentialxmhmethodtreeparalleltru printtre potenti runtim parallel gstime time phi_bruteforc potentialxmhmethodbruteforceparalleltru printbrut forc potenti runtim parallel gstime time tree accel runtim parallel brute forc accel runtim parallel tree potenti runtim parallel brute forc potenti runtim parallel want evalu field differ point particl got cover target method exactli specifi separ set point particl posit field evalu everyth otherwis work exactli includ option parallel choic solver python pytreegrav import acceltarget potentialtarget gener separ set target posit want know potenti field n_target x_target nprandomrandn_target h_target nprepeatn_target option target soften set floor soften length forcespotenti comput accel_tre acceltargetx_target xm h_targeth_target h_sourcehmethodtre provid pointsmassessoften gener sourc particl accel_bruteforc acceltargetx_targetxmh_sourcehmethodbruteforc acc_error npsqrtnpmeannpsumaccel_treeaccel_bruteforceaxi rm forc error printrm forc error acc_error phi_tre potentialtargetx_target xm h_targeth_target h_sourcehmethodtre provid pointsmassessoften gener sourc particl phi_bruteforc potentialtargetx_targetxmh_targeth_target h_sourcehmethodbruteforc phi_error npstdphi_tre phi_bruteforc printrm potenti error phi_error rm forc error rm potenti error