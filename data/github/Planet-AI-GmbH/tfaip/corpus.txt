python testhttpsgithubcomplanetaigmbhtfaipactionsworkflowspythontestymlbadgesvghttpsgithubcomplanetaigmbhtfaipactionsworkflowspythontestyml python testhttpsgithubcomplanetaigmbhtfaipactionsworkflowspythonpublishymlbadgesvghttpsgithubcomplanetaigmbhtfaipactionsworkflowspythonpublishyml _tfaip_ gener power research framework deep learn base tensorflow tfaip pythonbas research framework develop organ deploy deep learn model power tensorflowhttpswwwtensorfloworg enabl implement simpl complex scenario structur highli configur paramet directli modifi command line read docshttpstfaipreadthedocsio exampl tutorialfullexamplestutorialfullscenario learn mnist allow modifi graph train also hyperparamet optim bash export pythonpathpwd set pythonpath exampl dir found chang graph tfaiptrain examplestutorialful modelgraph mlp modelgraphnod modelgraphactiv relu tfaiptrain examplestutorialful modelgraph mlp modelgraphnod modelgraphactiv tanh tfaiptrain examplestutorialful modelgraph cnn modelgraphfilt modelgraphdens chang optim tfaiptrain examplestutorialful traineroptim rmsprop traineroptimizerbeta traineroptimizerclip_global_norm train model easili integr workflow predict provid data python predictor tutorialscenariocreate_predictorpath_to_trained_model predictorparam sampl predictorpredictdata printsampleoutput practic _tfaip_ follow rule object orient ie code scenario eg imageclassif mnist text recognit nlp etc organ implement class default scenariohttpstfaipreadthedocsioenlatestdocscenariohtml must implement modelhttpstfaipreadthedocsioenlatestdocmodelhtml datahttpstfaipreadthedocsioenlatestdocdatahtml see hereexamplestutorialful complet code run upper exampl mnist see hereexamplestutorialmin minim setup setup setup _tfaip_ creat virtual python least environ instal tfaip pip packag pip instal tfaip bash virtualenv p python venv sourc venvbinactiv pip instal tfaip pip instal tfaipdevel instal addit developmenttest requir look wikihttpstfaipreadthedocsioenlatestdocinstallationhtml setup instruct run tutori setup succeed launch train tutori implement common mnist scenario bash export pythonpathpwd set pythonpath exampl dir found tfaiptrain examplestutorialful gpu select specifi id tfaiptrain examplestutorialful devicegpu next step start read minimum tutorialexamplestutorialmin option look full tutorialexamplestutorialful see featur docshttpstfaipreadthedocsioenlatest provid full descript tfaip set _new custom scenario_ copi gener templateexamplestemplategener implement abstract method consid renam class launch train provid path packagenam new scenario _must_ locat pythonpath featur _tfaip_ _tfaip_ provid differ featur allow design gener scenario maximum flexibl high perform code design _fulli objectoriented_ implement class abstract function overwrit function extend adapt modifi default function _type support_ _tfaip_ fulli type simplifi work ide eg use pycharm use python dataclass modul set paramet automat convert paramet command line paiargparsehttpsgithubcomplanetaigmbhpaiargpars packag datapipelin everi scenario requir setup datapipelin read transform data tfaip offer easili implement modifi even complex pipelin defin multipl dataprocessor usual implement small oper map input sampl output sampl eg one dataprocessor load data inputfilenam outputimag anoth one appli normal rule anoth one appli data augment etc great advantag setup data processor run python automat parallel tfaip speed set run_paralleltru deeplearningfeatur sinc _tfaip_ base tensorflow full api avail design model graph even data pipelin furthermor tfaip support addit common techniqu improv perform deeplearn model box warmstart ie load pretrain model emaweight earlystop weightdecay variou optim learningr schedul contribut highli encourag user contribut scenario improv _tfaip_ pleas read contribut guidelineshttpstfaipreadthedocsioenlatestdocdevelopmenthtml benchmark time obtain intel core th gen cpu mnist follow tabl compar mnist tutori kera minimum tutorialexamplestutorialmin kera code adopt use network architectur hyperparemt set batch size epoch train code time per epoch train acc val acc best val acc kera _tfaip_ _tfaip_ kera result compar accuraci expect sinc actual code train graph fundament ident _tfaip_ howev bit slower due overhead input pipelin addit function eg benchmark automat track best model overhead neglig almost realworld scenario due clearli larger network architectur comput time infer backpropag becom bottleneck data pipelin integr purepython oper eg numpi tfdatadataset appli highlevel preprocess slow default sinc tfdatadatasetmaphttpswwwtensorfloworgapi_docspythontfdatadatasetmap cooper tfpy_functionhttpswwwtensorfloworgapi_docspythontfpy_funct run parallel therefor block python gil _tfaip_ curcumv issu provid option paralleliz input pipelin follow tabl show time second two differ task python appli pure python function data numpi appli sever numpi oper data mode task thread thread thread thread tfpy_funct python _tfaip_ python tfpy_funct numpi _tfaip_ numpi python task clearli show tfdatadatasetmap abl util multipl thread speedup numpi task occur possibl due paral numpi api c titl _tfaip_ gener power research framework deep learn base tensorflow tag python deep learn tensorflow kera research highlevel framework gener author name christoph wick orcid affili name benjamin kühn affili name gundram leifert affili name konrad sperfeld affili name tobia strauß affili name jochen zöllner orcid affili name tobia grüning orcid affili affili name planet ai gmbh warnowuf rostock germani index name institut mathemat univers rostock rostock germani index date march bibliographi paperbib summari _tfaip_ pythonbas research framework develop structur deploy deep learn project power tensorflow tensorflowwhitepap intend scientist univers organ research develop option deploy deep learn model _tfaip_ enabl simpl complex implement scenario imag classif object detect text recognit natur languag process speech recognit scenario highli configur paramet directli modifi command line api statement need implement scenario research develop typic compris sever task exampl set graph eg network architectur train eg optim learn rate schedul data pipelin eg data sourc current framework tensorflow kera see next section implement realiz one sever unstructur file python becom difficult maintain read bigger scenario furthermor compar framework also provid basic function recurr obstacl research develop typic redund scenario _tfaip_ resolv follow differ aspect eleg robust way research scenario usual configur via command line interfac cli usual must implement user _tfaip_ alreadi provid power cli dynam creat upon runtim pars nest dataclass hierarchi add new paramet even new set sub paramet user simpli add new field respect dataclass compar approach possibl paramet simultan avail cli dynam approach _tfaip_ show avail argument prevent user make mistak set paramet without effect current configur eg set factor adam optim even though rmsprop select default cli _tfaip_ provid command adapt variou hyperparamet learn rate schedul optim log debug profil earli stop furthermor compon scenario fulli custom allow exampl dynam configur network architectur eg insert layer chang paramet featur help research set variou experi exampl optim hyperparamet test novel idea comparison framework tensorflow _tfaip_ requir user implement scenario objectori way encourag annot code type particularli advantag larger complex scenario codebas grow accordingli use _tfaip_ lead clean structur modular readabl code limit poor code style facilit mainten practic scenario creat implement predefin interfac eg lossfunct graph construct research develop tediou step data prepar often compris convers data format requir framework tensorflowback _tfaip_ allow integr python code data pipelin howev run truli parallel multipl process result quit often bottleneck speedup tensorflow user transform python tensorflow oper labori sometim even imposs complic debug _tfaip_ tackl issu provid sophist pipelin setup base data processor appli simpl transform oper pure python code automat execut parallel anoth import step simplifi _tfaip_ deploy scenario framework plain tensorflow kera allow easili load train model predict howev includ data process predict api _tfaip_ instead automat appli preprocess infer train model option transform output postprocess pipelin one step inform pipelineconstruct embed within model enabl store load model differ data pipelin even scenario handi exampl certain preprocess step requir one specif model input expect final _tfaip_ automat log train process use tensorboard provid util script resum crash stop train set array train configur via excel sheet state field effici research area deep learn requir integr highli sophist opensourc framework tensorflow tensorflowwhitepap pytorch pytorch_ caff jiacaff cntk cntk trax trax framework provid effici tool freeli design deep learn scenario size complex howev number line code grow project structur meaning compon maintain compon almost ident deep learn scenario modul graph model data train valid predict ie applic train model furthermor support dynam paramet adapt instanc via command line desir effici research therefor obtain clean code base highli desir implement abstract templat alreadi set interact among modul provid basic function requir usecas _tfaip_ extens tensorflow solv thu help develop effici handl maintain small also largescal project research environ recent sever automl approach emerg eg googl cloud microsoft azur automl target develop limit machin learn expertis enabl train model autom process like network construct featur engin hyperparamet tune contrast _tfaip_ target research expertis deep learn actual design new network architectur data process pipelin setup train limit experi capac softwar engin _tfaip_ help structur maintain code base herebi also solv recurr problem like occur develop see next section _tfaip_ function follow highlight main function _tfaip_ basic concept _tfaip_ split paramet actual object wherebi paramet use instanti correspond object allow build hierarch paramet tree node replac paramet paramet also replac defin via command line enabl dynam adapt exampl even complet graph model research environ simplifi hyperparamet search setup experi classtempl defin logic structur realworld scenario scenario requir definit model data class wherebi basic function train export load model use data alreadi provid set data pipelin data gener list data processor implement defin raw data flow prepar data automat fed neural network sinc data processor written pure python simpl set debug data process pipelin speed data sampl gener pipelin automat run parallel model compris inform loss metric graph scenario templat herebi requir user implement method superordin modul connect automat _tfaip_ track train valid process util tensorboard provid tensorflow tensorboard extend custom data exampl plot precisionrecal pr curv render imag predict modul load train scenario easili appli new data deploy sinc model store pre postprocess pipelin addit data handl perform scenario follow predefin setup share research code clearer consequ easier review extend appli exampl modular simplifi process sever user work togeth scenario import featur _tfaip_ consist use python type modul includ type check lead clean understand code fewer error develop furthermor enabl ide pycharm pycharm perform autocomplet rare case highli gener api _tfaip_ might suffici tackl scenario option custom function implement base class exampl trainer data pipelin _tfaip_ document tutori help new user becom familiar _tfaip_ comprehens document sever tutori exampl scenario realworld usecas avail first _tfaip_ provid two tutori solv classif mnist _minimal_ scenario show minim implement requir implement common mnisttutori _tfaip_ _full_ scenario implement usecas highlight differ advanc featur _tfaip_ exampl provid transfer offici tensorflow tutori _tfaip_ framework scenario show power framework complex scenario logic split meaning part compon exampl compris automat text recognit atr singl text line imag imag classif fine tune bert final templat two basic scenario allow set new scenario copi basic code modifi afterward requir file class alreadi set sole abstract method implement class renam usag _tfaip_ research divers activ research project alreadi base _tfaip_ zoellner integr _tfaip_ solv natur languag process nlp problem sinc releas opensourc atr engin calamari wick_calamari_ base _tfaip_ research exampl recent public atr use transform use _tfaip_ wick_bidirectional_ acknowledg author would like thank opensourc commun especi develop maintain python tensorflow numpi sinc packag empow _tfaip_ work partial fund european social fund esf ministri educ scienc cultur mecklenburgwestern pomerania germani within project neiss grant esfbma refer tfaip exampl directori compris tutori usecas base _tfaip_ usecas provid basic implement must clearli extend actual realworld applic exampl orient tutori tensorflowhttpswwwtensorfloworgtutori requir exampl addit requir instal run shell pip instal examplesrequirementstxt list scenario mnisttutori mnist scenario design tutori show basictutorialmin extendedtutorialful featur _tfaip_ templatetempl templat set new scenario imag classificationimageclassif imag classif flower five class correspond tensorflow tutori avail herehttpswwwtensorfloworgtutorialsimagesclassif atratr linebas automat text recognit textfinetun berttextfinetuningbert finetun bert task decid whether two sentenc semant equival minim tutori welcom minim tutori show exampl mnist _tfaip_ structur custom scenario must implement scenario central class tutorialscenario option parametr tutorialscenarioparam addit paramet requir overal scenario tutorialscenario glue togeth datapipelin train data origin model graph data tutorialdatadatapi defin input target shape scenario case mnist input imag label img shape x dtype uint target gt simpl scalar use shape dtype uint python class tutorialdatadatabasedatabaseparam def _input_layer_specsself return img tftensorspecshap dtypeuint def _target_layer_specsself return gt tftensorspecshap dtypeuint train datagener next step load train data done tutorialdatagener note correspond paramet class actual instanti gener first load kerasdataset select desir partit depend pipelin mode gener datagener must overwrit __len__ return number sampl dataset gener provid sampl gener return load convert sampl python class tutorialdatageneratordatageneratortutorialdatageneratorparam def __init__self mode pipelinemod param tutorialdatageneratorparam super__init__mod param dataset getattrkerasdataset paramsdataset train test datasetload_data data train mode pipelinemodetrain els test selfdata to_samplesdata def __len__self return lenselfdata def generateself iterablesampl return selfdata afterward paramet defin trainerpipelineparamsbas must defin paramet set defin creat train data option valid data one train_val tutorialdatageneratorparamsset use train valid split two differ paramet train valid python pai_dataclass dataclass class tutorialtrainergeneratorparamstrainerpipelineparamsbasetutorialdatageneratorparam tutorialdatageneratorparam train_val tutorialdatageneratorparam fielddefault_factorytutorialdatageneratorparam metadatapai_metamodeflat def train_genself tutorialdatageneratorparam return selftrain_v def val_genself optionaltutorialdatageneratorparam return selftrain_v train pipelin setup model graph defin model graph tutorialmodel tutorialgraph describ correspond tutorialmodelparam class python pai_dataclass dataclass class tutorialmodelparamsmodelbaseparam n_class int fielddefault metadatapai_meta helpth number class depend select dataset number class must specifi could deriv data tutorialgraph inherit graphbas use tutorialmodelparamsstructur graphbas keraslay recommend tensorflow first creat layer __init__ function connect call method cnn two conv pool layer two dens layer ff creat input layer shape defin datadata abovedata therefor dict one entri img call function must also return dict tensor key later use access output eg loss metric python class tutorialgraphgraphbasetutorialmodelparam def __init__self param tutorialmodelparam nameconv kwarg supertutorialgraph self__init__param namenam kwarg selfconv convdkernel_s filter stride paddingsam nameconv selfpool maxpooldpool_s stride namepool selfconv convdkernel_s filter stride paddingsam nameconv selfpool maxpooldpool_s stride namepool selfflatten keraslayersflatten selfff ffout_dimens namef_ff activationrelu selflogit ffout_dimensionself_paramsn_class activationnon nameclassifi def callself input kwarg rescaled_img kexpand_dimskcastinputsimg dtypefloat conv_out selfpoolselfconvselfpoolselfconvrescaled_img logit selflogitsselfffselfflattenconv_out pred ksoftmaxlogit axi cl kargmaxpr axi return pred pred logit logit class cl correspond tutorialmodel must defin creat graph construct tutorialgraph next defin _loss inputs_target join dict input target come tutorialdatadata output outputdict previous defin tutorialgraph loss output graph must therefor wrap keraslay sparse_categorical_crossentropi wrap within lambdalay metric comput select gt target class output pass kerasmetricsaccuraci differ also complex method defin metric see full tutorialful exampl loss metric must return dict key use display inform log tensorboard final option defin determin best model _best_logging_settings_ select model max acc print use humanread inform valid _print_evaluatefunct receiv singl sampl unbatch display target predict predict correct python class tutorialmodelmodelbasetutorialmodelparam def create_graphself param tutorialmodelparam graphbas return tutorialgraphparam def _lossself inputs_target output dictstr anytensor return loss tfkeraslayerslambda lambda x tfkerasmetricssparse_categorical_crossentropyx from_logitstru nameloss inputs_targetsgt outputslogit def _metricself return acc metricdefinitiongt class kerasmetricsaccuraci def _best_logging_settingsself return max acc def _print_evaluateself input output dictstr anynumpi target dictstr anynumpi data print_fnprint correct outputsclass targetsgt print_fnfpredgt outputsclass correct els targetsgt p outputspredoutputsclass launch train train start call bash tfaiptrain tutorialmin read finish tutori look full tutorialful docshttpstfaipreadthedocsio full tutori tutori show use implement option handi featur tfaip go minim tutorialmin see scenario implement requir class function tutori set train mnist data use predict digit imag file overview follow featur cover tutori set datapipelin use dataprocessor see heredata set differ data gener trainingdatatraining_data_generationpi predictiondataprediction_data_generationpi see also heredata select configur differ dynam graphsdynamicgraph write imag file tensorboard see heremodelpi set predictor vote predict multipl individu model see herepredictorpi evalu dynam graph dynam graph allow chang setup layer paramet set command line first setup static graphgraphstutorialgraphpi handl creation dynam layer mnist graph also add final output addit layer sinc obligatori furthermor data normal reshap next creat base class base paramsgraphsbackendpi deriv keraslayerslay must layer implement variant add abstract method paramet defin creat layer cl class type return assum first argument __init__ paramet option defin gener typevar paramet use defin actual paramet type actual implement layer implement base class base paramet tutori cnngraphscnnpi mlpgraphsmlppi setup provid final add paramet select layer base param call graph modelparam option set choic flag pai_meta provid list avail paramet select static graphgraphstutorialgraphpi call abstract cl method retriev actual implement instanti fine tune bert tutori fine tune bert tutori map correspond tensorflow tutorialhttpswwwtensorfloworgofficial_modelsfine_tuning_bert _tfaip_ train bert cover tutori applic ie predict miss note instead larg bert tutori use albert hug facehttpshuggingfacecoalbertbasev pretrain model task decid whether sentenc semant equival eg two sentenc ident rover act robot geologist search evid past water rover act robot geologist move six wheel equival run run train scenario execut clone dir bash export pythonpathpwd requir scenario detect train tfaiptrain examplestextfinetuningbert traineroutput_dir ftbert_model tensorboard use view train process tensorboard logdir open httplocalhost tfaipmonitorpythonproject refer offici tensorflow tutorialhttpswwwtensorfloworgofficial_modelsfine_tuning_bert model zoo divers pretrain network avail hug facehttpshuggingfaceco templat scenario use blueprint set new listfilescenario implement recommend function test testpi file compris standard test run newli implement scenario especi test_data use debug input pipelin templat scenario use blueprint set new scenario implement recommend function test testpi file compris standard test run newli implement scenario especi test_data use debug input pipelin imag classif scenario imag classif tutori map correspond tensorflow tutorialhttpswwwtensorfloworgtutorialsimagesclassif _tfaip_ improv data augment dropout omit tutori integr exercis run run train scenario execut clone dir bash export pythonpathpwd requir scenario detect train tfaiptrain examplesimageclassif traineroutput_dir ic_model tfaiptrain examplesimageclassif traineroutput_dir ic_model devicegpu run train first gpu avail tfaiptrain examplesimageclassif modelconv_filt modeldens traineroutput_dir ic_model devicegpu tri differ larger model tensorboard use view train process tensorboard logdir open httplocalhost predict tfaippredict export_dir ic_modelbest dataimage_fil examplesimageclassificationexamplespxred_sunflowerjpg possibl output imag like belong sunflow percent confid refer offici tensorflow tutorialhttpswwwtensorfloworgtutorialsimagesclassif planet ai gmbh offer intellig imag analysishttpsplanetaideapplicationsimageanalysi abl local identifi mani visual categori imag video skill often util engin preprocess imag video segment certain object also use standalon solut atr scenario atrscenario exampl show implement linebas atrengin provid cnnlstmnetwork architectur train ctcalgorithm tutori show fundament includ requir algorithm document analysi gener part real ocrdocumentanalysi engin run run train scenario execut clone dir bash export pythonpathpwd requir scenario detect train tfaiptrain examplesatr traineroutput_dir atr_model tfaiptrain examplesatr traineroutput_dir atr_model devicegpu run train first gpu avail valid best model tfaiplav export_dir atr_modelbest dataimage_fil examplesatrworkingdiruw_linestestpng predict tfaippredict export_dir atr_modelbest dataimage_fil examplesatrworkingdiruw_linestestpng note predict print raw output network data work dirworkingdir provid exampl line uw dataset load default refer planet ai gmbh offer intellig document analysi suit idahttpsplanetaideapplicationsdocumentanalysi abl read even understand broad spectrum document ancient handwritten document modern machinegener one xlsx experiment tool design schedulinglog experi use xlsx file pass xlsx file pars xlsx desir gpu schedul option python execut target virtual env via python set updat write metric loss lastli calcul epoch schedul experi new sheet xlsx file launch workingdir note tool current requir python exampl run gpu tfaipexperiment xlsx demoxlsx gpu run cpu tfaipexperiment xlsx demoxlsx cpu xlsx file first row user option arbitrari user paramet result option arbitrari result experi must manual insert skip requir skip experi xlsx file pars script requir script run typic tfaiptrain expect script dir experi stop whatev reason skip finish train replac tfaiptrain tfaipresumetrain alreadi start finish train id requir id run best practic simpli use run integ cleanup requir cleanup output directori implement param requi tag mark begin paramet pass script second row param defin paramt group default group name eg optimizer_param pass follow paramet optimizer_param flag empti use previou group definit third row param label setup specifi paramet name eg epoch without dash option pass addit flag eg post_distortionssplitempti split split valu paramet individu arg empti allow paramet empti ad list note default empti null valu omit remark dont use formula xlsx file