p aligncent hrefhttpsgithubcomfandreuzzibispi target_blank img altbispi srclogopng width p python packagehttpsgithubcomfandreuzzibispyworkflowspythonpackagebadgesvgbranchmast hrefhttpscoverallsiogithubfandreuzzibispyimg srchttpscoverallsioreposgithubfandreuzzibispybadgesvg altcoverag statu github licensehttpsimgshieldsiogithublicensenaereenstrapdownjssvghttpsgithubcomnaereenstrapdownjsblobmasterlicens img srchttpsimgshieldsiobadgecodestyleblack document statushttpsreadthedocsorgprojectsbispybisimulationinpythonbadgeversionlatesthttpsbispybisimulationinpythonreadthedocsioenlatestbadgelatest statushttpsjosstheojorgpapersdccadbacefastatussvghttpsjosstheojorgpapersdccadbacefa pypi versionhttpsbadgefuryiopybispysvghttpsbadgefuryiopybispi descript bispi python packag comput maximum bisimul direct graph moment support follow algorithm paigetarjan dovierpiazzapolicr saha brief introduct problem found herehttpsbispybisimulationinpythonreadthedocsioenlatestbadgelatestabriefintroductiontobisimul usag paigetarjan dovierpiazzapolicr comput maximum bisimul graph first import paige_tarjan dovier_piazza_policr bispi well packag _networkx_ use repres graph python import networkx nx bispi import compute_maximum_bisimul algorithm creat simpl graph python graph nxbalanced_tre create_usingnxdigraph import set create_usingnxdigraph sinc bispi work _directed_ graph comput _maximum bisimulation_ use _paigetarjan_ algorithm default function compute_maximum_bisimul python compute_maximum_bisimulationgraph use _dovierpiazzapolicriti_ algorithm well python compute_maximum_bisimulationgraph algorithmalgorithmsdovierpiazzapolicr may also introduc _label set_ _initi partition_ python compute_maximum_bisimulationgraph initial_partit saha order use _saha_ algorithm need import follow function python bispi import saha call function obtain object type sahapartit method call add_edg method add new edg graph recomput maximum bisimul increment python saha_partit sahagraph reus graph object defin previou paragraph use aforement method add_edg note call method instanc graph pass modifi python edg maximum_bisimul saha_partitionadd_edgeedg printmaximum_bisimul document read document host readthedoc linkhttpsbispybisimulationinpythonreadthedocsioenlatestbadgelatest build html version doc local use bash cd doc make html gener html found docsbuildhtml depend instal bispi requir modul llist networkx code test _python _ compat _python _ guarante instal use pip directli sourc code instal via _pip_ instal packag bash pip instal bispi uninstal packag bash pip uninstal bispi instal sourc clone repositori local machin use bash git clone httpsgithubcomfandreuzzibispi instal packag bash cd bispi python setuppi instal test use github action continu intergr test run test local pytest requir use follow command root folder bispi bash pytest test author acknowledg bispi current develop mantain francesco andreuzzi contact andreuzzifrancesco gmailcom fandreuz sissait project develop supervis professor alberto casagrand _univers trieste_ advisor _bachelor thesis_ report bug best way report bug use issueshttpsgithubcomfandreuzzibispyissu section pleas clear give detail exampl reproduc bug best option would graph trigger error report contribut happi receiv contribut test document new featur issueshttpsgithubcomfandreuzzibispyissu section alway full thing guidelin submit patch start open new issuehttpsgithubcomfandreuzzibispyissu describ bug want fix featur want introduc let us keep track done moment possibl avoid write differ solut problem fork project setup new branch work _fixissue_ instanc separ work differ branch may bad time tri push pull request fix particular issu run blackhttpsgithubcompsfblack push code review signific chang almost alway accompani test project alreadi good test coverag look exist test your unsur go provid menaning commit messag help us keep good _git_ histori final submbit _pull request_ refer consult follow resourc develop bispi saha diptikalyan increment bisimul algorithm intern confer foundat softwar technolog theoret comput scienc springer berlin heidelberg doihttpsdoiorg_ dovier agostino carla piazza alberto policr fast bisimul algorithm intern confer comput aid verif springer berlin heidelberg doihttpsdoiorg_ gentilini raffaella carla piazza alberto policr bisimul simul coarsest partit problem journal autom reason doihttpsdoiorga paig robert robert e tarjan three partit refin algorithm siam journal comput doihttpsdoiorg hopcroft john n log n algorithm minim state finit automaton theori machin comput academ press aczel peter nonwellfound set kanellaki pari c scott smolka cc express finit state process three problem equival inform comput doihttpsdoiorgd sharir micha strongconnect algorithm applic data flow analysi comput mathemat applic doihttpsdoiorg cormen thoma h et al introduct algorithm mit press isbn licens see licenselicens file licens right limit mit titl bispi bisimul python tag bisimul graph theori graph algorithm author name francesco andreuzzi orcid affili affili name intern school advanc studi sissa triest itali index name università degli studi di triest index date juli bibliographi paperbib summari binari relat mathcalb set v node direct graph bisimul follow condit satisfi gentilini begingath ab mathcalb impli begincas impli exist b v mid ab mathcalb land b b b b impli exist v mid ab mathcalb land endcas endgath _label function_ ell v l may introduc case graph becom _kripk structure_ addit condit ab mathcalb impli ella ellb must satisfi p styletextalign center left balanc tree pair label function induc partit v cardin visual repres correspond maximum bisimul right comput use textttbispylabelfigexampleexamplepng p notion _bisimulation_ particular _maximum bisimulation_ name bisimul contain bisimul graph applic modal logic formal verif concurr theori kanellaki use graph reduct well gentilini fact _graphs_ may use creat digit model wide span complex system make bisimul use tool mani differ case reason sever algorithm comput maximum bisimul studi throughout year known problem oe log v algorithm solut paigetarjan v set node graph e set edg graph textttbispi python packag comput maximum bisimul statement need best knowledg textttbispi first python project address problem present meet object healthi open sourc softwar name extens test document intuit code comment think project may use tool studi practic case student approach field sinc notion bisimul may somewhat counterintuit first glanc well establish research may use textttbispi studi improv particular type graph compar new algorithm state art interest observ packag textttbispi briefli present contain implement one algorithm comput maximum bisimul everi algorithm use peculiar strategi obtain result reason think packag may use assess perform differ approach particular problem textttbispi packag contain implement follow algorithm paigetarjan paigetarjan employ insight famou algorithm minim finit state automata hopcroft dovierpiazzapolicr dovier use notion _rank_ optim overhead split initi partit comput prior execut algorithm use ove procedur sharir tarjan saha saha use updat maximum bisimul graph addit new edg effici comput _from scratch_ case comput complex depend much maximum bisimul chang due modif implement test document deepli moreov split algorithm smaller function prefer monolith block code order improv readabl testabl kind modular allow us reus function across multipl algorithm sinc sever procedur share eg textttsplit use three algorithm mention comput rank carri last two reason think addit new function would straightforward sinc alreadi implement signific set common function exampl present code use gener exampl shown autoreffigexampl first import modul need gener graph textttbispi take textttnetworkx direct graph input comput maximum bisimul python import networkx nx bispi import compute_maximum_bisimul gener graph mention balanc tree _branchingfactor_ _depth_ also creat list tupl repres label function employ exampl python graph nxbalanced_tre create_usingnxdigraph label comput maximum bisimul kripk structur taken account follow python compute_maximum_bisimulationgraph label visual shown drawn use librari textttpygraphviz textttbispi provid request output form list tupl contain label node member equival class maximum bisimul perform briefli examin perform result two differ kind graph _balanc trees_ clr variabl branch factor r height h go use notat b_trh _erdősrényi graphs_ clr also call _binomi graphs_ whose set e edg gener randomli cardin e roughli pv first experi involv balanc tree consist comput maximum bisimul tree variabl dimens label set trivial partit set v result shown left side autoreffigperform quantiti vari along xaxi e log v sinc allow present data natur way perform compli expect complex e log v instanc implement dovierpiazzapolicr take second comput maximum bisimul b_t second b_t valu ratio frace_b_t log v_b_te_b_t log v_b_t approxim therefor growth time function respect approxim predict behavior concern binomi graph fix p order obtain graph practic interest p graph becom complet p also e time also consid saha increment algorithm conduct experi follow gener binomi graph aforement featur comput maximum bisimul use paigetarjan algorithm add random edg graph comput updat maximum bisimul three time use three algorithm taken account verifi time taken one sinc experi determinist graph new edg gener randomli evalu visual mean time taken step sampl iter step knowledg old maximum bisimul interest nonincrement algorithm howev saha algorithm use input reduc number step goal second experi fact illustr improv result shown right side autoreffigperform p styletextalign center left side figur time taken implement paigetarjan dovierpiazzapolicr comput maximum bisimul balanc tree variabl branch factor height right side time need updat maximum bisimul binomi graph addit random edg experi also consid saha increment algorithmlabelfigperformanceperformancepng p ran experi workstat oper system _cento linux_ x processor intelr coretm cpu core ghz gb ram graph gener use function python packag _networkx networkx measur time use python modul _timeit_ pythondoc acknowledg acknowledg support receiv alberto casagrand preliminar theoret studi topic well sissa mathlab provid hardwar use perform experi larg graph refer