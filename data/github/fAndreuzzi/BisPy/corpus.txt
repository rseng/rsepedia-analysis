p aligncent hrefhttpsgithubcomfandreuzzibispi target_blank img altbispi srclogopng width p python packagehttpsgithubcomfandreuzzibispyworkflowspythonpackagebadgesvgbranchmast hrefhttpscoverallsiogithubfandreuzzibispyimg srchttpscoverallsioreposgithubfandreuzzibispybadgesvg altcoverag statu github licensehttpsimgshieldsiogithublicensenaereenstrapdownjssvghttpsgithubcomnaereenstrapdownjsblobmasterlicens img srchttpsimgshieldsiobadgecodestyleblack document statushttpsreadthedocsorgprojectsbispybisimulationinpythonbadgeversionlatesthttpsbispybisimulationinpythonreadthedocsioenlatestbadgelatest statushttpsjosstheojorgpapersdccadbacefastatussvghttpsjosstheojorgpapersdccadbacefa pypi versionhttpsbadgefuryiopybispysvghttpsbadgefuryiopybispi descript bispi python packag comput maximum bisimul direct graph moment support follow algorithm paigetarjan dovierpiazzapolicr saha brief introduct problem found herehttpsbispybisimulationinpythonreadthedocsioenlatestbadgelatestabriefintroductiontobisimul usag paigetarjan dovierpiazzapolicr comput maximum bisimul graph first import paige_tarjan dovier_piazza_policr bispi well packag _networkx_ use repres graph python import networkx nx bispi import compute_maximum_bisimul algorithm creat simpl graph python graph nxbalanced_tre create_usingnxdigraph import set create_usingnxdigraph sinc bispi work _directed_ graph comput _maximum bisimulation_ use _paigetarjan_ algorithm default function compute_maximum_bisimul python compute_maximum_bisimulationgraph use _dovierpiazzapolicriti_ algorithm well python compute_maximum_bisimulationgraph algorithmalgorithmsdovierpiazzapolicr may also introduc _label set_ _initi partition_ python compute_maximum_bisimulationgraph initial_partit saha order use _saha_ algorithm need import follow function python bispi import saha call function obtain object type sahapartit method call add_edg method add new edg graph recomput maximum bisimul increment python saha_partit sahagraph reus graph object defin previou paragraph use aforement method add_edg note call method instanc graph pass modifi python edg maximum_bisimul saha_partitionadd_edgeedg printmaximum_bisimul document read document host readthedoc linkhttpsbispybisimulationinpythonreadthedocsioenlatestbadgelatest build html version doc local use bash cd doc make html gener html found docsbuildhtml depend instal bispi requir modul llist networkx code test _python _ compat _python _ guarante instal use pip directli sourc code instal via _pip_ instal packag bash pip instal bispi uninstal packag bash pip uninstal bispi instal sourc clone repositori local machin use bash git clone httpsgithubcomfandreuzzibispi instal packag bash cd bispi python setuppi instal test use github action continu intergr test run test local pytest requir use follow command root folder bispi bash pytest test author acknowledg bispi current develop mantain francesco andreuzzi contact andreuzzifrancesco gmailcom fandreuz sissait project develop supervis professor alberto casagrand _univers trieste_ advisor _bachelor thesis_ report bug best way report bug use issueshttpsgithubcomfandreuzzibispyissu section pleas clear give detail exampl reproduc bug best option would graph trigger error report contribut happi receiv contribut test document new featur issueshttpsgithubcomfandreuzzibispyissu section alway full thing guidelin submit patch start open new issuehttpsgithubcomfandreuzzibispyissu describ bug want fix featur want introduc let us keep track done moment possibl avoid write differ solut problem fork project setup new branch work _fixissue_ instanc separ work differ branch may bad time tri push pull request fix particular issu run blackhttpsgithubcompsfblack push code review signific chang almost alway accompani test project alreadi good test coverag look exist test your unsur go provid menaning commit messag help us keep good _git_ histori final submbit _pull request_ refer consult follow resourc develop bispi saha diptikalyan increment bisimul algorithm intern confer foundat softwar technolog theoret comput scienc springer berlin heidelberg doihttpsdoiorg_ dovier agostino carla piazza alberto policr fast bisimul algorithm intern confer comput aid verif springer berlin heidelberg doihttpsdoiorg_ gentilini raffaella carla piazza alberto policr bisimul simul coarsest partit problem journal autom reason doihttpsdoiorga paig robert robert e tarjan three partit refin algorithm siam journal comput doihttpsdoiorg hopcroft john n log n algorithm minim state finit automaton theori machin comput academ press aczel peter nonwellfound set kanellaki pari c scott smolka cc express finit state process three problem equival inform comput doihttpsdoiorgd sharir micha strongconnect algorithm applic data flow analysi comput mathemat applic doihttpsdoiorg cormen thoma h et al introduct algorithm mit press isbn licens see licenselicens file licens right limit mit titl bispi bisimul python tag bisimul graph theori graph algorithm author name francesco andreuzzi orcid affili affili name intern school advanc studi sissa triest itali index name università degli studi di triest index date juli bibliographi paperbib summari binari relat mathcalb set v node direct graph bisimul follow condit satisfi gentilini begingath ab mathcalb impli begincas impli exist b v mid ab mathcalb land b b b b impli exist v mid ab mathcalb land endcas endgath _label function_ ell v l may introduc case graph becom _kripk structure_ addit condit ab mathcalb impli ella ellb must satisfi p styletextalign center left balanc tree pair label function induc partit v cardin visual repres correspond maximum bisimul right comput use textttbispylabelfigexampleexamplepng p notion _bisimulation_ particular _maximum bisimulation_ name bisimul contain bisimul graph applic modal logic formal verif concurr theori kanellaki use graph reduct well gentilini fact _graphs_ may use creat digit model wide span complex system make bisimul use tool mani differ case reason sever algorithm comput maximum bisimul studi throughout year known problem oe log v algorithm solut paigetarjan v set node graph e set edg graph textttbispi python packag comput maximum bisimul statement need best knowledg textttbispi first python project address problem present meet object healthi open sourc softwar name extens test document intuit code comment think project may use tool studi practic case student approach field sinc notion bisimul may somewhat counterintuit first glanc well establish research may use textttbispi studi improv particular type graph compar new algorithm state art interest observ packag textttbispi briefli present contain implement one algorithm comput maximum bisimul everi algorithm use peculiar strategi obtain result reason think packag may use assess perform differ approach particular problem textttbispi packag contain implement follow algorithm paigetarjan paigetarjan employ insight famou algorithm minim finit state automata hopcroft dovierpiazzapolicr dovier use notion _rank_ optim overhead split initi partit comput prior execut algorithm use ove procedur sharir tarjan saha saha use updat maximum bisimul graph addit new edg effici comput _from scratch_ case comput complex depend much maximum bisimul chang due modif implement test document deepli moreov split algorithm smaller function prefer monolith block code order improv readabl testabl kind modular allow us reus function across multipl algorithm sinc sever procedur share eg textttsplit use three algorithm mention comput rank carri last two reason think addit new function would straightforward sinc alreadi implement signific set common function exampl present code use gener exampl shown autoreffigexampl first import modul need gener graph textttbispi take textttnetworkx direct graph input comput maximum bisimul python import networkx nx bispi import compute_maximum_bisimul gener graph mention balanc tree _branchingfactor_ _depth_ also creat list tupl repres label function employ exampl python graph nxbalanced_tre create_usingnxdigraph label comput maximum bisimul kripk structur taken account follow python compute_maximum_bisimulationgraph label visual shown drawn use librari textttpygraphviz textttbispi provid request output form list tupl contain label node member equival class maximum bisimul perform briefli examin perform result two differ kind graph _balanc trees_ clr variabl branch factor r height h go use notat b_trh _erdősrényi graphs_ clr also call _binomi graphs_ whose set e edg gener randomli cardin e roughli pv first experi involv balanc tree consist comput maximum bisimul tree variabl dimens label set trivial partit set v result shown left side autoreffigperform quantiti vari along xaxi e log v sinc allow present data natur way perform compli expect complex e log v instanc implement dovierpiazzapolicr take second comput maximum bisimul b_t second b_t valu ratio frace_b_t log v_b_te_b_t log v_b_t approxim therefor growth time function respect approxim predict behavior concern binomi graph fix p order obtain graph practic interest p graph becom complet p also e time also consid saha increment algorithm conduct experi follow gener binomi graph aforement featur comput maximum bisimul use paigetarjan algorithm add random edg graph comput updat maximum bisimul three time use three algorithm taken account verifi time taken one sinc experi determinist graph new edg gener randomli evalu visual mean time taken step sampl iter step knowledg old maximum bisimul interest nonincrement algorithm howev saha algorithm use input reduc number step goal second experi fact illustr improv result shown right side autoreffigperform p styletextalign center left side figur time taken implement paigetarjan dovierpiazzapolicr comput maximum bisimul balanc tree variabl branch factor height right side time need updat maximum bisimul binomi graph addit random edg experi also consid saha increment algorithmlabelfigperformanceperformancepng p ran experi workstat oper system _cento linux_ x processor intelr coretm cpu core ghz gb ram graph gener use function python packag _networkx networkx measur time use python modul _timeit_ pythondoc acknowledg acknowledg support receiv alberto casagrand preliminar theoret studi topic well sissa mathlab provid hardwar use perform experi larg graph refer notat term document use notat may standard page serv refer note alway refer direct graph name graph edg relat symmetr gener graph symbol mathg repres graph graph coupl set node mathv binari relat math usual call set edg use interchang term vertex node refer member set mathv symbol mathlangl ab rangl mean edg vertex matha vertex mathb symbol mathex mathx v imag vertex mathx repres set mathi v mid langl xy rangl symbol mathex mathx v counterimag vertex mathx repres set mathi v mid langl yx rangl node mathx wellfound possibl reach cycl follow edg mathx symbol mathtextttwfg wellfound part graph name subset mathv made wellfound node df acronym depthfirstsearch one possibl way visit graph strongli connect compon scc subset mathv node compon reachabl other graph strongli connect compon mathg whose symbol mathgtextitscc graph whose vertex scc mathg refer graph check _ paigetarjan notat symbol mathq usual refer partit set mathv node graph mathg symbol mathx usual refer partit block partit mathq name mathx contain block block _rank definit dovierpiazzapolicr notat rank node defin follow imag _staticrank_definitionpng use follow set simplifi defint imag _staticn_rank_definitionpng saha notat causal splitter two block mathab block mathc math c land b notto c lor notto c land b c mean block may prevent two block merg want obtain stabl partit bibliographi cormen thoma h et al introduct algorithm mit press _document welcom bispi document bispi httpsgithubcomfandreuzzibispy_ python librari comput maximum bisimul direct graph brief introduct bisimul consid graph mathg bisimul mathmathcalb binari relat mathv satisfi follow condit math ab mathcalb impli begincas foral mid langl aa rangl e exist b mid langl bb rangl e land ab mathcalb foral b mid langl bb rangl e exist mid langl aa rangl e land ab mathcalb endcas definit may read follow given pair two node relat respect mathmathcalb child first node relat least one child second node viceversa follow imag show exampl bisimul imag _staticbisimulation_examplepng imag interest properti bisimul emerg two bisimilar node name two node relat least one bisimul graph alway behav similar way sens children behav similar way exactli condit state anoth simpler exampl imag _staticbisimulation_example_png two node almost indistinguish may switch matha mathb apart name nobodi would notic differ consequ fact prove two bisimilar node repres set easi see gener one bisimul graph instanc empti relat mathmathcalb emptyset trivial reflex relat mathmathcalb aa bb dot bisimul maximum bisimul graph bisimul result union bisimul graph shown binari relat still bisimul also equival relat reason state see maximum bisimul convey lot inform node graph behav equival class contain node equival two two sens bisimul therefor behav way remark mean children behav way bisimul depict first imag maximum bisimul sinc even though node mathdg bisimilar relat respect mathmathcalb fact maximum bisimul follow relat math mathcalb_mabcdefg applic maximum bisimul may use find equival node task lot applic concurr theori index semistructur dataset instanc minim graph collaps equival class singl node preserv inform convey graph equival rscp shown find maximum bisimul equival find relat stabl coarsest partit rscp set mathv respect relat math problem consist find coarsest ie one fewer block stabl partit set mathv stabl mean coupl block mathb_b_ follow condit hold math b_ subseteq eb_ lor b_ cap eb_ emptyset equival wide exploit sinc rscp problem easier express algorithm refer interest reader may found indepth discuss follow paper gentilini raffaella carla piazza alberto policr bisimul simul coarsest partit problem journal autom reason content toctre maxdepth algorithmsindexrst utilitiesindexrst notationrst bibliographi follow non exaust list refer consult develop project saha diptikalyan increment bisimul algorithm intern confer foundat softwar technolog theoret comput scienc springer berlin heidelberg dovier agostino carla piazza alberto policr fast bisimul algorithm intern confer comput aid verif springer berlin heidelberg gentilini raffaella carla piazza alberto policr bisimul simul coarsest partit problem journal autom reason paig robert robert e tarjan three partit refin algorithm siam journal comput hopcroft john n log n algorithm minim state finit automaton theori machin comput academ press aczel peter nonwellfound set kanellaki pari c scott smolka cc express finit state process three problem equival inform comput sharir micha strongconnect algorithm applic data flow analysi comput mathemat applic cormen thoma h et al introduct algorithm mit press saha modul bispysahasaha implement algorithm follow pseudocod analysi provid follow paper saha diptikalyan increment bisimul algorithm intern confer foundat softwar technolog theoret comput scienc springer berlin heidelberg use saha increment algorithm updat rscpmaximum bisimul addit new edg may thing comput maximum bisimul scratch modif saha algorithm may abl take less time averag warn saha algorithm work integ graph must convert graph isomorph integ graph creat partit classbispyutilitiesgraph_entities_qblock seealso modbispyutilitiesgraph_norm complex saha algorithm highli depend much maximum bisimul chang consequ addit new edg math beginalign t_textsaha oe_logv_ odelta_textttwflogdelta_textttwf oe_textttnwf v_textttnwf oe_v_ oe_logv_ endalign therefor without addit hypothesi natur edg ad may encount case increment algorithm take much recomput maximum bisimul scratch use refpaigetarjan refdovierpiazzapolicr algorithm summari autosummari nosignatur saha add_edg is_in_imag check_new_scc both_blocks_go_or_dont_go_to_block exists_causal_splitt merge_condit recursive_merg merge_phas preprocess_initial_partit merge_split_phas propagate_nwf propagate_wf build_well_founded_topological_list filter_deteach code document autofunct saha autofunct add_edg autofunct is_in_imag autofunct check_new_scc autofunct both_blocks_go_or_dont_go_to_block autofunct exists_causal_splitt autofunct merge_condit autofunct recursive_merg autofunct merge_phas autofunct preprocess_initial_partit autofunct merge_split_phas autofunct propagate_nwf autofunct propagate_wf autofunct build_well_founded_topological_list autofunct filter_deteach saha partit modul bispysahasaha_partit modul provid conveni interfac modbispysahasaha summari autosummari nosignatur sahapartit saha code document autoclass sahapartit member autofunct saha _dovierpiazzapolicr dovierpiazzapolicr modul bispydovier_piazza_policritidovier_piazza_policr implement algorithm follow pseudocod analysi provid follow paper dovier agostino carla piazza alberto policr fast bisimul algorithm intern confer comput aid verif springer berlin heidelberg signific improv respect modbispypaige_tarjanpaige_tarjan due usag notion rank motiv follow observ math equiv b impli textttranka textttrankb seealso refrank definit therefor may abl obtain equival class maximum bisimul smaller number step relat rank good approxim maximum bisimul summari autosummari nosignatur dovier_piazza_policr dovier_piazza_policriti_partit collaps build_block_counterimag split_upper_rank code document autofunct dovier_piazza_policr autofunct dovier_piazza_policriti_partit autofunct collaps autofunct build_block_counterimag autofunct split_upper_rank algorithm modul bispi content toctre paige_tarjanrst dovier_piazza_policritirst saha_partitionrst saharst _paigetarjan paigetarjan modul bispypaige_tarjanpaige_tarjan implement algorithm follow pseudocod analysi provid follow paper paig robert robert e tarjan three partit refin algorithm siam journal comput paigetarjan algorithm provid first effici algorithm solut problem maximum bisimul summari autosummari nosignatur paige_tarjan paige_tarjan_qblock extract_splitt build_block_counterimag build_exclusive_b_counterimag split update_count refin code document autofunct paige_tarjan autofunct paige_tarjan_qblock autofunct extract_splitt autofunct build_block_counterimag autofunct build_exclusive_b_counterimag autofunct split autofunct update_count autofunct refin rank comput modul bispyutilitiesrank_comput autofunct compute_rank autofunct scc_finishing_time_list rank partit modul bispydovier_piazza_policritiranked_partit autoclass rankedpartit member graph decor modul bispyutilitiesgraph_decor autofunct decorate_nx_graph autofunct decorate_bispy_graph autofunct to_tuple_list autofunct preprocess_initial_partit autofunct counterimage_df autofunct compute_counterimage_finishing_time_list autofunct as_bispy_graph autofunct build_vertexes_imag rank paigetarjan modul bispysaharanked_pta autofunct ranked_split autofunct pta graph normal integ graph graph mathg mathv subseteq mathbbn mathminv mathmaxv v name node integ start hole bispi abl work integ graph provid class go back forth actual graph isomorph represent modul bispyutilitiesgraph_norm autofunct convert_to_integer_graph autofunct check_normal_integer_graph autofunct back_to_origin _moduledoc util modul bispyutil content toctre graph_decoratorrst graph_entitiesrst graph_normalizationrst rank_computationrst ranked_partitionrst ranked_paige_tarjanrst graph entiti modul bispyutilitiesgraph_ent autoclass _vertex member autoclass _edg member autoclass _qblock member autoclass _xblock member autoclass _scc member