titl entangl author johan hid doihttpszenodoorgbadgesvghttpszenodoorgbadgelatestdoi entangl badgehttpsimgshieldsiobadgeentangledusethesourceaeffhttpsentangledgithubio haskel cihttpsgithubcomentangledentangledactionsworkflowshaskellciymlbadgesvghttpsgithubcomentangledentangledactionsworkflowshaskellciyml liter program ˈlɪtəɹət ˈpɹəʊɡɹæmɪŋphonet comput liter program program paradigm introduc donald knuth program given explan program logic natur languag english interspers snippet macro tradit sourc code compil sourc code gener wikipediahttpsenwikipediaorgwikiliterate_program short write markdown contain code fragment code fragment combin work code process call tangl entangl make write liter program easier keep code block markdown uptod gener sourc file monitor tangl sourc file chang master document sourc file reflect practic mean write well document code use markdown use program languag like forc use keep debug use ide featur without chang gener report pdf html sourc see exampl entangl homepagehttpsentangledgithubio statu entangl approach releas test linux window maco still highli recommend use version control commit often encount unexpect behaviour pleas post issu describ step reproduc featur live bidirect updat reason robust wrongli edit sourc file configur dhallhttpsdhalllangorg hackabl sqlite creat pdf html page liter sourc line direct point compil markdown sourc build entangl written haskellhttpswwwhaskellorg use cabal build system build execut run requir cabal x cabal build instal execut localbin cabal instal run unit test cabal test use entangl run commandlin idea run root folder project your work folder contain entangleddhal file contain configur get exampl config file run entangl config config asum markdown file folder name lit store inform sqlite databas locat entangleddb run daemon entangl daemon file file bit sequenc addit file want monitor syntax markdown side markdown syntax entangl use compat pandoc reli use fenc code attribut tangl code block file markdown bash filesrccountsh compos file use multipl code block done noweb syntax refer name code block anoth code block put someth like namedcodeblock singl line refer may indent indent prefix line final result name code block identifi given markdown python namedcodeblock name appear multipl time sourc code block concaten tangl weav first code block certain name appear name consecut code block name appear name pleas see hello worldhttpsentangledgithubioexampleshelloworldhtml exampleshttpsentangledgithubioexampl syntax sourc side sourc code know exactli code came would strict need extra syntax howev start edit sourc file may clear extra code need end make life littl easier name code block tangl file mark comment begin end cpp begin litstorymdmainbodi stdcout hello world stdendl end comment tamper run entangl assum creat markdown file say programmd start entangl run entangl daemon programmd shell may run entangl help get help option check user manualhttpsentangledgithubiomanualhtml run entangl docker entangl avail docker imagehttpshubdockercomrnlescentangl assum creat markdown file say programmd start entangl run shell docker run rm user id uid g volum pwddata nlescentangl daemon programmd command start docker contain current work directori mount data run usergroup id file written correct ownership distribut youv written liter code use entangl would like distribut one way includ tangl sourc code tar ball may also wish use pandoc filter includ entangledfiltershttpsgithubcomentangledfilt develop credit follow person made contribut entangl michał j gajda ghmgajda first implement linedirect featur danni wilson ghvizanto first implement project annot gener manpag pandoc litamanpagemd man usrbinman l licens entangl distribut apach v licens packag everyth relat packag go directori static linux binari contain singular definit file follow explain build sandbox mode project root build imag singular build f sandbox tmpalpineentangl packagingalpinebuilddef make static binari distribut singular run f nohom bind mnt writabl tmpalpineentangl result tarbal follow structur bin entangl lib entangl data configschemadhal exampleconfigdhal minimalconfigdhal schemasql entangl share doc entangl citationcff licens readmemd fedora packag instructionshttpsdocsfedoraprojectorgenusquickdocscreatingrpmpackag configur configur written dhall follow schema dhall filedataconfigschemadhal let comment type line text block start text end text let languag type name text identifi list text comment comment let linedirect type name text format text configcommentstyl configlanguag let annot nake standard project let syntax type matchcodestart text extractlanguag text extractfilenam text extractreferencenam text matchcodeend text extractproperti text text let defaultsyntax syntax matchcodestart matchcodeend extractlanguag extractreferencenam extractfilenam file extractproperti name text name let config type version text languag list languag watchlist list text databas option text syntax syntax annot annot linedirect list linedirect uselinedirect bool default version languag languag watchlist list text databas none text syntax defaultsyntax annot annotatestandard linedirect linedirect uselinedirect fals comment comment languag languag linedirect linedirect config config annot annot syntax syntax comment comment languag languag linedirect linedirect defaultsyntax defaultsyntax languag dhall configcommentstyl let comment hash commentlin lispstyl commentlin cstyle commentblock start end cppstyle commentlin haskellstyl commentlin mlstyle commentblock start end xmlstyle commentblock start end texstyl commentlin dhall configlanguag let languag name awk identifi awk comment commentshash name c identifi c comment commentscstyl name c identifi cpp c comment commentscppstyl name clojur identifi clojur comment commentslispstyl name css identifi css comment commentscstyl name identifi comment commentscppstyl name dhall identifi dhall comment commentshaskellstyl name elm identifi elm comment commentshaskellstyl name gnuplot identifi gnuplot comment commentshash name haskel identifi haskel comment commentshaskellstyl name html identifi html comment commentsxmlstyl name idri identifi idri comment commentshaskellstyl name julia identifi julia comment commentshash name javascript identifi js javascript ecma comment commentscstyl name latex identifi latex comment commentstexstyl name lua identifi lua comment commentshaskellstyl name make identifi make makefil comment commentshash name ocaml identifi ocaml comment commentsmlstyl name opencl identifi opencl comment commentscstyl name purescript identifi pur purescript comment commentshaskellstyl name python identifi py python comment commentshash name r identifi r comment commentshash name rust identifi rust comment commentscppstyl name scheme identifi scheme rr racket rr comment commentslispstyl name sqlite identifi sqlite comment commentshaskellstyl name toml identifi toml comment commentshash name typescript identifi ts typescript comment commentscppstyl name yaml identifi yaml comment commentshash name unknown identifi list text comment commentshash let linedirect name c format line linenumb filenam name c format line linenumb filenam name haskel format line linenumb filenam older version still would like read older version schema haskel filesrcconfigversion___h languag noimplicitprelud modul configversion___ import rio import configrecord import format import dhall auto decod record field setfromdistinctlist configrecord configdecod haskel filesrcconfigversion___h languag noimplicitprelud modul configversion___ import rio import configrecord hide configsyntax configsyntaxdecod import qualifi configversion___ version___ import format import dhall auto decod record field setfromdistinctlist configrecord configdecod haskel filesrcconfigversion___h languag noimplicitpreludeundecidableinst modul configversion___ import rio import qualifi riotext import configrecord import qualifi configversion___ version___ import format import paths_entangl import dhall input auto decod record field setfromdistinctlist configrecord configdecod haskel filesrcconfigrecordh languag noimplicitprelud modul configrecord import rio import qualifi riomap configimport configdhallschema read config haskel configimport import dhall fromdhal todhal auto decod record list field constructor unit union import qualifi format need match dhall schema type haskel languag haskel configdhallschema data configcom line text block start text end text deriv gener show instanc fromdhal configcom instanc todhal configcom data configlanguag configlanguag languagenam text languageidentifi text languagecom configcom deriv show configlanguag decod configlanguag configlanguag record configlanguag field name auto field identifi auto field comment auto instanc eq configlanguag b languagenam languagenam b instanc ord configlanguag compar b compar languagenam languagenam b line direct haskel configdhallschema decodeformatspec decod formatspec decodeformatspec frommayb formatplain illeg format spec formatspec auto linedirectivesdecod decod map text formatspec linedirectivesdecod mfromlist list entri entri record pair field name auto field format decodeformatspec pair b b annot method haskel configdhallschema data annotatemethod annotatenak annotatestandard annotateproject deriv show eq annotatedecod decod annotatemethod annotatedecod union annotatenak constructor nake unit annotatestandard constructor standard unit annotateproject constructor project unit syntax haskel configdhallschema data configsyntax configsyntax matchcodestart text matchcodeend text extractlanguag text extractreferencenam text extractfilenam text extractproperti text text configsyntaxdecod decod configsyntax configsyntaxdecod record configsyntax field matchcodestart auto field matchcodeend auto field extractlanguag auto field extractreferencenam auto field extractfilenam auto field extractproperti auto decod version haskel configrecord data config config configvers text configlanguag set configlanguag configwatchlist text configdatabas mayb text configannot annotatemethod configlinedirect map text formatspec configuselinedirect bool deriv show haskel configdecod configdecod decod config configdecod record config field version auto field languag setfromdistinctlist configlanguag field watchlist auto field databas auto field annot annotatedecod field linedirect linedirectivesdecod field uselinedirect auto version haskel configrecord data configsyntax configsyntax matchcodestart text matchcodeend text extractlanguag text extractreferencenam text extractfilenam text configsyntaxdecod decod configsyntax configsyntaxdecod record configsyntax field matchcodestart auto field matchcodeend auto field extractlanguag auto field extractreferencenam auto field extractfilenam auto data config config configvers text configlanguag set configlanguag configwatchlist text configdatabas mayb text configsyntax configsyntax configannot annotatemethod configlinedirect map text formatspec configuselinedirect bool defaultsyntax configsyntax defaultsyntax configsyntax matchcodestart matchcodeend extractlanguag extractreferencenam extractfilenam file class toversion___ updat io config instanc toversion___ config updat return instanc toversion___ version___config updat old return config configvers version___configvers old configlanguag version___configlanguag old configwatchlist version___configwatchlist old configdatabas version___configdatabas old configsyntax defaultsyntax configannot version___configannot old configlinedirect version___configlinedirect old configuselinedirect version___configuselinedirect old haskel configdecod configdecod decod config configdecod record config field version auto field languag setfromdistinctlist configlanguag field watchlist auto field databas auto field syntax configsyntaxdecod field annot annotatedecod field linedirect linedirectivesdecod field uselinedirect auto version haskel configrecord data config config configvers text configlanguag set configlanguag configwatchlist text configdatabas mayb text configsyntax configsyntax configannot annotatemethod configlinedirect map text formatspec configuselinedirect bool defaultsyntax io configsyntax defaultsyntax path getdatafilenam dataconfigschemadhal input configsyntaxdecod tpack path defaultsyntax class toversion___ updat io config instanc toversion___ config updat return syntaxto version___configsyntax configsyntax syntaxto version___configsyntax configsyntax extractproperti name name instanc version___toversion___ toversion___ updat old old version___upd old return config configvers version___configvers old configlanguag version___configlanguag old configwatchlist version___configwatchlist old configdatabas version___configdatabas old configsyntax syntaxto version___configsyntax old configannot version___configannot old configlinedirect version___configlinedirect old configuselinedirect version___configuselinedirect old haskel configdecod configdecod decod config configdecod record config field version auto field languag setfromdistinctlist configlanguag field watchlist auto field databas auto field syntax configsyntaxdecod field annot annotatedecod field linedirect linedirectivesdecod field uselinedirect auto haskel filesrcconfigh languag noimplicitprelud modul config modul config modul version___ modul configrecord import rio hide void import riodirectori import riofilepath import riolist scanl find import qualifi riotext import dhall input auto import systemfilepathglob import qualifi configversion___ version___ import qualifi configversion___ version___ import qualifi configversion___ version___ import configversion___ updat config import configrecord import error import select configinput configread class hasconfig env config len env config getdatabasepath monadio monadthrow config filepath getdatabasepath cfg dbpath case configdatabas cfg noth return memori db return tunpack db liftio createdirectoryifmiss true takedirectori dbpath return dbpath getinputfil monadio config filepath getinputfil cfg liftio mconcat mapm glob tunpack configwatchlist cfg configur store xdg_config_homeentangledconfigdhal also local directori parent may contain entangleddhal file overrid set global configur bad idea configur work peopl clone repositori without idea also stack configur need dhall handl current customis option entangl keep option open namespac refer enabl futur featur like git support name read config file haskel configinput findfileascend string io mayb filepath findfileascend filenam path droptrailingpathsepar getcurrentdirectori let parent revers scanl splitdirectori path findfil parent filenam getvers filepath io text getvers path input auto tpack path entangledvers readlocalconfig io config readlocalconfig cfg_path findfileascend entangleddhal mayb throwm systemerror config found return version getvers cfg_path decod select throwm systemerror unrecogn version string version version return updat input version___configdecod version return updat input version___configdecod version return input version___configdecod decod tpack cfg_path entangl process haskel configread lookuplanguag config text mayb configlanguag lookuplanguag cfg x find elem x languageidentifi configlanguag cfg languagefromnam config text mayb configlanguag languagefromnam cfg x find x languagenam configlanguag cfg main program main program run daemon also provid number command inspect manipul databas encod linux consol use unicod bullet point window asterisk facilit enabl utf encod haskel mainimport import ghcioencod haskel mainsetencod setlocaleencod utf option option pars use optparseappl haskel mainimport import optionsappl true option left subcommand leav subcommand expand haskel mainopt data arg arg versionflag bool verboseflag bool machineflag bool checkflag bool preinsertflag bool subcommand subcommand data subcommand nocommand subcommand deriv show eq goe subcommand parser collect subpars haskel mainopt parsenocommand parser subcommand parsenocommand pure nocommand parsearg parser arg hlint ignor parsearg parsearg arg switch long version short v help show version inform switch long verbos short v help verbos switch long machin short help machin readabl output switch long check short c help dont anyth return chang would made file system switch long preinsert short p help tangl everyth first action default db inmemori subpars mempti subpars parsenocommand runner haskel mainimport import config haskel mainrun data env env connect connect config config logfunc logfunc instanc hasconnect env connect len connect x x connect instanc hasconfig env config len config x x config instanc haslogfunc env logfuncl len logfunc x x logfunc run arg io run arg true _ _ _ _ _ putstrln showvers version run arg _ _ _ _ _ commandconfig configarg printexampleconfig minimalconfig run arg runwithenv verboseflag machineflag checkflag preinsertflag runsubcommand subcommand runwithenv bool bool bool bool entangl env io runwithenv verbos machineread dryrun preinsertflag x cfg readlocalconfig dbpath getdatabasepath cfg logopt setlogverboseformat true setlogusecolor true logoptionshandl stderr verbos let preinsertflag preinsertflag dbpath memori x preinsertflag preinsert els pure x dryrun todo withlogfunc logopt logfunc withconnect dbpath conn runrio env conn cfg logfunc testentangl x todo exitfailur els exitsuccess els withlogfunc logopt logfunc withconnect dbpath conn runrio env conn cfg logfunc runentangl machineread noth x preinsert hasconfig env haslogfunc env hasconnect env entangl env preinsert db createt cfg view config abs_path sort getinputfil cfg null abs_path throwm systemerror input file rel_path mapm makerelativetocurrentdirectori abs_path insertsourc rel_path runsubcommand hasconfig env haslogfunc env hasconnect env subcommand entangl env runsubcommand sc db createt case sc nocommand return subrunn way add subcommand independ follow section start daemon haskel mainimport import daemon runsess haskel subcommand commanddaemon daemonarg haskel subpars command daemon info parsedaemonarg progdesc run entangl daemon haskel mainopt newtyp daemonarg daemonarg inputfil string deriv show eq parsedaemonarg parser subcommand parsedaemonarg commanddaemon daemonarg mani argument str metavar file helper haskel subrunn commanddaemon daemonarg runsess inputfil print config haskel mainopt newtyp configarg configarg minimalconfig bool deriv show eq parseconfigarg parser subcommand parseconfigarg commandconfig configarg switch long minim short help print minim config helper printexampleconfig bool io printexampleconfig minim let path minim dataminimalconfigdhal els dataexampleconfigdhal tioputstr tioreadfil getdatafilenam path haskel subcommand commandconfig configarg haskel subpars command config info parseconfigarg progdesc print exampl configur haskel subrunn commandconfig _ printexampleconfig insert file databas haskel subcommand commandinsert insertarg haskel subpars command insert info parseinsertarg progdesc insert markdown file databas haskel mainopt data filetyp sourcefil targetfil deriv show eq data insertarg insertarg inserttyp filetyp insertfil filepath deriv show eq parsefiletyp parser filetyp parsefiletyp flag sourcefil long sourc short help insert markdown sourc file flag targetfil long target short help insert target code file parseinsertarg parser subcommand parseinsertarg commandinsert insertarg parsefiletyp mani argument str metavar file helper haskel subrunn commandinsert insertarg sourcefil fs insertsourc fs commandinsert insertarg targetfil fs inserttarget fs tangl singl refer haskel subcommand commandtangl tanglearg haskel subpars command tangl info commandtangl parsetanglearg progdesc retriev tangl code haskel mainopt data tanglearg tanglearg tanglequeri tanglequeri tangledecor bool deriv show eq parsetanglearg parser tanglearg parsetanglearg tanglearg tanglefil stroption long file short f metavar target help file target tangleref stroption long ref short r metavar target help refer target flag tangleal long short help tangl write disk switch long decor short help decor stitch comment helper haskel subrunn commandtangl tanglearg cfg view config tangl tanglequeri tangledecor selectannot cfg els selectannot cfg configannot annotatenak stitch markdown sourc haskel subcommand commandstitch stitcharg haskel subpars command stitch info commandstitch parsestitcharg progdesc retriev stitch markdown haskel mainopt newtyp stitcharg stitcharg stitchtarget filepath deriv show eq parsestitcharg parser stitcharg parsestitcharg stitcharg argument str metavar target helper haskel subrunn commandstitch stitcharg stitch stitchfil stitchtarget list target file haskel subcommand commandlist haskel subpars command list info pure commandlist helper progdesc list gener code file haskel subrunn commandlist listtarget linter haskel mainopt newtyp lintarg lintarg lintflag text deriv show eq parselintarg parser lintarg parselintarg lintarg mani argument str metavar linter helper haskel subcommand commandlint lintarg haskel subpars command lint info commandlint parselintarg progdesc lint input potenti problem avail linter riotextunpack riotextunword alllint haskel subrunn commandlint lintarg lint lintflag clean orphan target action delet orphan target databas file system haskel subcommand commandclearorphan haskel subpars command clearorphan info pure commandclearorphan helper progdesc delet orphan target haskel subrunn commandclearorphan clearorphan main haskel fileappmainh languag noimplicitprelud modul main import rio import riotext unword unpack import riodirectori makerelativetocurrentdirectori import riolist sort import prelud putstrln import qualifi datatextio tio import paths_entangl import datavers showvers mainimport import tangl selectannot import entangl import error entanglederror import linter mainopt main io main mainsetencod run execpars arg arg info parsearg helper fulldesc progdesc automat tangl untangl file header entangl daemonis liter program mainrun gener creat empti databas haskel mainimport import databas hasconnect connect createt db import comment annotatenak import databasesqlitesimpl dbpath getdatabasepath cfg withsql dbpath wire haskel filesrcentangledh languag noimplicitprelud languag multiparamtypeclass modul entangl import rio import riowrit monadwrit writert runwritert tell import qualifi riotext import qualifi datamaplazi lm import controlmonadexcept monaderror import fileio import transact import consol doc timestamp import paths_entangl import config config hasconfig languagefromnam import databas db hasconnect querytargetref queryreferencemap listtargetfil insertdocu stitchdocu listsourcefil deduplicateref updatetarget listorphantarget clearorphantarget querycodeattr import error entanglederror import comment headercom import document referencenam import tangl expandedcod annot expandedcod parsemarkdown import stitch untangl type filetransact env transact fileio env newtyp entangl env entangl unentangl writert filetransact env rio env deriv applic functor monad monadio monadthrow monadread env monadwrit filetransact env instanc monaderror entanglederror entangl env throwerror throwm catcherror x _ x testentangl monadio monadread env haslogfunc env entangl env bool testentangl entangl x e ask _ w runrio e runwritert x runfileio testtransact w runentangl monadio monadread env haslogfunc env bool mayb doc entangl env runentangl true _ runentangledmachin runentangl fals h runentangledhuman h runentangledmachin monadio monadread env haslogfunc env entangl env runentangledmachin entangl x e ask r w runrio e runwritert x runfileio runtransactionmachin w return r runentangledhuman monadio monadread env haslogfunc env mayb doc entangl env runentangledhuman h entangl x e ask r w runrio e runwritert x ts timestamp runfileio runtransact h h ts h w return r instanc haslogfunc env monadfileio entangl env readfil readfil dump dump writefil path text old_cont liftrio tri runfileio readfil path case old_cont either ioexcept text right old_cont old_cont text return otherwis actionw left _ actionc actionw tell plan writefil path writefil path text actionc tell plan createfil path writefil path text deletefil path tell plan deletefil path deletefil path data tanglequeri tanglefil filepath tangleref text tangleal deriv show eq tangleref haslogfunc env hasconfig env expandedcod entangl env referencenam entangl env text tangleref code name case code lm name noth throwm tangleerror refer tshow name found toint text mayb int toint readmayb tunpack takelin text int text takelin txt n take n drop tline txt droplin text int text droplin txt n take lines_ drop n lines_ lines_ tline txt tanglefil hasconnect env haslogfunc env hasconfig env expandedcod entangl env filepath entangl env text tanglefil code path cfg view config db querytargetref path case noth throwm tangleerror target tpack path found ref langnam content tangleref code ref headerlen db querycodeattr ref header case languagefromnam cfg langnam noth throwm tangleerror languag unknown langnam lang return mayb tunlin headercom lang path content n tunlin takelin content n headercom lang path droplin content n toint headerlen tangl hasconnect env haslogfunc env hasconfig env tanglequeri annot entangl env entangl env tangl queri annot cfg view config ref db queryreferencemap cfg let code expandedcod annot ref case queri tangleref ref dump tangleref code referencenam ref tanglefil path dump tanglefil code path tangleal mapm_ f writefil f tanglefil code f db listtargetfil data stitchqueri stitchfil filepath stitchal stitchfil hasconnect env haslogfunc env hasconfig env filepath entangl env text stitchfil path db stitchdocu path stitch hasconnect env haslogfunc env hasconfig env stitchqueri entangl env stitch stitchfil path dump stitchfil path stitch stitchal mapm_ f writefil f stitchfil f db listsourcefil listtarget hasconnect env haslogfunc env hasconfig env entangl env listtarget dump tunlin map tpack db listtargetfil insertsourc hasconnect env haslogfunc env hasconfig env filepath entangl env insertsourc file logdebug display insert file tshow file mapm_ readdoc file readdoc f document parsemarkdown f readfil f db insertdocu f document inserttarget hasconnect env haslogfunc env hasconfig env filepath entangl env inserttarget file logdebug display insert file tshow file mapm_ readtgt file readtgt f ref untangl f readfil f db updatetarget deduplicateref ref clearorphan hasconnect env haslogfunc env hasconfig env entangl env clearorphan file db r listorphantarget clearorphantarget return r mapm_ deletefil file printexampleconfig haslogfunc env entangl env printexampleconfig dump readfil liftio getdatafilenam dataexampleconfigdhal databas use sqlite databas manag document content use sql requir remap avail data haskel filesrcdatabaseh modul databas import rio import riolist initmayb sorton nub import qualifi riotext import qualifi riomap databaseimport databasetyp databasecr databaseinsert databaseupd databasequeri databasededupl type wrap sql interact sql monad store connect object logger haskel databaseimport import paths_entangl import databasesqlitesimpl import databasesqlitesimplefromrow import qualifi datatextio tio haskel databasetyp class hasconnect env connect len env connect data sqlenv sqlenv sqllogfunc logfunc sqlconnect connect newtyp sql sql unsql rio sqlenv readert connect loggingt io deriv applic functor monad monadio monadthrow monadread sqlenv instanc haslogfunc sqlenv logfuncl len sqllogfunc x x sqllogfunc instanc hasconnect sqlenv connect len sqlconnect x x sqlconnect getconnect hasconnect env monadread env connect getconnect view connect db monadio monadread env hasconnect env haslogfunc env sql db sql x logfunc view logfuncl conn view connect runrio sqlenv logfunc conn x runsql monadio sqlenv sql runsql env sql x runrio env x expectuniqu monadthrow show mayb expectuniqu return noth expectuniqu x return x expectuniqu lst throwm databaseerror duplic entri tshow lst expectuniqu monadthrow show b mayb b expectuniqu _ return noth expectuniqu f x return f x expectuniqu _ lst throwm databaseerror duplic entri tshow lst sqlitesimpl function withtransact take io action argument somehow redirect log inform around unpack io lift back monadsql prettiest solut see repetit pattern unpack result log forward log outer monad return result pattern redirectlog code need aid type checker wont know haskel databasetyp withtransactionm sql sql withtransactionm env ask conn getconnect liftio withtransact conn runsql env haskel databaseimport import document import config import select select note use pragma foreign_key true diagram schema gener sqleton would awesom follow would work make knit hidden schemasvg fileschema cat sqlite databas sqleton databas e l circo schemaschemasvg sqlitesimpl schema becom sqlite filedataschemasql rule edit schema alway use doubl quot identifi align type easi read pragma synchron pragma journal_mod memori pragma foreign_key schema vimftmysql todo implement interfac selda creat databas haskel databasecr schema io queri schema schema_path getdatafilenam dataschemasql qs initmayb tsplit tioreadfil schema_path return mayb map queri qs createt monadio monadread env hasconnect env createt conn getconnect liftio schema mapm_ execute_ conn insert document sqlite schema tabl sort order inclus creat tabl exist document id integ primari key autoincr filenam text null time timestamp default current_timestamp null code code tabl map referencepair contain codeblock referenceid use name ordin pair primari key sqlite schema creat tabl exist code id integ primari key autoincr name text null ordin integ null sourc text null languag text null document integ null linenumb integ foreign key document refer documentsid haskel databaseinsert insertcod text int text mayb text int mayb int codeproperti sql insertcod tup attr conn getconnect liftio execut conn insert codesnameordinalsourcelanguagedocumentlinenumb valu tup codeid lastinsertrowid conn executemani conn insert class valu classnam codeid classnam getclass attr executemani conn insert attribut valu attr valu codeid attr valu getattr attr getclass getclass codeclass c cs c getclass cs getclass _ cs getclass cs getattr getattr codeattribut attr val cs attr val getattr cs getattr _ cs getattr cs insertcod int referencepair sql insertcod docid referenceid file referencenam name count codeblock lang attr sourc linenum langnam case lang unknownclass c logwarn display unknown languag c locat return unknown nolanguag logwarn display languag class locat return unknown use null languag knownlanguag l return l insertcod name count sourc langnam docid linenum attr locat tpack file name tpack maybelineno linenum maybelineno noth maybelineno lno show lno insertcod int referencemap sql insertcod docid code mapm_ insertcod docid mtolist code tabl refer specif code block refer code name code ordin sqlite referencecod code text null foreign key code refer codesid delet cascad class attribut sqlite schema creat tabl exist class class text null referencecod creat tabl exist attribut attribut text null valu text null referencecod content sqlite schema creat tabl exist content id integ primari key autoincr document integ null plain text code integ foreign key document refer documentsid foreign key code refer codesid check plain null codenam null codeordin null haskel databaseinsert querycodeid int referenceid sql mayb int querycodeid docid referenceid _ referencenam name count conn getconnect expectuniqu fromonli liftio queri conn codequeri docid name count codequeri select id code document name ordin querycodeid referenceid sql mayb int querycodeid referenceid doc referencenam name count conn getconnect expectuniqu fromonli liftio queri conn codequeri doc name count codequeri select codesid code inner join document documentsid codesdocu documentsfilenam name ordin queryreferencecount referencenam sql int queryreferencecount referencenam name conn getconnect result liftio queri conn codequeri name case result return _ return codequeri select countid code name querycodesourc referenceid sql mayb text querycodesourc referenceid doc referencenam name count conn getconnect expectuniqu fromonli liftio queri conn codequeri doc name count codequeri select codessourc code inner join document documentsid codesdocu documentsfilenam name ordin querycodeattr referencenam text sql mayb text querycodeattr referencenam name attr conn getconnect expectuniqu fromonli liftio queri conn codequeri name attr codequeri select attributesvalu attribut inner join code codesid attributescod name ordin attribut contenttorow int content sql int mayb text mayb int contenttorow docid plaintext text return docid text noth contenttorow docid refer ref codeid querycodeid docid ref case codeid noth throwm databaseerror expect refer tshow ref codeid return docid noth codeid insertcont int content sql insertcont docid content row mapm contenttorow docid content conn getconnect liftio executemani conn insert contentdocumentplaincod valu row target sqlite schema creat tabl exist target filenam text primari key codenam text null languag text null document integ case null target orphan time timestamp default current_timestamp null foreign key codenam refer codesnam foreign key document refer documentsid haskel databaseinsert inserttarget int filemap sql inserttarget docid file conn getconnect liftio print row liftio executemani conn replac targetsfilenamecodenamelanguagedocu valu row targetrow path referencenam name lang path name lang docid row map targetrow mtolist file updat tangl markdown sourc written first remov data insert document reinsert new data prevent code block remain older version problem could also solv separ garbag collect step haskel databaseupd getdocumentid filepath sql mayb int getdocumentid rel_path conn getconnect expectuniqu fromonli liftio queri conn documentqueri rel_path documentqueri select id document filenam orphantarget int sql orphantarget docid conn getconnect liftio execut conn updat target set document null document docid clearorphantarget sql clearorphantarget conn getconnect liftio execute_ conn delet target document null removedocumentdata int sql removedocumentdata docid orphantarget docid conn getconnect liftio execut conn delet content document docid execut conn delet code document docid insertdocu filepath document sql insertdocu rel_path document let refnam nub map referencenam mkey refer conn getconnect docid getdocumentid rel_path docid case docid docid logdebug display replac tpack rel_path removedocumentdata docid return docid noth logdebug display insert new tpack rel_path liftio execut conn insert documentsfilenam valu rel_path liftio lastinsertrowid conn refcountmap mfromlist zip refnam mapm queryreferencecount refnam let mapref rreferenceid mayb r c r referencecountreferencecountc refcountmap referencenam ref mmapkey mapref refer cont map case refer rid refer mapref rid x x documentcont insertcod docid ref insertcont docid cont inserttarget docid documenttarget stitch todo make updat effici see httpsstackoverflowcomquestionsupdatemultiplerowswithdifferentvaluesinasinglesqlqueri exampl perform relat post httpsstackoverflowcomquestionsimproveinsertpersecondperformanceofsqlit haskel databaseupd frommaybem monad mayb frommaybem whennoth x mayb whennoth return x updatecod referencepair sql updatecod ref codeblock codesourc codeid frommaybem throwm databaseerror could find code tshow ref querycodeid ref conn getconnect liftio execut conn updat code set sourc id codesourc codeid updatetarget referencepair sql updatetarget ref withtransactionm mapm_ updatecod ref queri haskel databasequeri listorphantarget sql filepath listorphantarget conn getconnect map fromonli liftio query_ conn select filenam target document null io filepath listtargetfil sql filepath listtargetfil conn getconnect map fromonli liftio query_ conn select filenam target document null io filepath haskel databasequeri listsourcefil sql filepath listsourcefil conn getconnect map fromonli liftio query_ conn select filenam document io filepath haskel databasequeri querytargetref filepath sql mayb referencenam text querytargetref rel_path conn getconnect val expectuniqu liftio queri conn targetqueri rel_path return case val noth noth name lang referencenam name lang targetqueri select codenamelanguag target filenam haskel databasequeri stitchdocu filepath sql text stitchdocu rel_path conn getconnect docid getdocumentid rel_path case noth throwm stitcherror file tpack rel_path databas x return x result liftio queri conn select coalesceplaincodessourc content left outer join code code codesid contentdocu docid io text return tunlin map fromonli result refer haskel databasequeri queryreferencemap config sql referencemap queryreferencemap cfg conn getconnect row liftio query_ conn select documentsfilenam name ordin sourc linenumb languag code inner join document codesdocu documentsid io filepath text int text mayb int text mfromlist mapm refpair row refpair rel_path name ordin sourc linenum lang let lang mayb unknownclass lang const knownlanguag lang languagefromnam cfg lang return referenceid rel_path referencenam name ordin codeblock lang sourc linenum dedupl target file get writen multipl copi refer may obviou got chang best check one new version differ one markdown sourc function deduplicateref take list refer pair read target file use inform databas make sure result list refer pair uniqu referenceid decis reach stitcherror rais haskel databasededupl deduplicateref referencepair sql referencepair deduplicateref ref dedup sorton fst ref dedup return dedup x return x dedup ref codecodeblockcodesourc ref codecodeblockcodesourc xs ref ref ref code dedup ref code xs dedup ref code xs otherwis old_cod querycodesourc ref case old_cod noth throwm stitcherror ambigu updat tshow ref databas c select throwm stitcherror ambigu updat tshow ref c c dedup ref code xs c c dedup ref code xs document text util haskel importtext import rio text import qualifi riotext need version unlin doesnt append final newlin also mean chang tline littl haskel unlin line text text line text text n tissuffixof text tline text otherwis tline text unlin text text unlin tintercal n way unlin nicer properti singl text entangl end newlin mean unlin oper associ haskel unlin unlin unlin b unlin b notabl except empti list text type proper monoid howev consid text context element unlines text zero element text chang mean empti line someth differ absenc text preserv associ make unlin line id properti strict need wrap text mayb haskel maybeunlin mline mayb text text mline noth mline text line text munlin text mayb text munlin noth munlin ts unlin ts test haskel testunlinesinvers munlin mline haskel testunlinesassoci munlin catmayb munlin munlin b munlin b textutil modul haskel filesrctextutilh languag noimplicitprelud modul textutil import rio import qualifi riotext import datachar isspac indent unind unlin maybeunlin haskel indent indent text text text indent pre text unlin map indentlin line text indentlin line line line otherwis pre line haskel unind unind text text mayb text unind prefix unlin mapm unindentlin line unindentlin tall isspac otherwis tstripprefix prefix test haskel filetesttextutilspech modul textutilspec importtext import datamayb catmayb isjust import testhspec import testquickcheck import testquickcheckinstancestext import textutil propunlin mayb text bool propunlin testunlinesinvers propunlinelist text text bool propunlinelist b testunlinesassoci genlin gen text genlin tpack listof element gentext gen text gentext unlin listof genlin genpair gen gen b gen b genpair x x j return j propind text text bool propind b unind indent b b propunindentfail text text bool propunindentfail b isjust unind b tisprefixof b textutilspec spec textutilspec describ properti check munlin invers mline properti propunlin munlin nest associ properti propunlinelist unind invert indent properti foral genpair genlin gentext propind unind fail wrong indent properti foral genpair genlin genlin propind lint haskel filesrclintersh languag noimplicitprelud languag scopedtypevari modul linter import rio import qualifi riotext import riolist repeat zip import rioset elem import qualifi rioset import qualifi riomap import datagraph graph vertex import qualifi datagraph g import databasesqlitesimpl query_ queri fromonli import entangl import document referencemap referencenam codeblocksbynam codeblock referencenam import databas hasconnect db queryreferencemap getconnect import daemon session import config hasconfig config import tangl parsecod codelin import fileio referencesinfrag referencemap referencenam referencenam referencesinfrag ref r concatmap mapmayb getrefer parsecod r codesourc codeblocksbynam ref r getrefer nowebrefer _ getrefer _ noth referencegraph hasconnect env haslogfunc env hasconfig env entangl env graph vertex referencenam referencenam referencenam mayb vertex referencegraph cfg view config ref db queryreferencemap cfg let name elem referencenam ref return ggraphfromedg zip repeat name map referencesinfrag ref name dumptographviz hasconnect env haslogfunc env hasconfig env entangl env dumptographviz graph vertextonod _ referencegraph let graphvizedg tunlin map edgetogv gedg graph nodetokey _ referencenam b _ b edgetogv b nodetokey vertextonod nodetokey vertextonod b dump digraph n graphvizedg listunusedfrag hasconnect env haslogfunc env hasconfig env entangl env listunusedfrag graph vertextonod keytovertex referencegraph conn getconnect root mapmayb keytovertex referencenam fromonli liftio query_ conn select codenam target document null io text let reach foldmap sfromlist greachabl graph root unus sfromlist gvertic graph reach nodetokey _ referencenam b _ b getsourc name liftio queri conn select codesnamedocumentsfilenam code inner join document codesdocu documentsid codesnam codesordin name code foldmapm getsourc map nodetokey vertextonod stolist unus dump tunlin map name src name src code linter hasconnect env haslogfunc env hasconfig env map text entangl env linter mfromlist dumptographviz dumptographviz listunusedfrag listunusedfrag alllint text alllint mkey linter map text entangl session lint hasconnect env haslogfunc env hasconfig env text entangl env lint alllint lint alllint use avail linter lint arg sequence_ mapmayb linter arg untangl haskel filesrcstitchh languag noimplicitprelud modul stitch import rio hide import qualifi riotext import riolistparti head tail stitchimport sourcepars stitch untangl start read top line identifi file languag follow one seri referenc code block item result list referencepair give content code block given sourc file dont yet make referencemap sinc may duplic conflict entri case want get entri differ one alreadi know haskel sourcepars sourcedocu monadparsec e liststream text monadfail monadread config referencepair sourcedocu cfg ask header prop _ manytill_ anysingl tokenp tophead prop _ tokenp tophead lang mayb fail valid languag found header return getattribut prop languag languagefromnam cfg _ ref mconcat sourceblock lang return prependcod header head ref tail ref prependcod h ref cbcodeblock ref cb codesourc unlin h codesourc sourceblock start begin marker mani line plain sourc nest sourceblock sourceblock sourcelin return pair text refer content pair concaten sourceblock first seri index noweb refer gener correct indent haskel sourcepars sourceblock monadread config monadparsec e liststream text monadfail configlanguag text referencepair sourceblock lang config ask ref beginind _ tokenp comment lang beginblock configuselinedirect void anysingl ilin refpair mconcat manytil sourceblock lang sourcelin tokenp comment lang endblock let unindentedlin map unind beginind ilin isnoth unindentedlin fail indent error let content unlin catmayb unindentedlin return indent beginind shownowebrefer referencenam ref referencecount ref ref codeblock knownlanguag languagenam lang content nothingrefpair sourcelin monadparsec e liststream text text referencepair sourcelin x anysingl return x stitch function stitch function take config anonym monadread put sourcepars monad transform ask runreadert combo seem silli cant inherit outer monad tri turn transform around like parsect void liststream text type deduct fail one haskel stitch type sourcepars readert config parsec void liststream text untangl monadread env hasconfig env monadthrow filepath text referencepair untangl file text doc runreadert sourcedocu sourcepars referencepair view config either throwm stitcherror tpack errorbundlepretti return pars doc file liststream tline text import haskel stitchimport import liststream liststream tokenp import document import config config hasconfig config languagefromnam configlanguag import comment tophead beginblock endblock comment import textutil indent unind unlin import textmegaparsec monadparsec parsec pars anysingl manytil errorbundlepretti manytill_ transact idea wed like creat abstract class file system interact defin transact encod monad action togeth descript action possibl need human confirm transact haskel filesrctransactionh languag noimplicitpreludeundecidableinst modul transact import rio import qualifi riotext transactionimport transact haskel transact data descript messag doc createfil filepath writefil filepath deletefil filepath data transact transact action mayb descript descript needconfirm bool doc prettyprint class consol consid differ option display transact need human readabl machin readabl descript haskel transact showdescriptionhuman descript doc showdescriptionhuman mconcat map case messag x x createfil f msgcreat f writefil f msgwrite f deletefil f msgdelet f showdescriptionmachin descript text showdescriptionmachin tunlin mapmayb case messag _ noth createfil f tpack f writefil f tpack f deletefil f tpack f event happen need respond usual write sever file sinc io monoid append io action keep track describ gather event transact thing may need ask user permiss like overwrit file dubiou circumst messag done prettyprint doc haskel transactionimport import consol doc group msgcreat msgdelet msgwrite import qualifi consol import qualifi datatextio tio action wrap mayb tell transact anyth transact monoid haskel transact instanc semigroup semigroup transact transact al dl cl transact ar dr cr transact al ar dl dr cl cr instanc monoid monoid transact mempti transact mempti mempti fals build transact append element part haskel transact plan monad descript transact plan action transact action fals doc doc transact doc x transact noth messag x fals confirm transact confirm transact noth mempti true program logic transact avail term monadwrit haskel transact testtransact monadio transact bool testtransact transact noth _ _ return fals testtransact transact _ _ liftio tioputstr showdescriptionmachin return true runtransactionmachin monadio transact runtransactionmachin transact noth _ liftio tioputstr showdescriptionmachin runtransactionmachin transact x _ liftio tioputstr showdescriptionmachin x runtransact monadio mayb doc transact runtransact h transact noth _ liftio consoleputtermin group h showdescriptionhuman runtransact noth transact noth _ liftio consoleputtermin showdescriptionhuman runtransact h transact x c liftio consoleputtermin mayb showdescriptionhuman group showdescriptionhuman h c repli liftio tioputstr confirm yn hflush stdout tiogetlin liftio tioputstrln repli x els x file transact limit set io file system action result tangl stitch defin littl languag use type class target get creat modifi need writefil target remov renam need deletefil everi tangl stitch oper need readfil behaviour file delet file remain contain directori directori remov write file directori exist directori creat haskel filesrcfileioh languag noimplicitprelud modul fileio import rio fileioimport class monad monadfileio writefil filepath text deletefil filepath readfil filepath text dump text fileioprim fileioinst primit haskel fileioimport import qualifi riotext import error entanglederrorsystemerror import select selectm makeremov dir haskel fileioimport import riodirectori createdirectoryifmiss doesdirectoryexist listdirectori removefil removedirectori import riofilepath splitdirectori takedirectori import riolist scanl haskel fileioprim ensurepath monadio monadread env haslogfunc env filepath ensurepath path selectm return doesdirectoryexist path logdebug display creat directori tpack path createdirectoryifmiss true path haskel fileioprim rmdirifempti monadio monadthrow monadread env haslogfunc env filepath rmdirifempti path selectm return doesdirectoryexist path throwm systemerror could remov dir tpack path null listdirectori path logdebug display remov empti directori tpack path removedirectori path parent filepath filepath parent scanl splitdirectori rmpathifempti monadio monadthrow monadread env haslogfunc env filepath rmpathifempti mapm_ rmdirifempti revers parent write file haskel fileioimport import riofil writebinaryfiledur import qualifi riobytestr b haskel fileioprim writeifchang monadio monadthrow monadread env haslogfunc env filepath text writeifchang path text old_cont liftio tri breadfil path case old_cont either ioexcept bbytestr right old_cont old_cont new_cont return otherwis write left _ write new_cont tencodeutf text write logdebug display write tpack path writebinaryfiledur path new_cont dump monadio monadread env haslogfunc env text dump text logdebug dump stdio bhputstr stdout tencodeutf text fileio instanc haskel fileioinst newtyp fileio env fileio unfileio rio env deriv applic functor semigroup monoid monad monadio monadthrow monadread env readfil monadio haslogfunc env monadread env monadthrow filepath text readfil path decodeutfwith lenientdecod logdebug display read tpack path breadfil path runfileio monadio monadread env haslogfunc env fileio env runfileio fileio f env ask runrio env f instanc haslogfunc env monadfileio fileio env writefil path text ensurepath takedirectori path writeifchang path text deletefil path logdebug display delet tpack path removefil path rmpathifempti takedirectori path readfil readfil dump dump io action need log possibl confirm user execut also use mock test log log type class document structur haskel filesrcdocumenth languag noimplicitprelud modul document modul document modul error import rio import riolist sort import qualifi rioset import qualifi riomap import error documentstructur structur document model seri text code block code block delimit two line start three backtic normal text printthi code block code block relev entangl refer attach languag refer filenam languag filepath identifi may repeat case code block concaten previou instanc instanc associ integ mark place sequenc refer id defin type referenceid haskel documentstructur newtyp referencenam referencenam unreferencenam text deriv show eq ord display data referenceid referenceid referencefil filepath referencenam referencenam referencecount int deriv show eq ord shownowebrefer referencenam text shownowebrefer referencenam x x type deriv ord use index map document use referenceid type repres text document sequenc plain text referenceid pair map link referenceid code block haskel documentstructur data content plaintext text refer referenceid deriv show eq type referencepair referenceid codeblock type referencemap map referenceid codeblock type filemap map filepath referencenam text data document document refer referencemap documentcont content documenttarget filemap deriv show accessor haskel documentstructur referencenam referencemap set referencenam referencenam sfromlist map referencenam mkey referencesbynam referencemap referencenam referenceid referencesbynam ref name sort filter name referencenam mkey ref codeblocksbynam referencemap referencenam codeblock codeblocksbynam ref name mapmayb ref referencesbynam ref name maprefer referenceid referenceid document document maprefer f document document mmapkey f refer map mapcont documentcont documenttarget mapcont refer rid refer f rid mapcont x x code block code block attribut normal associ context css follow markdown class id attributevalu sourc map list codeproperti haskel documentstructur data codeproperti codeid text codeattribut text text codeclass text deriv eq show getattribut codeproperti text mayb text getattribut _ noth getattribut codeattribut k vp l k l v otherwis getattribut ps l getattribut _p l getattribut ps l case class repres code languag abbrevi thereof haskel documentstructur data codeblock codeblock codelanguag programminglanguag codeproperti codeproperti codesourc text codelinenumb mayb int deriv show eq programminglanguag either known languag know gener comment unknown misspel class identifi empti haskel documentstructur data programminglanguag knownlanguag text unknownclass text nolanguag deriv show eq daemon entangl daemon run milkshak main loop strategi haskel filesrcdaemonh daemon languag noimplicitpreludescopedtypevari modul daemon import rio import riolist sort import riowrit tell import qualifi riotext daemonimport daemonev daemonsess daemonwatch daemonmainloop daemonstart use lens build session record combin state monad reader config io manag entangl daemon fsnotifi use systemfsnotifi setup watch file haskel daemonimport import qualifi systemfsnotifi fsnotifi watch set trigger event type event haskel daemonev data daemonst idl tangl stitch deriv show eq data event writesourc filepath writetarget filepath debugev text deriv show session haskel daemonimport import databasesqlitesimpl connect import databas db connect hasconnect listsourcefil listtargetfil import transact doc import fileio import tangl annot selectannot import entangl import config config hasconfig config getinputfil configwatchlist annotatemethod import error entanglederror formaterror import consol doc puttermin import qualifi consol import qualifi prettyprint p import controlmonadexcept monaderror import controlconcurrentchan import controlconcurr import controlmonadcatch haskel daemonsess data session session watch mvar fsnotifystoplisten manag fsnotifywatchmanag eventchannel chan event daemonst mvar daemonst connect connect config config logfunc logfunc instanc hasconfig session config len config x x config instanc haslogfunc session logfuncl len logfunc x x logfunc instanc hasconnect session connect len connect x x connect newtyp daemon daemon undaemon rio session deriv applic functor monad monadio monadread session monadthrow monadunliftio everi time event happen send _eventchannel tangl chang _daemonst tangl write event target file trigger stitch way around daemon stitch state write event markdown sourc trigger tangl event arriv asynchron use mvar chang state set state bit involv bit ioref guarante safe use multithread environ mvar set first empti combin action done modifymvar_ haskel daemonsess setdaemonst daemonst daemon setdaemonst state ask daemonst modifymvar_ state const return watch haskel daemonimport import datalist nub import controlmonad mapm passev function act callback fsnotifi watcher two strategi editor save file remov creat vim default gedit mani editor actual content written temporari file renam exist file oper atom data lost system crash modifi vs code flexibl interpret incom event import bit need ignor delet event fsnotifi let us watch directori contain file interest passev need check event actual involv file haskel daemonwatch passev mvar daemonst chan event filepath filepath fsnotifyev io passev _ _ _ _ fsnotifyremov return passev state channel src tgt fsevent abs_path canonicalizepath fsnotifyeventpath fsevent state readmvar state let issourcefil equalfilepath abs_path src istargetfil equalfilepath abs_path tgt pass case state idl issourcefil istargetfil tangl issourcefil stitch istargetfil pass let etyp issourcefil writesourc els writetarget writechan channel etyp abs_path haskel daemonwatch setwatch daemon setwatch src db listsourcefil liftio mapm canonicalizepath tgt db listtargetfil liftio mapm canonicalizepath fsnotifi ask manag channel ask eventchannel let abs_dir nub map takedirectori src tgt rel_dir mapm makerelativetocurrentdirectori abs_dir state ask daemonst stopact liftio mapm dir fsnotifywatchdir fsnotifi dir const true passev state channel src tgt abs_dir watchesmvar ask watch putmvar watchesmvar stopact logdebug display watch tshow rel_dir haskel daemonwatch closewatch daemon closewatch stopact takemvar ask watch liftio sequence_ stopact logdebug suspend watch main loop haskel daemonimport import riodirectori makerelativetocurrentdirectori canonicalizepath import riofilepath equalfilepath takedirectori mainloop fed event handl haskel daemonmainloop tryentangl monadread env monadunliftio monadio haslogfunc env mayb doc entangl env tryentangl msg action catch void runentangledhuman msg action err entanglederror logerror display formaterror err mainloop event daemon mainloopcas first event need wait bit may come haskel mainloopcas mainloop writesourc abs_path rel_path makerelativetocurrentdirectori abs_path logdebug display tangl trigger tpack rel_path setdaemonst tangl closewatch tryentangl tangl ppretti rel_path insertsourc rel_path tangl tangleal getannot clearorphan setwatch setdaemonst idl mainloop writetarget abs_path rel_path liftio makerelativetocurrentdirectori abs_path logdebug display stitch trigger tpack rel_path setdaemonst stitch closewatch tryentangl stitch ppretti rel_path inserttarget rel_path stitch stitchal tryentangl tangl stitch ppretti rel_path tangl tangleal getannot setwatch setdaemonst idl mainloop _ return initialis haskel daemonstart printmsg doc daemon printmsg liftio consoleputtermin initsess daemon initsess cfg view config abs_path sort getinputfil cfg null abs_path throwm systemerror input file rel_path mapm makerelativetocurrentdirectori abs_path printmsg consolebann runentangledhuman initi tell doc palign pvsep map consolebullet ppretti monitor text consolefileread rel_path pline insertsourc rel_path tangl tangleal getannot setwatch getannot hasconfig env monadread env monadio monadthrow monaderror entanglederror n annot n getannot cfg view config configannot cfg annotatenak throwm configerror run daemon nake annot return selectannot cfg runsess hasconfig env haslogfunc env hasconnect env monadread env monadio filepath runsess inputfil hsetbuff stdout linebuff cfg view config let cfg cfg configwatchlist configwatchlist cfg map tpack inputfil conn view connect logfunc view logfuncl fsnotifi liftio fsnotifystartmanag channel newchan daemonst newmvar idl watch newemptymvar let session session watch fsnotifi channel daemonst conn cfg logfunc runrio session undaemon initsess mapm_ mainloop getchancont channel liftio fsnotifystopmanag fsnotifi tangl haskel filesrctangleh languag noimplicitpreludescopedtypevari modul tangl import rio hide tri mani import qualifi riotext import qualifi riomap importlazymap import textmegaparsec monadparsec parsec pars getoffset chunk mani eof manytil anysingl tri lookahead takewhilep takewhilep import textmegaparsecchar space import controlmonadst monadst get modifi statet evalstatet import controlmonadexcept monaderror import liststream import document import config config hasconfig config lookuplanguag configlanguag annotatemethod configsyntax tangleimport parsemarkdown generatecod task tangl mean pars markdown document gener annot sourc file pars markdown done line per line basi dont tri pars markdown rather tri detect line start end codeblock rememb golden rule untangl gener sourc return markdown byte ad unit test check exactli properti css attribut well reus attribut parser later put separ modul haskel tangleimport import textregextdfa haskel filesrcattributesh languag noimplicitprelud modul attribut import rio import qualifi riotext attributesimport parseattribut haskel attributesimport import document codeproperti import textmegaparsec monadparsec takewhilep chunk endbi import textmegaparsecchar space letterchar one function use attribut parser haskel parseattribut attribut monadparsec e text codeproperti attribut codeclass codeid codeattribut endbi space identifi valu anyth goe long doesnt conflict space separ curli brace delimit list haskel parseattribut cssidentifi monadparsec e text text cssidentifi firstlett letterchar rest takewhilep identifi notelem string return tsingleton firstlett rest cssvalu monadparsec e text text cssvalu takewhilep valu notelem string class class start period contain space curli brace haskel parseattribut codeclass monadparsec e text codeproperti codeclass chunk codeclass cssidentifi id id start hash contain space curli brace haskel parseattribut codeid monadparsec e text codeproperti codeid chunk codeid cssidentifi attribut gener attribut written keyvaluepair separ equal sign space curli brace allow insid haskel parseattribut codeattribut monadparsec e text codeproperti codeattribut key cssidentifi _ chunk codeattribut key cssvalu quasipars markdown pars markdown use megaparsec pars code block todo add wirth syntax notat parser code block delimit three backquot close three backquot pandoc allow number larger three use symbol like tild form entangl react follow unind templat markdown referencelanguagekeyvalu code code block one follow refer block exactli one refer id refer exactli one class give languag code block languag exampl markdown rust hellorust printlnhello rust file block keyvalu pair give path file filepath absolut rel directori entangl run exactli one class give languag block languag exampl markdown rust mainfunct filesrcmainr fn main hellorust ignor block anyth match previou two run configur regex haskel parsemarkdown type match mayb text text text text matchcodehead configsyntax text mayb codeproperti text matchcodehead syntax line line matchcodestart syntax frommayb getlanguag getfilenam getreferencenam getheaderlen line els noth getlanguag mayb codeproperti getlanguag _ _ _ lang line extractlanguag syntax match return map codeclass lang getfilenam mayb codeproperti getfilenam _ _ _ file line extractfilenam syntax match return map codeattribut file file getreferencenam mayb codeproperti getreferencenam _ _ _ ref line extractreferencenam syntax match return map codeid ref getheaderlen mayb codeproperti getheaderlen _ _ _ headlen line extractproperti syntax header match return codeattribut header headlen matchcodefoot configsyntax text mayb text matchcodefoot syntax line line matchcodeend syntax line els noth extract data list codeproperti case languag given misspel system awar give error messag warn haskel parsemarkdown getlanguag monadread config codeproperti programminglanguag getlanguag return nolanguag getlanguag codeclass cl _ mayb unknownclass cl knownlanguag ask cfg languagenam lookuplanguag cfg cl getlanguag _ xs getlanguag xs hand identify left parser fail codeblock includ normal markdown file attribut given filenam also identify id also given take preced use statet referencecount keep track number refer name concaten code block order haskel parsemarkdown getrefer monadst referencecount codeproperti mayb referenceid getrefer return noth getrefer codeid x_ newrefer referencenam x getrefer codeattribut k vx k file getrefer xs b newrefer referencenam v return b otherwis getrefer xs getrefer _x getrefer xs keep separ map link certain refer toplevel file haskel parsemarkdown getfilepath codeproperti mayb filepath getfilepath noth getfilepath codeattribut k vx k file tunpack v otherwis getfilepath xs getfilepath _x getfilepath xs getfilemap referencepair filemap getfilemap mfromlist mapmayb filepair filepair ref codeblock path getfilepath codeproperti case codelanguag knownlanguag l return path referencenam ref l _ noth refer build referencemap defin referencecount haskel parsemarkdown data referencecount referencecount currentdocu filepath refcount map referencenam int countrefer monadst referencecount referencenam int countrefer r x get mfindwithdefault r refcount modifi refcount minsert r x refcount return x newrefer monadst referencecount referencenam referenceid newrefer n doc get currentdocu x countrefer n return referenceid doc n x pars document todo add wirth syntax notat parser use two parser creat larger parser work linebylin basi defin sever helper creat parser liststream text use singl line parser text haskel tangleimport import liststream parselin parselinenot tokenlin pars markdown first tri pars code block given store codeblock fail line interpret markdown store plaintext haskel parsemarkdown type documentpars readert config statet referencecount parsec text liststream text codeblock monadparsec e liststream text monadread config monadst referencecount content referencepair codeblock config ask linenum unpo sourcelin pstatesourcepo stateposst getparserst linenum getoffset prop begin tokenlin matchcodehead configsyntax code unlin manytil anysingl code line tri lookahead tokenlin matchcodefoot configsyntax _ end tokenlin matchcodefoot configsyntax languag getlanguag prop ref getrefer prop return case ref noth plaintext unlin begin code end ref plaintext begin refer ref plaintext end ref codeblock languag prop code linenum normaltext monadparsec e liststream text monadread config content referencepair normaltext config ask text unlin tokenlinenot matchcodehead configsyntax return plaintext text markdown documentpars content referencepair markdown mconcat mani codeblock normaltext parsemarkdown monadread env hasconfig env monadthrow filepath text document parsemarkdown f cfg view config let result pars evalstatet runreadert markdown cfg referencecount f mempti f liststream tline case result left err throwm tangleerror tshow err right content ref return document mfromlist ref content getfilemap ref gener output file indent tangl indent sensit given two code block markdown python multipli x python factori x rangen multipli get code python x rangen x indent done line map append indent unlin distinct empti line indent invers line unlin doesnt append final newlin haskel tangleimport import textutil indent unlin haskel generatecod data codelin plaincod text nowebrefer referencenam text deriv eq show type codepars parsec void text tri pars everi line code block noweb refer fail line accept normal sourc text noweb refer stand alon line mayb indent white space space end line ignor indent refer possibl space nospacesalow function parsecod take text code block gener list codelin either plaincod nowebrefer haskel generatecod nowebrefer codepars codelin nowebrefer indent takewhilep noth elem string _ chunk id takewhilep noth notelem string _ chunk space eof return nowebrefer referencenam id indent parsecod referencenam text codelin parsecod name map parselin tline parselin l fromright plaincod l pars nowebrefer tunpack unreferencenam name l code expans dont want code block refer use keep histori visit referenceid prevent circular depend part move valid stage use lazi map provid recurs becom cumbersom also detect cycl depend graph haskel generatecod type expandedcod lmmap referencenam text type annot referencemap referenceid text map expand code block gener use induct pattern illustr list suppos alreadi result output function g output input output gener element output given input rest output f gener output follow haskel f input output f input output output map gener input gener g output lazi evalu rest haskel generatecod expandedcod monadio monadread env haslogfunc env annot referencemap expandedcod expandedcod annot ref result result lmfromset expand referencenam ref expand name unlin mapm annot ref expandcodesourc result name referencesbynam ref name expandcodesourc monadio monadread env haslogfunc env expandedcod referencenam text text expandcodesourc result name unlin mapm codelinetotext parsecod name codelinetotext plaincod x return x codelinetotext nowebrefer name indent frommayb logwarn unknown refer display name display name return result lm name two type annot nake annot creat output code without annot expans possibl untangl haskel generatecod selectannot monaderror entanglederror config annot selectannot cfgconfig case configannot annotatenak rmap rid runreadert annotatenak rmap rid cfg annotatestandard rmap rid runreadert annotatecom rmap rid cfg annotateproject rmap rid runreadert annotateproject rmap rid cfg comment annot add annot comment locat origin code block put comment separ modul also address pars back gener comment haskel tangleimport import comment annotatecom annotateproject annotatenak entangl comment haskel filesrccommenth languag noimplicitprelud modul comment import rio import qualifi riotext commentimport generatecom parsecom haskel commentimport import controlmonadexcept tangl file start singl line header comment follow nest block possibl indent code delimet line c entangl begin referencenam code content entangl end entangl bit store delim haskel generatecom delim text delim given content comment function gener comment line follow prescript haskel commentimport import config config configlanguag configcom languagefromnam haskel generatecom getlangnam monaderror entanglederror programminglanguag text getlangnam unknownclass cl throwerror unknownlanguageclass cl getlangnam nolanguag throwerror missinglanguageclass getlangnam knownlanguag langnam return langnam comment monadread config monaderror entanglederror programminglanguag text text comment unknownclass cl _ throwerror unknownlanguageclass cl comment nolanguag _ throwerror missinglanguageclass comment knownlanguag langnam text cfg ask mayb throwerror systemerror languag name langnam config lang return formatcom lang text languagefromnam cfg langnam commentstart configcom text commentstart block x _ x commentstart line x x commentend configcom mayb text commentend block _ x x commentend line _ noth formatcom configlanguag text text formatcom lang text pre text post pre commentstart languagecom lang delim post mayb commentend languagecom lang use write annotatecom function given referenceid retriev code text annot begin end comment line haskel commentimport import qualifi riomap import document import textutil unlin import qualifi format haskel generatecom standardprecom referenceid text standardprecom referenceid file referencenam name count begin tpack file name tshow count getrefer monaderror entanglederror referencemap referenceid codeblock getrefer ref ref mayb throwerror referenceerror found tshow ref return ref ref linedirect monadread config monaderror entanglederror referenceid codeblock text linedirect ref code config ask lang getlangnam codelanguag code spec mayb throwerror configerror line direct configur lang return configlinedirect lang mayb throwerror configerror error format tshow spec return formatformatmayb spec mfromlist linenumb text tshow frommayb codelinenumb code filenam tpack referencefil ref annotatenak monadread config monaderror entanglederror referencemap referenceid text annotatenak ref ref config ask code getrefer ref ref configuselinedirect line linedirect ref code return unlin line codesourc code els return codesourc code annotatecom monadread config monaderror entanglederror referencemap referenceid text annotatecom ref ref code getrefer ref ref nake annotatenak ref ref pre comment codelanguag code standardprecom ref post comment codelanguag code end return unlin pre nake post annotateproject monadread config monaderror entanglederror referencemap referenceid text annotateproject ref refreferenceid file _ _ code getrefer ref ref nake annotatenak ref ref let line frommayb codelinenumb code pre comment codelanguag code standardprecom ref project tpack file tshow line post comment codelanguag code end return unlin pre nake post headercom configlanguag filepath text headercom lang path formatcom lang languag languagenam lang filenam tpack path pars comment haskel commentimport import textmegaparsec monadparsec chunk skipmanytil anysingl takewhilep takerest import textmegaparseccharlex decim import attribut attribut cssidentifi cssvalu comment line pars back untangl first line top header comment dont know yet languag go skipmanytil find delim text haskel parsecom tophead monadparsec e text codeproperti tophead _ skipmanytil anysingl open comment chunk delim attr attribut _ takerest return attr parser alway combin comment give valu origin parser text give indent level pars comment haskel parsecom comment monadparsec e text configlanguag text comment lang p indent takewhilep initi indent elem string _ chunk commentstart languagecom lang delim x p _ chunk frommayb commentend languagecom lang space eof _ takerest return x indent haskel parsecom beginblock monadparsec e text referenceid beginblock _ chunk begin doc cssvalu _ chunk name cssidentifi _ chunk count decim _ chunk _ takerest return referenceid tunpack doc referencenam name count endblock monadparsec e text endblock void chunk end pars anyth megaparsec megaparsec consid prefer older parsec bit work pars differ thing string though pars list item haskel filesrcliststreamh languag noimplicitprelud modul liststream import rio import riolist splitat headmayb import textmegaparsec parsec monadparsec token pars satisfi stream visualstream traversablestream posstat sourcepo mkpo unpo instanceliststream liststreamhelp linepars minim definit stream must defin tokenstochunk chunktotoken chunklength take_ taken_ takewhile_ als like implement visualstream need showtoken traversablestream need reachoffset instanc overlap char string well wrap liststream newtyp haskel instanceliststream newtyp liststream liststream unliststream deriv show foldabl semigroup monoid functor applic monad instanc eq ord show stream liststream liststreamassociatedtyp liststreammethod instanc eq ord show visualstream liststream listvisualstreammethod instanc eq ord show traversablestream liststream listtraversablestreammethod haskel liststreamassociatedtyp type token liststream type token liststream convert token chunk pure haskel liststreammethod tokentochunk proxi pure token chunk even chunk token ident function haskel liststreammethod tokenstochunk proxi id chunktotoken proxi id chunklength proxi length chunkempti proxi null fact definit ident instanc definit stream string megaparsec haskel liststreammethod take_ liststream noth take_ liststream xx x liststream xs taken_ n liststream xs n liststream xs null xs noth otherwis h liststream h splitat n xs takewhile_ p liststream xs liststream h h break p xs haskel listvisualstreammethod showtoken proxi show here thing get differ offset line sourc file therefor sourcecolumn alway precis work reachoffset bit guesswork haskel liststreamhelp offsetsourcepo int sourcepo sourcepo offsetsourcepo offset sourcepossourcepo sourcepo sourcelin mkpo unpo sourcelin offset haskel listtraversablestreammethod reachoffset offset stateposst repr state sourcepo offsetsourcepo offset pstateoffset pstatesourcepo input liststream drop offset pstateoffset unliststream pstateinput repr mayb end stream show headmayb unliststream input state state pstateinput input pstateoffset offset pstatesourcepo sourcepo textpars token haskel linepars type linepars parsec void text parselin linepars text mayb text parselin p either const noth x x pars p parselinenot linepars text mayb text parselinenot p either const const noth pars p tokenlin monadparsec e liststream text text mayb tokenlin f token f mempti tokenlinenot monadparsec e liststream text text mayb text tokenlinenot f satisfi isnoth f tokenp monadparsec e liststream text linepars text tokenp tokenlin parselin test list haskel filetestliststreamspech modul liststreamspec import testhspec import testquickcheck import textmegaparsec import datavoid import liststream liststreamprop liststreamspec spec liststreamspec liststreamspec list integ haskel liststreamprop prop_pars eq parsec e bool prop_pars p input expect success pars p input success left _ fals success right x x expect parseani show ord eq parsec void liststream parseani takewhilep noth const true prop_token int bool prop_token xs prop_pars parseani liststream xs xs haskel liststreamspec describ pars integ takewhilep yield input properti prop_token youll ever need markdown markdown wide use write document support mani blog engin github readm name mani varieti dialect extens markdown standard describ dare firebal websit one place mani flavour markdown meet pandoc pandoc convert markdown mani differ format like html latex pdf latex rtf doc epub even back markdown differ flavour littl known featur extens markdown make versatil suitabl rich text content especi use pandoc takeaway messag never write document latex html directli write note report paper powerpoint present awkward wysiwyg editor web content im talk medium use markdown might ask johan shush answer alway go pandoc primer markdown way write rich content ie text document hierarchi imag list quot etc plain text use human readabl format format aim mimic plain text format result markdown level header lorem ipsum dolor sit amet consectetur adipisc elit sed eiusmod tempor incididunt ut labor et dolor magna aliqua level header ut enim ad minim veniam qui nostrud exercit ullamco labori nisi ut aliquip ex ea commodo consequat list item anoth item also level header dui aut irur dolor reprehenderit volupt velit ess cillum dolor eu fugiat nulla pariatur quot excepteur sint occaecat cupidatat non proident sunt culpa qui officia deserunt mollit anim id est laborum read dare firebal syntax basic markdown highli intuit mani instanc standard markdown suffic support equat citat manag cross refer number figur howev pandoc support mani extens flavour markdown evolv year markdown feel bit like natur languag lead critiqu use markdown technic documentshttpswwwericholschercomblogmardontusemarkdownfortechnicaldoc highlight extens clearli document support pandoc transform markdown versatil extend format suitabl even technic demand document yet easi use demand aris flavour extens mani extens markdown wide use other one influenti flavour markdown superset github major addit delimit code block markdown javascript var factori n n n factorialn attribut noth good ever come php except php markdown add attribut markdown element markdown document adorn css style attribut append curli brace id class class keyvalu exampl markdown proof proof section color convert html look like html h idproof classsect colorredth proofh latex latex hypertargetproof subsectionth prooflabelproof case latex color attribut well class ignor pandoc default doesnt know proof id attach header use document make crossrefer attribut syntax also appli code block line start python equival python div element div element ad use three colon markdown warn warn use write nonstandard element render output format html chang style sheet gener latex howev need bit work pandoc come pandoc support filter element creat relev output well get back yaml metadata inform usual contain html header region includ yaml metadata block block delimit hyphen top document markdown titl theorem right angl triangl author pythagora samo date bc hot summer night also place configur option pandoc filter citat citat manag use pandocciteproc plugin work bibtex anoth bibliographi databas includ bibliographi ad line yaml header block say store refer refbib want creat dedic section call refer list citat markdown bibliographi refbib referencesectiontitl refer mani way cite paper syntax document pandoc manual basic citat look like hid hid entri bibliographi sever editor vscode emac even support autocomplet includ bibliographi equat equat enter use famou latex dsl equat use singl charact delimit inlin equat doubl delimit full width equat markdown given right angl triangl side b hypotenus c may state b c convert latex base output work trivial html probabl best use mathjax enabl pandoc mathjax standalon flag promis show markdown extend arbitrari function use pandoc inevit get bit technic reward high pandoc basic pandoc read write document mani format convert nativ intermedi represent well creat document name lasttheoremmd enter follow markdown titl last theorem author p de fermat integ valu b c n equat bn cn solut truli remark proof see pandoc read document run pandoc f markdownyaml_metadata_block nativ lasttheoremmd give slightli edit readabl haskel pandoc meta unmeta fromlist author metainlin str pspacestr despacestr fermat titl metainlin str lastspacestr theorem para str ispacestr statespacestr thatspac str forspacestr integerspacestr valuesspac str ofspacemath inlinemath astr space math inlinemath bstr space math inlinemath cspacestr andspac math inlinemath n str spacestr thespacestr equat para math displaymath bn cn para str hasspacestr nospacestr solutionspac str ispacestr havespacestr aspac str trulyspacestr elegantspacestr proof spacestr forspacestr thisspacestr butspac str thisspacestr isspacestr notspac str thespacestr placespacestr tospac str givespacestr ye haskel syntax mean think mean use nativ output pandoc use start develop filter serv illustr pandoc work your hacker youll never look let creat pdf mathemat wizardri pandoc f markdownyaml_metadata_block latex lasttheorempdf lasttheoremmd result nice pdf render typeset paper famou theoremlasttheorempng pandoc filter big problem exampl equat number pandoc filter let chang intermedi represent let tri pandoceqno filter filter written python use pypandoc languag read intermedi json represent work pip instal user pandoceqno well need chang lasttheoremmd document bit get equat number add id equat markdown bn cn eqfermat also add sentenc end markdown prove inexist solut equat eqfermat elud mathematician centuri invok equat number filter add filter pandoceqno argument command line pandoc f markdownyaml_metadata_block latex filter pandoceqno lasttheorempdf lasttheoremmd typeset paper famou theorem number equationslasttheorempng pandoc command line grow hand rather quickli advis manag pandoc set bash script make file whatev prefer lua filter pandoc builtin support filter written lua filter written lua gener faster written python extern languag lua filter forego document pass extern program via json rather work directli abstract syntax tree repres pandoc let add featur add follow bud math paper markdown warn modular form ellipt curv ahead pars pandoc need extens fenced_div enabl pandoc f markdownyaml_metadata_blockfenced_div filter pandoceqno nativ lasttheoremmd end output express haskel div warn para str modularspacestr formsspacestr andspac str ellipticspacestr curvesspacestr ahead gener html exampl add proper css warn class chang look warn howev gener pdf there chang let make filter creat nice colour box latex output defin filter run div element file warningdivlua lua function divel elclass warn insert element front tableinsert elcont pandocrawblocklatex beginwarn insert element back tableinsert elcont pandocrawblocklatex endwarn end return el end filter check div class warn add latex rawblock start end div run pandoc luafilterwarningdivlua convert div element latex string latex beginwarn modular form ellipt curv ahead endwarn standard latex well need defin macro warningtex latex usepackagetcolorbox newenvironmentwarn begintcolorboxcolbacktitleredwhit titlewarningcoltitleblack fonttitlebfseri endtcolorbox run pandoc gener pdf h option use includ file gener output pandoc f markdownyaml_metadata_blockfenced_div filter pandoceqno luafilt warningdivlua h warningtex latex lasttheorempdf lasttheoremmd mention pandoc command line tend grow hand typeset paper famou theorem number equat warninglasttheorempng sky limit grant unlock full power markdown web youll need know html css tweak pdf output imposs high standard need grok latex reason creat ecosystem script theme tutori eas learn curv also code editor offer better support varieti markdown dont mean clutter edit experi distract tooltip snippet etc correct effici highlight proper outlin support teaser possibl pandoc mention creat slide show revealj liter program entangl document pandoc excel go ahead write content markdown entangl johan hid jhiddingesciencecenternl name entangl liter program markdown synopsi entangl input file help default watch input file chang entangl insert input file insert input file databas descript entangl tool aid liter program markdown liter program program code block insid natur languag literari work code block extract gener sourc file suitabl compil process known tangl use entangl also invers patch chang gener file back markdown document also known stitch entangl run daemon background trigger write event file involv configur entangl manag entangledtoml file search parent folder homeconfigentangl gener option h help display friendli help messag default print entangledtoml file default set titl entangl liter program swiss armi knife author johan hid entangl make write liter program easier keep code block markdown uptod gener sourc file monitor tangl sourc file chang master document sourc file reflect practic mean write well document code use markdown use program languag like forc use keep debug use ide featur without chang gener report pdf html sourc see exampl right preliminari modul entangl use rio save lot standard import statement come perk readerio pattern unliftio one instanc use lazi map though haskel importlazymap import qualifi datamaplazi lm use text modul everywher pars done megaparsec use fsnotifi watch event filesystem error haskel filesrcerrorsh languag noimplicitprelud modul error import rio data entanglederror tangleerror text stitcherror text referenceerror text cyclicrefer text unknownlanguageclass text databaseerror text systemerror text missinglanguageclass notyetimpl text configerror text unknownerror deriv show ord eq typeabl toentanglederror show e text entanglederror either e either entanglederror toentanglederror _ right x right x toentanglederror f left x left f tshow x instanc except entanglederror formaterror entanglederror text formaterror tangleerror tangl formaterror stitcherror stitch formaterror x tshow x design entangl commandlin tool structur around sqlite databas daemon tie differ commandlin facil loop manag fsnotifi python root hello doesntexist world target file share refer scheme display scheme fileascm scheme filebscm simpl test test basic oneshot behaviour entangl scheme filehelloscm helloworld scheme helloworld display hello world newlin factori scheme filefactorialscm factori display factori newlin scheme factori defin factori n let loop x n n zero n x loop x n n test multilay scheme filecasescm b display c scheme b display b test file directori get remov orphan scheme filesitsinnesteddirectoriesscm let yin lambda cc display cc callcc lambda c c yang lambda cc display cc callcc lambda c c yin yang scheme filesitsunchangedscm defin lambda h lambda x h lambda x x lambda x h lambda x x test multipl output scheme display scheme b display b case scheme filecasescm b case scheme filecasescm edit one multipl instanc scheme display scheme fileascm display scheme fileascm display scheme filebscm display b commandlin test test run bash start set markdown file sequenti patch see entangl give correct output differ test suit test extens suit content folder test dhall md diff file copi temporari folder command test file execut temporari folder delet run runtestssh thing take long time mean cabal recompil code develop test may want run test local postmortem case run u select test your work run local x quit first failur runtestssh xdu basic rational entangl simpl program work sometim subtl state stead load debugg check state memori someth goe wrong work sqlite databas action daemon program commandlin allow easi inspect happen tri declar file twice scheme filehelloscm display hello scheme filehelloscm display world newlin simpl test block comment test basic oneshot behaviour entangl c filehelloc includ stdioh includ stdlibh int main helloworld return exit_success c helloworld printfhello worldn factori c filefactorialc includ stdioh includ stdlibh factori int main printfu un factori return exit_success c factori unsign factorialunsign n unsign n return give line direct c filetestcc includ main c includ includ iostream c main int main hello return c hello stdcout hello world stdendl tri differ syntax c filemainc includ stdioh includ stdlibh int main printfhello worldn return exit_success titl test tangl present first program cpp filehellocc includ iostream includ cstdlib int main stdcout hello world stdendl return exit_success print hello world consol empti code block problem scm filelalascm titl test present first program cpp import includ iostream includ cstdlib cpp filehellocc import int main mainbodi print hello world consol cpp mainbodi stdcout hello world stdendl make sure exit properli cpp mainbodi return exit_success titl test hs filehelloh main io main putstrln hello world scm filehelloscm display hello world newlin titl test present first program cpp filehellocc includ iostream includ cstdlib int main mainbodi print hello world consol cpp mainbodi stdcout hello world stdendl return exit_success titl cyclic refer tangl file fail cyclicrefer error cpp test stdcout time becom loop n test cpp fileloopcc includ iostream includ cstdlib int main test return exit_success python fileapi pass python fileapi pass python b python b