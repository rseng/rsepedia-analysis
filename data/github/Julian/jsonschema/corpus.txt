secur polici support version gener latest releas jsonschema version support receiv updat report vulner report secur vulner pleas send email juliansecuritygrayvinescom subject line secur jsonschema best respond within hour acknowledg messag discuss step vulner accept advisori sent via github secur advisori function nonsensit discuss relat polici feel free open issu issu tracker json schema test suit contributor covenanthttpsimgshieldsiobadgecontributorcovenantbaaaasvghttpsgithubcomjsonschemaorggithubblobmaincode_of_conductmd project statu activ project reach stabl usabl state activ developedhttpswwwrepostatusorgbadgeslatestactivesvghttpswwwrepostatusorgact financi contributor open collectivehttpsopencollectivecomjsonschemaallbadgesvglabelfinancialcontributorshttpsopencollectivecomjsonschema build statushttpsgithubcomjsonschemaorgjsonschematestsuiteworkflowstestsuitesanitycheckingbadgesvghttpsgithubcomjsonschemaorgjsonschematestsuiteactionsqueryworkflowatestsuitesanitycheck repositori contain set json object implementor json schema valid librari use test valid meant languag agnost requir json parser convers json object test within test framework choic still job valid implementor structur test test suit contain test directori root repositori insid directori subdirectori draft version specif insid draft directori number json file one special subdirectori subdirectori contain json file meant specif test purpos json file logic group set test case togeth often group properti test alway subdirectori describ next section insid json file singl array contain object easiest illustr structur exampl json descript descript test case schema descript schema data test valid type string test descript test valid instanc data instanc valid valid true descript test invalid instanc data valid fals short descript schema test test test test array object descript case instanc test boolean indic whether valid invalid test subdirectori current one subdirectori may exist within draft directori option contain test consid option coverag json schema specif releas well cover suit includ draft addit coverag alway welcom particularli bug encount realworld implement draft consid frozen less effort put backport new test version contribut welcom especi implement add support implement see anyth miss current support draft incorrect draft still accept bug fix pleas file issuehttpsgithubcomjsonschemaorgjsonschematestsuiteissu submit prhttpsgithubcomjsonschemaorgjsonschematestsuit use test suit suit use clojur jinxhttpsgithubcomjuxtjinx jsonschemahttpsgithubcomtatutjsonschema coffeescript jsckhttpsgithubcompandastrikejsck common lisp jsonschemahttpsgithubcomfisxojjsonschema c modern c json schema validatorhttpsgithubcompboettchjsonschemavalid dart json_schemahttpsgithubcompatefaciojson_schema elixir ex_json_schemahttpsgithubcomjonasschmidtex_json_schema erlang jessehttpsgithubcomforgetjess go gojsonschemahttpsgithubcomsigugojsonschema validatejsonhttpsgithubcomcesantavalidatejson haskel aesonschemahttpsgithubcomtimjbaesonschema hjsonschemahttpsgithubcomseagreenhjsonschema java jsonschemavalidatorhttpsgithubcomdaveclaytonjsonschemavalid everitorgjsonschemahttpsgithubcomeveritorgjsonschema networkntjsonschemavalidatorhttpsgithubcomnetworkntjsonschemavalid justifyhttpsgithubcomleadponyjustifi snowhttpsgithubcomssilvermansnowyjson jsonschemafriendhttpsgithubcomjimblacklerjsonschemafriend javascript jsonschemabenchmarkhttpsgithubcommusculajsonschemabenchmark directschemahttpsgithubcomireneknappdirectschema ismyjsonvalidhttpsgithubcommafintoshismyjsonvalid jassihttpsgithubcomiclanzanjassi jayschemahttpsgithubcomnatesilvajayschema jsonschemavalidhttpsgithubcomericgjjsonschemavalid jsonaryhttpsgithubcomjsonaryjsjsonari jsonschemahttpsgithubcomtdegruntjsonschema requestvalidatorhttpsgithubcombugventurerequestvalid skeemashttpsgithubcomprestaulskeema tvhttpsgithubcomgeraintlufftv zschemahttpsgithubcomzagginozschema jsenhttpsgithubcombugventurejsen ajvhttpsgithubcomepoberezkinajv djvhttpsgithubcomkorziodjv nodej nodej develop suit also avail npmhttpswwwnpmjscompackagejsonschemaorgtest packag nodespecif support maintain separ repositoryhttpsgithubcomjsonschemaorgjsonschematestsuitenpm also welcom contribut net newtonsoftjsonschemahttpsgithubcomjamesnknewtonsoftjsonschema manateejsonhttpsgithubcomgregsdennismanateejson perl jsonschemadrafthttpsgithubcomkarenetheridgejsonschemadraft jsonschematinyhttpsgithubcomkarenetheridgejsonschematini testjsonschemaacceptancehttpsgithubcomkarenetheridgetestjsonschemaaccept php opisjsonschemahttpsgithubcomopisjsonschema jsonschemahttpsgithubcomjustinrainbowjsonschema jsonguardhttpsgithubcomthephpleaguejsonguard postgresql postgresjsonschemahttpsgithubcomgavinwahlpostgresjsonschema is_jsonb_validhttpsgithubcomfurstenheimis_jsonb_valid python jsonschemahttpsgithubcomjulianjsonschema fastjsonschemahttpsgithubcomseznampythonfastjsonschema hypothesisjsonschemahttpsgithubcomzachdhypothesisjsonschema jschonhttpsgithubcommarksparkzajschon rubi jsonschemahttpsgithubcomhoxworthjsonschema json_schemerhttpsgithubcomdavishmcclurgjson_schem rust jsonschemahttpsgithubcomstrangerjsonschemar valicohttpsgithubcomrustlessvalico swift jsonschemahttpsgithubcomkylefjsonschemaswift use well pleas fork send pull request ad list contribut see someth miss incorrect pull request welcom saniti check place test test suit run binjsonschema_suit check tox run automat github actionshttpsgithubcomjsonschemaorgjsonschematestsuiteactionsqueryworkflowatestsuitesanitycheck well v add mypi support add support python v properli report deprec warn right stack level v addit perform improv resolv ref v resolv ref perform improv v fix undesir fallback brute forc contain uniqu check certain input type implement pep protocol valid class v pin importlibresourc v use importlibresourc load schema ensur element array verifi uniqu uniqueitem v fix dependentschema properli consid nonobject instanc valid v fix prefixitem indic item invalid within instanc path v add python list support python version v fix declar minimum support python version v partial support draft well thank thoma schmidt harald nezbeda fals properli consid nonequ even recurs within contain part chang uniqueitem valid may slower case pleas feel free report signific perform regress though case may difficult address given specif requir cli improv particular support output option plain default pretti argument control output format futur work may add addit machinepars output format code surround default_typ legaci mechan specifi type valid remov per deprec polici valid use typecheck object custom set python type correspond json schema type valid error json_path attribut describ locat json path format support ip address domain name format improv support python drop python_requir properli set multipleof could overflow given suffici larg number overflow occur jsonschema fall back use fraction divis jsonschema__version__ jsonschemavalidatorsvalid jsonschemavalidatorsmeta_schema jsonschemarefresolverin_scop deprec pass secondargu schema validatoriter_error validatoris_valid v ad format_nongpl setuptool extra instal format depend nongpl v temporarili revert switch jsregex resolv v regular express throughout schema respect ecma dialect recommend specif v fix bug fals consid equal const enum v fix bug extend valid preserv notion valid properti contain id inform v support draft draft draft default new typecheck object complex type definit overrid fall back isod datetim format checker longer attempt accord specif v support python drop improv error messag uniqueitem additionalproperti fix issu errortre handl multipl error v improv perform cpython ad cach around ref resolut v ad cli ad absolut path absolut schema path error ad relev metaschema load via pkgutil v ad by_relev best_match fix format allow ad format nonstr fix uri format reject uri refer v compil host name regex allow arbitrari object type v support rfc datetim conform spec fix error path additionalitem item fix word min maxproperti v ad creat extend jsonschemavalid remov validatormixin fix array indic ref resolut fix unknown scheme defrag handl v better error traceback rais except errortre key instanc __cause__ v attribut validationerror ad validatormixindescend fix bad refresolutionerror messag v canonic uri allow attach except format error v support draft support format long int fix number issu ref support draftvalid default validationerrorpath sequenti order ad validatormixin v full support json refer valid regist new valid document bugfix uniqueitem uniqu improp v partial support json pointer ref deprec valid replac draftvalid slightli differ interfac validatormeta_validatefals v bugfix issu wrong behavior depend properti valid fix miswritten test v bugfix issu requir path error object issu multipl type valid nonobject v preliminari support programmat access error detail issu certainli corner case dont right thing yet work mostli order make happen also clean thing bit number deprec necessari stop_on_error deprec validator__init__ use validatoriter_error instead number_typ string_typ deprec well use typesnumb string instead meta_valid also deprec instead accept argument valid iter_error is_valid bugfix two v default unknown type properti error consist schema python support remov depend securetyp hash bug resolv numer bug fix notabl divisiblebi error float bunch miss typecheck irrelev properti jsonschema pypi python ci readthedoc precommit zenodo pypi imag httpsimgshieldsiopypivjsonschemasvg alt pypi version target httpspypiorgprojectjsonschema python imag httpsimgshieldsiopypipyversionsjsonschemasvg alt support python version target httpspypiorgprojectjsonschema ci imag httpsgithubcomjulianjsonschemaworkflowscibadgesvg alt build statu target httpsgithubcomjulianjsonschemaactionsqueryworkflowaci readthedoc imag httpsreadthedocsorgprojectspythonjsonschemabadgeversionstablestyleflat alt readthedoc statu target httpspythonjsonschemareadthedocsioenst precommit imag httpsresultsprecommitcibadgegithubjulianjsonschemamainsvg alt precommitci statu target httpsresultsprecommitcilatestgithubjulianjsonschemamain zenodo imag httpszenodoorgbadgesvg target httpszenodoorgbadgelatestdoi jsonschema implement json schema httpsjsonschemaorg_ specif python codeblock python jsonschema import valid sampl schema like wed get jsonload schema type object properti price type number name type string except rais valid instanc valid validateinstancenam egg price schemaschema valid instancenam egg price invalid schemaschema doctest ignore_exception_detail traceback recent call last validationerror invalid type number also use consol codeblock bash jsonschema instanc samplejson sampleschema featur partial support draft httpspythonjsonschemareadthedocsioenlatestvalidatejsonschemadraftvalidator_ draft httpspythonjsonschemareadthedocsioenlatestvalidatejsonschemadraftvalidator_ except dynamicref recursiveref vocabulari inprogress full support draft httpspythonjsonschemareadthedocsioenlatestvalidatejsonschemadraftvalidator_ draft httpspythonjsonschemareadthedocsioenlatestvalidatejsonschemadraftvalidator_ draft httpspythonjsonschemareadthedocsioenlatestvalidatejsonschemadraftvalidator_ draft httpspythonjsonschemareadthedocsioenlatestvalidatejsonschemadraftvalidator_ lazi valid httpspythonjsonschemareadthedocsioenlatestvalidatejsonschemaprotocolsvalidatoriter_errors_ iter report valid error programmat queri httpspythonjsonschemareadthedocsioenlatesterrors_ properti item fail valid instal jsonschema avail pypi httpspypiorgprojectjsonschema_ instal use pip httpspippypaioenstable_ codeblock bash pip instal jsonschema run test suit tox instal perhap via pip instal tox packag manag run tox directori sourc checkout run jsonschema test suit version python jsonschema support dont version jsonschema test youll like want run use tox skipmissinginterpret option cours your also free run test singl version favorit test runner test live jsonschematest packag benchmark jsonschema benchmark make use pyperf httpspyperfreadthedocsio_ run done via tox e perf commun json schema specif slack httpsjsonschemaslackcom_ invit link home page httpsjsonschemaorg_ mani folk knowledg author schema found otherwis ask question stack overflow anoth mean get help your stuck contribut im julian berman jsonschema github httpsgithubcomjulianjsonschema_ get touch via github otherwis youv got someth contribut itd welcom also gener find libera nick julian variou channel includ python feel overwhelmingli grate also sponsor httpsgithubcomsponsorsjulian_ compani appreci jsonschema continu support growth jsonschema also support via tidelift httpstideliftcomsubscriptionpkgpypijsonschemautm_sourcepypij sonschemautm_mediumreferralutm_campaignreadme_ schema valid currentmodul jsonschema basic simplest way valid instanc given schema use funcvalid function autofunct valid inform creat json schema valid data good introduct json schema fundament underway understand json schema httpsjsonschemaorgunderstandingjsonschema_ _validatorprotocol valid protocol jsonschema defin protocol valid class adher autoclass jsonschemaprotocolsvalid member version valid versionedvalid includ jsonschema adher protocol implement valid class extend complement one includ adher well inform see creatingvalid type check handl json schema validatortyp properti valid use associ typecheck type checker provid immut map name type function test instanc type default suitabl user version valid versionedvalid includ jsonschema typecheck correctli handl respect version seealso validatingtyp exampl provid custom type check autoclass typecheck member autoexcept jsonschemaexceptionsundefinedtypecheck rais tri remov type check known typecheck call jsonschematypecheckeris_typ directli _validatingtyp valid addit type occasion use provid addit altern type valid json schema validatortyp properti jsonschema tri strike balanc perform common case gener instanc json schema defin number type valid schema type number default accept instanc python numbersnumb includ particular int float along decimaldecim object complex number etc integ object howev rather check numbersintegr collectionsabcmap jsonschema simpli check int dict sinc gener instanc check introduc signific slowdown especi given common valid type want gener want add specif addit type accept valid object updat exist typecheck creat new one may creat new valid via jsonschemavalidatorsextend codeblock python class myintegerobject pass def is_my_intcheck instanc return draftvalidatortype_checkeris_typeinst number isinstanceinst myinteg type_check draftvalidatortype_checkerredefinenumb is_my_int customvalid extenddraftvalid type_checkertype_check valid customvalidatorschematyp number autoexcept jsonschemaexceptionsunknowntyp _versionedvalid version valid jsonschema ship valid class variou version json schema specif detail method attribut valid class provid see valid protocol includ valid class implement autoclass draftvalid autoclass draftvalid autoclass draftvalid autoclass draftvalid autoclass draftvalid autoclass draftvalid exampl want valid schema creat draft metaschema could use codeblock python jsonschema import draftvalid schema schema httpjsonschemaorgdraftschema type object properti name type string email type string requir email draftvalidatorcheck_schemaschema _valid format valid format json schema defin validatorformat properti use check primit type string number boolean conform welldefin format default valid enforc option valid enabl hook formatcheck object valid doctest valid format ipv valid instanc schemaformat ipv format_checkerdraft_format_check traceback recent call last validationerror ipv autoclass formatcheck member excludememb cls_check attribut checker map current known format tupl function valid error caught new checker ad remov either perinst global checker use formatcheckercheck formatcheckercls_check decor respect classmethod cls_checksformat rais regist decor function global valid new format instanc creat function call pick suppli checker argument str format format decor function check argument except rais except rais decor function invalid instanc found except object access jsonschemaexceptionsvalidationerrorcaus attribut result valid error autoexcept formaterror member number default checker formatcheck know valid name view inspect formatcheckercheck attribut certain checker avail appropri packag avail use easiest way ensur need instal jsonschema use format format_nongpl setuptool extra ie codeblock sh pip instal jsonschemaformat instal depend format want instal mitlicens compat depend codeblock sh pip instal jsonschemaformat_nongpl nongpl extra intend instal direct depend gpl cours endus verif moment support avail checker except iri irirefer specif list avail checker along requir list note follow packag instal use checker requir valid succeed without throw error specifi json schema specif checker note color requir webcolors_ date datetim requir rfcvalidator_ durat requir isoduration_ email hostnam requir fqdn_ idnhostnam requir idna_ ipv ipv os must socketinet_pton function iri requir rfc_ irirefer requir rfc_ jsonpoint requir jsonpointer_ regex relativejsonpoint requir jsonpointer_ time requir rfcvalidator_ uri requir rfc_ rfcvalidator_ urirefer requir rfc_ rfcvalidator_ uritempl requir uritemplate_ _fqdn httpspypiorgpypifqdn _idna httpspypiorgpypiidna _isodur httpspypiorgpypiisodur _jsonpoint httpspypiorgpypijsonpoint _rfcvalid httpspypiorgprojectrfcvalid _rfcvalid httpspypiorgprojectrfcvalid _rfc httpspypiorgpypirfc _rfc httpstoolsietforghtmlrfcsect _uritempl httpspypiorgpypiuritempl _webcolor httpspypiorgpypiwebcolor note sinc case valid email address attempt instead confirm mail sent deliv recipi recipi correct one email intend sinc mani valid email address mani place incorrectli reject mani invalid email address mani place incorrectli accept email format valid provid saniti check full rfc_ valid appli idnemail format currentmodul jsonschemavalid _creatingvalid creat extend valid class autofunct creat autofunct extend autofunct validator_for autofunct valid creat valid error valid function valid subschema call descend rather iter_error recurs instanc schema pass one path schema_path argument descend order properli maintain instanc schema respect error occur valid protocol jsonschema defin protocol typingprotocol jsonschemaprotocolsvalid use type annot describ type valid object full detail see validatorprotocol frequent ask question schema specifi format valid invalid instanc seem valid validatorformat valid bit stumbl block new user work json schema schema codeblock json type string format date json schema specif histor differenti validatorformat valid valid particular validatorformat valid specifi inform much may use valid word mani use case schema author may wish use valu validatorformat valid expect valid alongsid requir assert schema cours repres even use case mani schema author wish assert instanc conform fulli even specif format mention draft prior draft decis whether automat enabl validatorformat valid left valid implement one librari made choic leav default two reason forward compat implement complex reason validatorformat valid default futur draft json schema introduc hardtoimpl format either implement format would block releas librari implement behavior surround validatorformat would need even complex simpli default therefor safer start defend expect given format would alway automat work given common use json schema portabl across languag therefor implement json schema user awar point regard validatorformat valid therefor rememb check implement use ensur explicitli enabl validatorformat valid draft howev optout default behavior mention requir valid difficult may sound new user point least mean expect behavior alway implement across implement encount seealso draft releas note format httpsjsonschemaorgdraftreleasenoteshtmlformatvocabulary_ upstream detail behavior format chang draft valid format detail enabl format valid jsonschemaformatcheck object implement format valid doesnt schema default properti set default instanc basic answer specif requir validatordefault actual anyth inkl doesnt actual anyth consid none valid modifi instanc either importantli validatordefault modifi instanc produc quit peculiar thing perfectli valid perhap even use default valid schema live instanc modifi default would pass valid first time fail second still fill default thing use jsonschema allow defin valid class callabl creat easili creat jsonschemaprotocolsvalid default set here code get start code add default properti object properti valid default valu need valid schema codeblock python jsonschema import draftvalid valid def extend_with_defaultvalidator_class validate_properti validator_classvalidatorsproperti def set_defaultsvalid properti instanc schema properti subschema propertiesitem default subschema instancesetdefaultproperti subschemadefault error validate_properti valid properti instanc schema yield error return validatorsextend validator_class properti set_default defaultvalidatingdraftvalid extend_with_defaultdraftvalid exampl usag obj schema properti foo default bar note jsonschemvalidateobj schema clsdefaultvalidatingdraftvalid work metaschema contain default direct defaultvalidatingdraftvalidatorschemavalidateobj assert obj foo bar see abovelink document info work basic extend validatorproperti valid jsonschemadraftvalid go ahead updat default note your interest interest solut larger class type transform keep eye seep httpsgithubcomjulianseep_ experiment data transform extract librari written top jsonschema hint code provid default valu entir object properti schema provid default valu object like codeblock python schema type object properti outerobject type object properti innerobject type string default innerdefault default must provid default object obj defaultvalidatingdraftvalidatorschemavalidateobj assert obj outerobject innerobject innerdefault dont provid default valu object wont instanti much less popul default properti codeblock python del schemapropertiesouterobjectdefault obj defaultvalidatingdraftvalidatorschemavalidateobj assert obj whoop jsonschema version number work jsonschema tri follow semant version httpssemverorg_ specif mean broadli backwardsincompat chang made minor releas certainli dot releas full pictur requir defin constitut backwardsincompat chang follow simpl exampl thing consid public api therefor chang without bump major version number modul name content mark privat python convent singl lead underscor function object signatur paramet order name follow consid public api may chang without notic exact word content error messag typic reason reli seem involv downstream test packag use jsonschema use case encourag use extens introspect provid jsonschemaexceptionsvalidationerror instead make meaning assert fail rather reli fail explain human order valid error return rais content jsonschematest packag content jsonschemabenchmark packag specif nonzero error code present command line interfac exact represent error present command line interfac error repres plain outputt report one per line anyth mark privat except last two flippant chang avoid chang made improv feel free open issu ticket specif issu question worth rais modul jsonschema includ readmerst content toctre maxdepth valid error refer creat faq indic tabl genindex search resolv json refer currentmodul jsonschema autoclass refresolv member autoexcept refresolutionerror json refer fail resolv handl valid error currentmodul jsonschemaexcept invalid instanc encount validationerror rais return depend method function use autoexcept validationerror inform carri error roughli break happen happen valid messag context instanc caus json_path path schema schema_path valid validator_valu attribut messag human readabl messag explain error attribut valid name fail valid httpsjsonschemaorgdraftjsonschemavalidationhtmlrfcsection_ attribut validator_valu valu fail valid schema attribut schema full schema error came potenti subschema within schema pass origin even entir differ schema validatorref follow attribut relative_schema_path collectionsdequ contain path fail valid within schema attribut absolute_schema_path collectionsdequ contain path fail valid within schema alway rel origin schema oppos subschema ie one origin pass valid class schema attribut schema_path relative_schema_path attribut relative_path collectionsdequ contain path offend element within instanc dequ empti error happen root instanc attribut absolute_path collectionsdequ contain path offend element within instanc absolut path alway rel origin instanc valid ie one pass valid method instanc dequ empti error happen root instanc attribut json_path json path httpsgoessnernetarticlesjsonpathindexhtml_ offend element within instanc attribut path relative_path attribut instanc instanc valid differ instanc origin pass valid valid object process valid possibl nest element within toplevel instanc path within toplevel instanc ie validationerrorpath could use find object provid conveni attribut context error caus error subschema list error subschema avail properti schema_path path error rel parent error attribut caus error caus nonvalid error except object current use except rais fail format checker jsonschemaformatcheckercheck attribut parent valid error error context none wasnt one case invalid schema encount schemaerror rais autoexcept schemaerror attribut present validationerror attribut clarifi short exampl testcod schema item anyof type string maxlength type integ minimum instanc foo v draftvalidatorschema error sortedviter_errorsinst keylambda e epath error messag situat help testcod error error printerrormessag output testoutput valid given schema valid given schema foo valid given schema look validationerrorpath error find element instanc correspond error exampl validationerrorpath one element index list testcod error error printlisterrorpath testoutput sinc schema contain nest subschema help look specif part instanc subschema caus error seen validationerrorinst validationerrorschema attribut valid like validatoranyof validationerrorcontext attribut use see suberror caus failur sinc error actual came two separ subschema help look validationerrorschema_path attribut well see exactli schema error come case suberror validationerrorcontext attribut path rel validationerrorschema_path parent error testcod error error suberror sortederrorcontext keylambda e eschema_path printlistsuberrorschema_path suberrormessag sep testoutput type type string type type integ type type string minimum less minimum maxlength foo long type foo type integ string represent error combin attribut easier debug testcod printerror testoutput valid given schema fail valid anyof schemaitem anyof maxlength type string minimum type integ instanc errortre want programmat abl queri properti valid fail valid given instanc probabl want use jsonschemaexceptionserrortre object autoclass jsonschemaexceptionserrortre member specialmemb excludememb __dict____weakref__ attribut error map valid name error object usual jsonschemaexceptionsvalidationerror level tree consid follow exampl testcod schema type array item type number enum minitem instanc spam clariti sake given instanc three error schema testcod v draftvalidatorschema error sortedviter_errorsspam keystr printerrormessag testoutput spam type number spam one spam short let construct jsonschemaexceptionserrortre queri error bit easili iter error object testcod tree errortreeviter_errorsinst see jsonschemaexceptionserrortre take iter validationerror construct tree directli pass return valu valid object jsonschemaprotocolsvalidatoriter_error method errortre support number use oper first one might want perform check whether given element instanc fail valid use keywordin oper doctest tree true tree fals interpret th index instanc spam error fact th index ie valid want see error child index tree look errortreeerror attribut doctest sortedtreeerror enum type see validatorenum validatortyp valid fail index fact errortreeerror dict whose valu validationerror get directli want doctest printtreeerrorstypemessag spam type number cours mean want know given name valid fail given index check presenc errortreeerror doctest enum treeerror true minimum treeerror fals final pay close enough attent youll notic havent seen validatorminitem error appear anywher yet validatorminitem error appli global instanc appear root node tree doctest minitem treeerror true that need know use error tree summar tree contain child tree access index tree get correspond child tree given index instanc tree child errortreeerror attribut dict map fail valid name correspond valid error best_match relev best_match function simpl use function attempt guess relev error given bunch doctest jsonschema import draftvalid jsonschemaexcept import best_match schema type array minitem printbest_matchdraftvalidatorschemaiter_errorsmessag type array autofunct best_match function relevancevalidation_error key function sort error base heurist relev want sort bunch error entir use function use function key eg sort max caus relev error consid greater less relev one within differ valid fail function consid validatoranyof validatoroneof weak valid error sort lower valid level instanc want chang set weak strong valid creat custom version function by_relev provid differ set doctest schema properti name type string phone properti home type string instanc name phone home error draftvalidatorschemaiter_errorsinst epath e sortederror keyexceptionsrelev home name autofunct by_relev