bioen bayesian infer ensembl imag imgbioen_logo_png align center author césar alland jürgen köfinger katrin reichel klau reuter luka stelzl year licenc gplv copyright césar alland gerhard hummer jürgen köfinger katrin reichel klau reuter luka stelzl refer hummer hummer g koefing j bayesian ensembl refin replica simul reweight j chem phi b_ httpsdoiorg rozycki rozycki b kim c hummer g sax ensembl refin escrtiii chmp conform transit structur httpsdoiorgjstr reichel reichel k stelzl l köfinger j hummer g precis deer distanc spinlabel reweight j phi chem lett httpsdoiorgacsjpclettb köfinger koefing j stelzl l reuter k alland c reichel k hummer g effici ensembl refin reweight j chem theori comput articl asap httpsdoiorgacsjctcb descript bioen integr broad rang experiment data refin ensembl structur detail descript procedur algorithm refer hummer imag imgbioenpng overview bioen softwar bioen softwar consist two python packag optim httpsgithubcombiophysbioentreemasterbioenoptimize_ provid algorithm solv optim problem underli ensembl refin reweight packag use independ analyz packag analyz httpsgithubcombiophysbioentreemasterbioenanalyze_ use optim packag integr wide rang experiment data simul user friendli way help pleas issu softwar open issu github repositori httpsgithubcombiophysbioenissu question suggest pleas contact bioenbiophysmpgd depend softwar requir python python python packag numpi scipi cython pyyaml mdanalysi panda gcc gsl liblbfg copi gsl liblbfg includ sourc distribut bioen run jupyt notebook ipynb exampl need addit jupyt httpsjupyterorg python packag matplotlib instal depend addit multidimension minim scipi bioen support minim provid gsl librari liblbfg librari increas perform significantli obtain librari follow option possibl option recommend user directori thirdparti copi sourc code gsl liblbfg includ script build instal provid run build script install_dependenciessh librari place local directori bioen setuppi find use automat altern may instal gsl liblbfg default locat use packag manag oper system setuppi find typic well final hpc system gsl liblbfg may alreadi provid via environ modul case load respect modul instal bioen note environ variabl gsl_home liblbfgs_hom evalu setuppi set assum contain path valid instal gsl liblbfg use set variabl necessari librari instal non standard locat eg homebrew mac instal depend avail see instal packag follow bioen_openmp python setuppi instal user bioen_openmp set enabl openmp parallel osx use bioen_openmp use option user flag local instal requir root privileg instal bioen local pleas make sure homelocalbin path add folder path eg ad export pathhomelocalbinpath bashrc file condaenviron instal packag without user flag usag want integr divers set experiment data simul observ therefor implement three type chisquar calcul use differ kind experiment data gener data chisquar optim without nuisanc paramet deerpeldor data includ modul depth nuisanc paramet saxswaxssan data includ scale paramet constant offset nuisanc paramet bioen also use obtain precis deer distanc spinlabel ensembl refin reichel provid exampl httpsgithubcombiophysbioentreemasterexamplesdeerrotamerrefinementpotra__ gener data term gener data refer experiment data measur provid singl data point includ nois eg noe pre chemic shift jcoupl distanc chemic crosslink etc use gener data bioen option contain experi gener experiment data file eg testgenericdataexpgenericdat id first column data point second column nois third column provid id refer file simul data eg testgenericdatasimnoe_genericdat line simul data point singl ensembl member eg simualt data extract trajectori md simul full list option gener data code bash sim_path sim_prefix sim_suffix exp_path exp_prefix exp_suffix data_id data_weight input_pkl output_pkl pleas take note option sim_path sim_prefix sim_sufffix exp_path exp_prefix exp_suffix use defin path name file default provid experiment data deerpeldor measur reweight experiment data includ nuisanc paramet modul depth structur input file extend inform need use deer data bioen option contain experi deer case deer data either perform reweight ensembl conform averag spinlabel rotam state httpsgithubcombiophysbioenblobmasterexamplesdeerconformationrefinementconformer_refinementipynb__ ensembl spinlabel rotam state singl protein conform httpsgithubcombiophysbioenblobmasterexamplesdeerrotamerrefinementpotrarotamer_refinement_potraipynb__ ensembl conform investig provid label pair eg singl file experiment data eg testdeerdataexpdeerdat ensembl member eg testdeerdataconfdeerdat experiment data file contain code bash time raw polyfit simul data file eg confdeerdat contain code bash time simulated_data use deer data bioen model file modelsdeerdat particular interest list number model id file deer file name confdeerdat confdeerdat confdeerdat ensembl spinlabel rotam state investig recommend use jupyt notebook deer_spin_label_reweightingipynb examplesdeerrotamerrefinementsingle_trac user defin protein structur rotam librari use default execut cell notebook data prepar bioen run analysi perform smooth procedur analysi bioen data includ also lcurv analysi detail method provid reichel case refin ensembl protein conform spinlabel rotam state modul depth nuisanc paramet relev option deer_modulation_depth initi guess path_to_filemodulationdepthdat provid initi optim initialoptim perform spinlabel pair indic modul depth need calcul consist simul data experiment data correctli achiev iter optim weight ensembl member modul depth case test deer data iter seem suffici optim converg recommend set option number_of_iter higher full list option deer data code bash deer_sim_path deer_sim_prefix deer_sim_suffix deer_exp_path deer_exp_prefix deer_exp_suffix deer_label deer_nois deer_modulation_depth deer_input_pkl deer_input_hd deer_output_pkl deer_input_sim_pkl deer_input_sim_hd pleas take note option deersim_path deer_sim_prefix deer_sim_suffix deer_exp_path deer_exp_prefix deer_exp_suffix option use defin name simul experiment file addit pleas defin spinlabel pair deer_label eg also part experiment simul data file name see experiment data saxswax measur bioen use scatter data httpsgithubcombiophysbioenblobmasterexamplesscatteringscattering_reweightingipynb__ like sax wax provid also optim nuisanc paramet coeffici use scatter data bioen option contain experi scatter input data handl similar way deer data singl scatter curv differ labelpair standard file format experiment data eg lyzexpdat code bash q iq errornois e e e e e e e e e e simul data file eg lyzsimsaxsdat contain code bash q iq e e e e e e e e e e handl differ data input recommend use ipython notebook examplesscatteringscattering_reweightingipynb full list option scatter data code bash scattering_sim_path scattering_sim_prefix scattering_sim_suffix scattering_exp_ppath scattering_exp_prefix scattering_exp_suffix scattering_nois scattering_coeffici scattering_data_weight scattering_input_pkl scattering_input_hd scattering_input_sim_pkl scattering_input_sim_hd scattering_output_pkl pleas take note option scattering_sim_prefix scattering_sim_sufffix scattering_exp_prefix scattering_exp_suffix option use defin name file experiment simul indic nuisanc paramet coeffici need calcul consist simul data experiment data correctli achiev iter optim weight ensembl member coeffici case test scatter data iter seem suffici optim converg recommend set option number_of_iter higher experiment data circular dichroism cd measur bioen use cd data httpsgithubcombiophysbioenblobmasterexamplescd_datacd_data_reweightingipynb__ use cd data bioen option contain experi cd standard file format experiment data eg expcddat code bash wavelength cd_raw cd_poly_fit e e e e e e e e e e simul data file eg confcddat contain code bash wavelength cd e e e e e full list option scatter data code bash cd_sim_path cd_sim_prefix cd_sim_suffix cd_exp_ppath cd_exp_prefix cd_exp_suffix cd_nois cd_data_weight cd_input_pkl cd_input_hd cd_input_sim_pkl cd_input_sim_hd cd_output_pkl pleas take note option cd_sim_prefix cd_sim_sufffix cd_exp_prefix cd_exp_suffix option use defin name file experiment simul option set initi refer weight set reference_weight initial_weight option one either choos uniform uniformli distribut weight default random randomli distribut weight provid file input describ hummer balanc consist experiment data chisquar chang weight rel entropi confid paramet theta achiev aim maximumentropi principl avoid overfit decid correct confid paramet theta specif set data usual thetaseri appli mean theta independ ensembl refin run perform subsequ lcurv analysi rel entropi vs chisquar lead us optim weight distribut pleas note choic confid paramet depend system data bioen softwar packag one choos theta defin singl valu eg thetaseri provid list eg list file eg path_to_filethetasdat check bioen result quickli simpl plot gener compar experiment data ensembl averag simul data use confid valu therefor follow three option set simple_plot simple_plot_input simple_plot_output file name output pkl file provid simple_plot_input data pkl file visual save pdf file specifi simple_plot_output misc option option output_pkl_input_data use gener pkl file set paramet weight previou bioen run file use afterward input_pkl restart bioen calcul minim exampl minim amount input paramet number ensembl member number_of_model list model models_list type experi experi input experiment simul data case data nmr measur eg noe typic invoc would look like code bash bioen number_of_model models_list pathtodatamodelsgenericdat experi gener theta sim_path pathtodata exp_path pathtodata data_id provid exampl test script run_bioensh testgener testdeer testscatt run bioen three mention type data default set default set reweight logweight procedur bfg optim algorithm output three bioen output file gener default choos file name leav default name use bioen output file pickl pkl format choos name file option output_pkl default file name bioen_resultpkl pkl file contain relev inform weight optim includ experiment data ensembl averag data refer initi optim weight consist simul data experiment data chisquar rel entropi etc complet analysi bioen calcul file essenti second file contain list weight text file format name choosen output_weight default name bioen_result_weightsdat care gener file smallest confid valu theta third file contain ensembl member correspond weight file similar second file howev includ also id ensembl member tabular form name file chosen output_models_weight default file name bioen_result_models_weightsdat also file gener smallest confid valu theta misc inform recommend close look file folder testgener testdeer testscatt file use understand transfer scientif question bioen line includ gener ignor option inform type bioen help faq q optim yield fmin_fin go could indic path fast librari properli set instal packag index singl autoconf use gsl _chap_autoconfmacro autoconf macro includ includerst applic use codeautoconf standard macro codeac_check_lib use link gsl automat codeconfigur script librari depend presenc cbla math librari well must also locat link main codelibgsl file follow command place fileconfigureac file perform test ac_check_libmco ac_check_libgslcblascblas_dgemm ac_check_libgslgsl_blas_dgemm import check codelibm codelibgslcbla codelibgsl otherwis test fail assum librari found output configur stage look like check co lm ye check cblas_dgemm lgslcbla ye check gsl_blas_dgemm lgsl ye librari found test defin macro codehave_libgsl codehave_libgslcbla codehave_libm add option codelgsl lgslcbla lm variabl codelib test find version librari suitabl gener use version function import altern macro avail file filegslm test specif version librari use macro simpli add follow line fileconfigurein file instead test ax_path_gslgsl_vers actioniffound actionifnotfound argument macrogsl_vers two three digit codemajorminor codemajorminormicro version number releas requir suitabl choic codeactionifnotfound ac_msg_errorcould find requir version gsl add variabl macrogsl_lib macrogsl_cflag makefileam file obtain correct compil flag macrogsl_lib equal output codegslconfig lib command macrogsl_cflag equal codegslconfig cflag command exampl libfoo_la_ldflag lfoo gsl_lib lgslcbla note macro macroax_path_gsl need use c compil appear fileconfigurein file macro macroac_lang_cplusplu program use c test codeinlin follow test place fileconfigurein file ac_c_inlin test ac_cv_c_inlin ac_definehave_inlin ac_substhave_inlin fi macro defin compil flag includ file fileconfigh librari header follow autoconf test check codeextern inlin dnl check extern inlin use modifi version dnl test ac_c_inlin acspecificmt dnl ac_cache_checkfor extern inlin ac_cv_c_extern_inlin ac_cv_c_extern_inlineno ac_try_compileextern ac_cv_c_inlin doubl foodoubl x extern ac_cv_c_inlin doubl foodoubl x return x doubl foo doubl x return x foo ac_cv_c_extern_inliney test ac_cv_c_extern_inlin ac_definehave_inlin ac_substhave_inlin fi substitut portabl function made automat use codeautoconf exampl test whether bsd function funchypot avail includ follow line configur file fileconfigurein applic ac_check_funcshypot place follow macro definit file fileconfighin substitut gsl_hypot miss system hypot ifndef have_hypot defin hypot gsl_hypot endif applic sourc file use includ command codeinclud configh substitut funcgsl_hypot occurr funchypot funchypot avail index singl fit singl least squar fit singl regress least squar singl weight linear fit singl unweight linear fit linear leastsquar fit chapter describ routin perform least squar fit experiment data use linear combin function data may weight unweight ie known unknown error weight data function comput best fit paramet associ covari matrix unweight data covari matrix estim scatter point give variancecovari matrix function divid separ version simpl one twoparamet regress multipleparamet fit _sec_llsoverview overview leastsquar fit found minim mathchi chisquar weight sum squar residu mathn experiment datapoint mathx_i y_i model mathycx math chi sum_i w_i y_i yc x_i mathp paramet model mathc c_ c_ dot weight factor mathw_i given mathw_i sigma_i mathsigma_i experiment error datapoint mathy_i error assum gaussian uncorrel unweight data chisquar sum comput without weight factor index singl covari matrix linear fit fit routin return bestfit paramet mathc mathp time p covari matrix covari matrix measur statist error bestfit paramet result error data mathsigma_i defin texinfo math c_ab langl delta c_a delta c_b rangl texinfo c_ab delta c_a delta c_b mathlangl rangl denot averag gaussian error distribut underli datapoint covari matrix calcul error propag data error mathsigma_i chang fit paramet mathdelta c_a caus small chang data mathdelta y_i given texinfo math delta c_a sum_i partial c_a partial y_i delta y_i texinfo delta c_a sum_i dc_ady_i delta y_i allow covari matrix written term error data texinfo math c_ab sum_ij partial c_a partial y_i partial c_b partial y_j langl delta y_i delta y_j rangl texinfo c_ab sum_ij dc_ady_i dc_bdy_j delta y_i delta y_j uncorrel data fluctuat underli datapoint satisfi texinfo math langl delta y_i delta y_j rangl sigma_i delta_ij texinfo delta y_i delta y_j sigma_i delta_ij give correspond paramet covari matrix texinfo math c_ab sum_i w_i partial c_a partial y_i partial c_b partial y_i texinfo c_ab sum_i w_i dc_ady_i dc_bdy_i index singl variancecovari matrix linear fit comput covari matrix unweight data ie data unknown error weight factor mathw_i sum replac singl estim mathw sigma mathsigma comput varianc residu bestfit model mathsigma sum y_i ycx_i np refer variancecovari matrix standard deviat bestfit paramet given squar root correspond diagon element covari matrix mathsigma_c_a sqrtc_aa correl coeffici fit paramet mathc_a mathc_b given mathrho_ab c_ab sqrtc_aa c_bb index linear regress linear regress function section use fit simpl one two paramet linear regress model function declar header file filegsl_fith linear regress constant term function describ section use perform leastsquar fit straight line model mathycx c_ c_ x index singl covari matrix linear regress function int gsl_fit_linear const doubl x const size_t xstride const doubl const size_t ystride size_t n doubl c doubl c doubl cov doubl cov doubl cov doubl sumsq function comput bestfit linear regress coeffici datac datac model mathi c_ c_ x dataset datax datay two vector length datan stride dataxstrid dataystrid error datay assum unknown variancecovari matrix paramet datac datac estim scatter point around bestfit line return via paramet datacov datacov datacov sum squar residu bestfit line return datasumsq note correl coeffici data comput use funcgsl_stats_correl depend fit function int gsl_fit_wlinear const doubl x const size_t xstride const doubl w const size_t wstride const doubl const size_t ystride size_t n doubl c doubl c doubl cov doubl cov doubl cov doubl chisq function comput bestfit linear regress coeffici datac datac model mathi c_ c_ x weight dataset datax datay two vector length datan stride dataxstrid dataystrid vector dataw length datan stride datawstrid specifi weight datapoint weight reciproc varianc datapoint datay covari matrix paramet datac datac comput use weight return via paramet datacov datacov datacov weight sum squar residu bestfit line mathchi return datachisq function int gsl_fit_linear_est doubl x doubl c doubl c doubl cov doubl cov doubl cov doubl doubl y_err function use bestfit linear regress coeffici datac datac covari datacov datacov datacov comput fit function datay standard deviat datay_err model mathi c_ c_ x point datax linear regress without constant term function describ section use perform leastsquar fit straight line model without constant term mathi c_ x function int gsl_fit_mul const doubl x const size_t xstride const doubl const size_t ystride size_t n doubl c doubl cov doubl sumsq function comput bestfit linear regress coeffici datac model mathi c_ x dataset datax datay two vector length datan stride dataxstrid dataystrid error datay assum unknown varianc paramet datac estim scatter point around bestfit line return via paramet datacov sum squar residu bestfit line return datasumsq function int gsl_fit_wmul const doubl x const size_t xstride const doubl w const size_t wstride const doubl const size_t ystride size_t n doubl c doubl cov doubl sumsq function comput bestfit linear regress coeffici datac model mathi c_ x weight dataset datax datay two vector length datan stride dataxstrid dataystrid vector dataw length datan stride datawstrid specifi weight datapoint weight reciproc varianc datapoint datay varianc paramet datac comput use weight return via paramet datacov weight sum squar residu bestfit line mathchi return datachisq function int gsl_fit_mul_est doubl x doubl c doubl cov doubl doubl y_err function use bestfit linear regress coeffici datac covari datacov comput fit function datay standard deviat datay_err model mathi c_ x point datax index singl multiparamet regress singl fit multiparamet linear multiparamet regress section describ routin perform least squar fit linear model minim cost function math chi sum_i w_i y_i sum_j x_ij c_j xc _w mathi vector mathn observ mathx mathnbymathp matrix predictor variabl mathc vector mathp unknown bestfit paramet estim mathr_w rt w r matrix mathw diagw_w_w_n defin weight uncertainti observ vector formul use fit number function andor variabl prepar mathnbymathp matrix mathx appropri exampl fit mathpth order polynomi datax use follow matrix math x_ij x_ij index mathi run observ index mathj run mathp fit set mathp sinusoid function fix frequenc mathomega_ mathomega_ mathldot mathomega_p use math x_ij sinomega_j x_i fit mathp independ variabl mathx_ mathx_ mathldot mathx_p use math x_ij x_ji mathx_ji mathith valu predictor variabl mathx_j solut gener linear leastsquar system requir addit work space intermedi result singular valu decomposit matrix mathx function declar header file filegsl_multifith type gsl_multifit_linear_workspac workspac contain intern variabl fit multiparamet model function gsl_multifit_linear_workspac gsl_multifit_linear_alloc const size_t n const size_t p function alloc workspac fit model maximum datan observ use maximum datap paramet user may later suppli smaller least squar system desir size workspac mathonp p function void gsl_multifit_linear_fre gsl_multifit_linear_workspac work function free memori associ workspac dataw function int gsl_multifit_linear_svd const gsl_matrix x gsl_multifit_linear_workspac work function perform singular valu decomposit matrix datax store svd factor intern datawork function int gsl_multifit_linear_bsvd const gsl_matrix x gsl_multifit_linear_workspac work function perform singular valu decomposit matrix datax store svd factor intern datawork matrix datax first balanc appli column scale factor improv accuraci singular valu function int gsl_multifit_linear const gsl_matrix x const gsl_vector gsl_vector c gsl_matrix cov doubl chisq gsl_multifit_linear_workspac work function comput bestfit paramet datac model mathi x c observ datay matrix predictor variabl datax use prealloc workspac provid datawork mathpbymathp variancecovari matrix model paramet datacov set mathsigma xt x mathsigma standard deviat fit residu sum squar residu bestfit mathchi return datachisq coeffici determin desir comput express mathr chi tss total sum squar tss observ datay may comput funcgsl_stats_tss bestfit found singular valu decomposit matrix datax use modifi golubreinsch svd algorithm column scale improv accuraci singular valu compon zero singular valu machin precis discard fit function int gsl_multifit_linear_tsvd const gsl_matrix x const gsl_vector const doubl tol gsl_vector c gsl_matrix cov doubl chisq size_t rank gsl_multifit_linear_workspac work function comput bestfit paramet datac model mathi x c observ datay matrix predictor variabl datax use truncat svd expans singular valu satisfi maths_i le tol time s_ discard fit maths_ largest singular valu mathpbymathp variancecovari matrix model paramet datacov set mathsigma xt x mathsigma standard deviat fit residu sum squar residu bestfit mathchi return datachisq effect rank number singular valu use solut return datarank coeffici determin desir comput express mathr chi tss total sum squar tss observ datay may comput funcgsl_stats_tss function int gsl_multifit_wlinear const gsl_matrix x const gsl_vector w const gsl_vector gsl_vector c gsl_matrix cov doubl chisq gsl_multifit_linear_workspac work function comput bestfit paramet datac weight model mathi x c observ datay weight dataw matrix predictor variabl datax use prealloc workspac provid datawork mathpbymathp covari matrix model paramet datacov comput mathxt w x weight sum squar residu bestfit mathchi return datachisq coeffici determin desir comput express mathr chi wtss weight total sum squar wtss observ datay may comput funcgsl_stats_wtss function int gsl_multifit_wlinear_tsvd const gsl_matrix x const gsl_vector w const gsl_vector const doubl tol gsl_vector c gsl_matrix cov doubl chisq size_t rank gsl_multifit_linear_workspac work function comput bestfit paramet datac weight model mathi x c observ datay weight dataw matrix predictor variabl datax use truncat svd expans singular valu satisfi maths_i le tol time s_ discard fit maths_ largest singular valu mathpbymathp covari matrix model paramet datacov comput mathxt w x weight sum squar residu bestfit mathchi return datachisq effect rank system number singular valu use solut return datarank coeffici determin desir comput express mathr chi wtss weight total sum squar wtss observ datay may comput funcgsl_stats_wtss function int gsl_multifit_linear_est const gsl_vector x const gsl_vector c const gsl_matrix cov doubl doubl y_err function use bestfit multilinear regress coeffici datac covari matrix datacov comput fit function valu datay standard deviat datay_err model mathi xc point datax function int gsl_multifit_linear_residu const gsl_matrix x const gsl_vector const gsl_vector c gsl_vector r function comput vector residu mathr x c observ datay coeffici datac matrix predictor variabl datax function size_t gsl_multifit_linear_rank const doubl tol const gsl_multifit_linear_workspac work function return rank matrix mathx must first singular valu decomposit comput rank comput count number singular valu mathsigma_j satisfi mathsigma_j tol time sigma_ mathsigma_ largest singular valu index singl ridg regress singl tikhonov regress singl regress ridg singl regress tikhonov singl least squar regular _sec_regularizedregress regular regress ordinari weight least squar model seek solut vector mathc minim residu math chi xc _w mathi mathnbymath observ vector mathx mathnbymathp design matrix mathc mathpbymath solut vector mathw diagw_w_n data weight matrix mathr_w rt w r case least squar matrix mathx illcondit small perturb ie nois observ vector could lead wide differ solut vector mathc one way deal illcondit matric use truncat svd small singular valu given toler discard solut truncat svd method avail use function funcgsl_multifit_linear_tsvd funcgsl_multifit_wlinear_tsvd anoth way help solv illpos problem includ regular term least squar minim math chi xc _w lambda l c suitabl chosen regular paramet mathlambda matrix mathl type regular known tikhonov ridg regress applic mathl chosen ident matrix give prefer solut vector mathc smaller norm includ regular term lead explicit normal equat solut texinfo math c left xt w x lambda lt l right xt w texinfo c xt w x lambda lt l xt w reduc ordinari least squar solut mathl practic often advantag transform regular least squar system form texinfo math chi tildey tildex tildec lambda tildec texinfo chi x c lambda c known tikhonov standard form normal equat solut texinfo math tildec left tildext tildex lambda right tildext tildey texinfo tildec tildext tildex lambda tildext tildey mathmbymathp matrix mathl full rank mathm p ie mathl squar row column calcul thin qr decomposit mathl note mathl c r c sinc mathq factor chang norm sinc mathr mathpbymathp use transform texinfo math tildex w x r tildey w tildec r c texinfo x sqrtw x r sqrtw c r c achiev standard form rectangular matrix mathl mathm p sophist approach need see hansen chapter practic normal equat solut desir due numer instabl system solv use singular valu decomposit matrix mathtildex matrix mathl often chosen ident matrix first second finit differ oper ensur smoothli vari coeffici vector mathc diagon matrix select damp model paramet differ mathl ne user must first convert least squar problem standard form use funcgsl_multifit_linear_stdform funcgsl_multifit_linear_stdform solv system backtransform solut vector recov solut origin problem see funcgsl_multifit_linear_genform funcgsl_multifit_linear_genform mani regular problem care must taken choos regular paramet mathlambda sinc residu norm mathi x c solut norm mathl c minim paramet mathlambda repres tradeoff minim either residu solut vector common tool visual comprimis minim two quantiti known lcurv lcurv loglog plot residu norm mathi x c horizont axi solut norm mathl c vertic axi curv nearli alway mathl shape appear distinct corner separ horizont vertic section curv regular paramet correspond corner often chosen optim valu gsl provid routin calcul lcurv relev regular paramet well locat corner anoth method choos regular paramet known gener cross valid gcv method base idea arbitrari element mathy_i left right hand side result regular solut predict element accur lead choos paramet mathlambda minim gcv function texinfo math glambda x c_lambda textrmtri_n x x_lambdai texinfo glambda x c_lambda tri_n x xi mathx_lambdai matrix relat solut mathc_lambda right hand side mathi ie mathc_lambda x_lambdai gsl provid routin comput gcv curv minimum applic step requir solv regular least squar problem follow construct least squar system mathx mathi mathw mathl transform system standard form mathtildex mathtildey step skip mathl i_p mathw i_n calcul svd mathtildex determin appropri regular paramet mathlambda use exampl lcurv gcv analysi solv standard form system use chosen mathlambda svd mathtildex backtransform standard form solut mathtildec recov origin solut vector mathc function int gsl_multifit_linear_stdform const gsl_vector l const gsl_matrix x const gsl_vector gsl_matrix xs gsl_vector ys gsl_multifit_linear_workspac work int gsl_multifit_linear_wstdform const gsl_vector l const gsl_matrix x const gsl_vector w const gsl_vector gsl_matrix xs gsl_vector ys gsl_multifit_linear_workspac work function defin regular matrix mathl diagl_l_l_p diagon matrix element mathl_i provid mathith element input vector datal mathnbymathp least squar matrix datax vector datay length mathn convert standard form describ paramet mathtildex mathtildey store datax datay output datax datay dimens datax datay option data weight may suppli vector dataw length mathn order appli transform mathl must exist none mathl_i may zero standard form system solv use funcgsl_multifit_linear_genform recov origin solut vector allow datax datax datay datay inplac transform order perform weight regular fit mathl user may call funcgsl_multifit_linear_applyw convert standard form function int gsl_multifit_linear_l_decomp gsl_matrix l gsl_vector tau function factor mathmbymathp regular matrix datal form need later transform standard form datal may number row mathm mathm ge p qr decomposit datal comput store datal output mathm p qr decomposit mathlt comput store datal output output household scalar store vector datatau size mathminmp output use funcgsl_multifit_linear_wstdform complet transform standard form function int gsl_multifit_linear_stdform const gsl_matrix lqr const gsl_vector ltau const gsl_matrix x const gsl_vector gsl_matrix xs gsl_vector ys gsl_matrix gsl_multifit_linear_workspac work int gsl_multifit_linear_wstdform const gsl_matrix lqr const gsl_vector ltau const gsl_matrix x const gsl_vector w const gsl_vector gsl_matrix xs gsl_vector ys gsl_matrix gsl_multifit_linear_workspac work function convert least squar system datax datay dataw mathl standard form mathtildex mathtildey store datax datay respect mathmbymathp regular matrix datal specifi input datalqr dataltau output funcgsl_multifit_linear_l_decomp dimens standard form paramet mathtildex mathtildey depend whether mathm larger less mathp mathm ge p datax mathnbymathp datay mathnbi datam use mathm p datax mathn p mbymathm datay mathn p mbi datam addit mathnbymathp workspac requir recov origin solut vector system solv see funcgsl_multifit_linear_genform option data weight may suppli vector dataw length mathn mathw diagw function int gsl_multifit_linear_solv const doubl lambda const gsl_matrix xs const gsl_vector ys gsl_vector cs doubl rnorm doubl snorm gsl_multifit_linear_workspac work function comput regular bestfit paramet mathtildec minim cost function mathchi tildey tildex tildec lambda tildec standard form least squar system must therefor convert standard form prior call function observ vector mathtildey provid datay matrix predictor variabl mathtildex datax solut vector mathtildec return datac length minmathmp svd datax must comput prior call function use funcgsl_multifit_linear_svd regular paramet mathlambda provid datalambda residu norm math tildey tildex tildec x c_w return datarnorm solut norm math tildec l c return datasnorm function int gsl_multifit_linear_genform const gsl_vector l const gsl_vector cs gsl_vector c gsl_multifit_linear_workspac work regular system solv mathl diagl_l_l_p function backtransform standard form solut vector datac recov solut vector origin problem datac diagon matrix element mathl_i provid vector datal allow datac datac inplac transform function int gsl_multifit_linear_genform const gsl_matrix lqr const gsl_vector ltau const gsl_matrix x const gsl_vector const gsl_vector cs const gsl_matrix gsl_vector c gsl_multifit_linear_workspac work int gsl_multifit_linear_wgenform const gsl_matrix lqr const gsl_vector ltau const gsl_matrix x const gsl_vector w const gsl_vector const gsl_vector cs const gsl_matrix gsl_vector c gsl_multifit_linear_workspac work regular system solv gener rectangular matrix mathl specifi datalqr dataltau function backtransform standard form solut datac recov solut vector origin problem store datac length mathp origin least squar matrix observ vector provid datax datay respect datam matrix comput funcgsl_multifit_linear_stdform weight fit weight vector dataw must also suppli function int gsl_multifit_linear_applyw const gsl_matrix x const gsl_vector w const gsl_vector gsl_matrix wx gsl_vector wy weight least squar system mathl function may use convert system standard form appli weight matrix mathw diagw least squar matrix datax observ vector datay output datawx equal mathw x datawi equal mathw allow datawx datax datawi datay inplac transform function int gsl_multifit_linear_lcurv const gsl_vector gsl_vector reg_param gsl_vector rho gsl_vector eta gsl_multifit_linear_workspac work function comput lcurv least squar system use right hand side vector datay svd decomposit least squar matrix datax must provid funcgsl_multifit_linear_svd prior call function output vector datareg_param datarho dataeta must size contain regular paramet mathlambda_i residu norm mathi x c_i solut norm math l c_i compos lcurv mathc_i regular solut vector correspond mathlambda_i user may determin number point lcurv adjust size input array regular paramet mathlambda_i estim singular valu datax chosen repres relev portion lcurv function int gsl_multifit_linear_lcorn const gsl_vector rho const gsl_vector eta size_t idx function attempt locat corner lcurv mathi x c l c defin datarho dataeta input array respect corner defin point maximum curvatur lcurv loglog scale datarho dataeta array output funcgsl_multifit_linear_lcurv algorithm use simpli fit circl consecut point lcurv use circl radiu determin curvatur middl point therefor input array size must mathg point provid lcurv better estim curvatur obtain array index correspond maximum curvatur ie corner return dataidx input array contain colinear point function could fail return macrogsl_einv function int gsl_multifit_linear_lcorn const gsl_vector reg_param const gsl_vector eta size_t idx function attempt locat corner altern lcurv mathlambda l c studi rezghi hosseini altern lcurv provid better estim regular paramet smooth solut vector regular paramet mathlambda solut norm mathl c provid datareg_param dataeta input array respect corner defin point maximum curvatur altern lcurv linear scale datareg_param dataeta array output funcgsl_multifit_linear_lcurv algorithm use simpli fit circl consecut point lcurv use circl radiu determin curvatur middl point therefor input array size must mathg point provid lcurv better estim curvatur obtain array index correspond maximum curvatur ie corner return dataidx input array contain colinear point function could fail return macrogsl_einv function int gsl_multifit_linear_gcv_initconst gsl_vector gsl_vector reg_param gsl_vector uti doubl delta gsl_multifit_linear_workspac work function perform initi prepar comput gcv curv minimum right hand side vector provid datay output datareg_param set vector regular paramet decreas order may size vector datauti size mathp set mathut paramet datadelta need subsequ step gcv calcul function int gsl_multifit_linear_gcv_curveconst gsl_vector reg_param const gsl_vector uti const doubl delta gsl_vector g gsl_multifit_linear_workspac work funtion calcul gcv curv mathglambda store datag output must size datareg_param input datareg_param datauti datadelta comput funcgsl_multifit_linear_gcv_init function int gsl_multifit_linear_gcv_minconst gsl_vector reg_param const gsl_vector uti const gsl_vector g const doubl delta doubl lambda gsl_multifit_linear_workspac work function comput valu regular paramet minim gcv curv mathglambda store datalambda input datag calcul funcgsl_multifit_linear_gcv_curv input datareg_param datauti datadelta comput funcgsl_multifit_linear_gcv_init function doubl gsl_multifit_linear_gcv_calcconst doubl lambda const gsl_vector uti const doubl delta gsl_multifit_linear_workspac work function return valu gcv curv mathglambda correspond input datalambda function int gsl_multifit_linear_gcvconst gsl_vector gsl_vector reg_param gsl_vector g doubl lambda doubl g_lambda gsl_multifit_linear_workspac work function combin step codegcv_init codegcv_curv codegcv_min defin singl function input datay right hand side vector output datareg_param datag must size set vector mathlambda mathglambda valu respect output datalambda set optim valu mathlambda minim gcv curv minimum valu gcv curv return datag_lambda function int gsl_multifit_linear_lk const size_t p const size_t k gsl_matrix l function comput discret approxim deriv oper mathl_k order datak regular grid datap point store datal dimens datal mathpkbymathp function int gsl_multifit_linear_lsobolev const size_t p const size_t kmax const gsl_vector alpha gsl_matrix l gsl_multifit_linear_workspac work function comput regular matrix datal correspond weight sobolov norm mathl c sum_k alpha_k l_k c mathl_k approxim deriv oper order mathk regular norm use applic necessari smooth sever deriv solut datap number model paramet datakmax highest deriv includ summat dataalpha vector weight size datakmax codealphak mathalpha_k weight assign deriv order mathk output matrix datal size datapbydatap upper triangular function doubl gsl_multifit_linear_rcond const gsl_multifit_linear_workspac work function return reciproc condit number least squar matrix mathx defin ratio smallest largest singular valu rcond mathsigma_minsigma_max routin funcgsl_multifit_linear_svd must first call comput svd mathx index singl robust regress singl regress robust singl least squar robust robust linear regress ordinari least squar ol model often heavili influenc presenc outlier outlier data point follow gener trend observ although strictli precis definit outlier robust linear regress refer regress algorithm robust outlier common type robust regress mestim gener mestim minim object function math sum_i rhoe_i sum_i rho y_i yc x_i mathe_i y_i yc x_i residu ith data point mathrhoe_i function follow properti mathrho ge mathrho mathrho rhoe mathrhoe_ rhoe_ mathe_ e_ special case ordinari least squar given mathrhoe_i e_i let mathpsi rho deriv mathrho differenti object function respect coeffici mathc set partial deriv zero produc system equat math sum_i psie_i x_i mathx_i vector contain row mathi design matrix mathx next defin weight function mathw psiee let mathw_i we_i math sum_i w_i e_i x_i system equat equival solv weight ordinari least squar problem minim mathchi sum_i w_i e_i weight howev depend residu mathe_i depend coeffici mathc depend weight therefor iter solut use call iter reweight least squar irl comput initi estim coeffici mathc use ordinari least squar iter mathk form residu mathe_ik y_i x_i ckt sigmak sqrt h_i matht tune constant depend choic mathpsi mathh_i statist leverag diagon element matrix mathx xt x xt includ matht mathh_i residu calcul shown improv converg method residu standard deviat approxim mathsigmak mad mad medianabsolutedevi mathnp largest residu previou iter comput new weight mathw_ik psie_ike_ik comput new coeffici mathck solv weight least squar problem weight mathw_ik step iter coeffici converg maximum iter limit reach coeffici test converg use critera texinfo math c_ik c_ik le epsilon time hboxmaxc_ik c_ik texinfo c_ik c_ik epsilon maxc_ik c_ik math le p mathepsilon small toler factor key method lie select function mathpsie_i assign smaller weight larg residu larger weight smaller residu iter proce outlier assign smaller smaller weight eventu littl effect fit model type gsl_multifit_robust_workspac workspac use robust least squar fit function gsl_multifit_robust_workspac gsl_multifit_robust_alloc const gsl_multifit_robust_typ const size_t n const size_t p function alloc workspac fit model datan observ use datap paramet size workspac mathonp p type datat specifi function mathpsi select follow choic type gsl_multifit_robust_typ var gsl_multifit_robust_default specifi datagsl_multifit_robust_bisquar type see good gener purpos choic robust regress var gsl_multifit_robust_bisquar tukey biweight bisquar function good gener purpos choic robust regress weight function given texinfo math left beginarraycc e e le e endarray right texinfo e e e default tune constant matht var gsl_multifit_robust_cauchi cauchi function also known lorentzian function function guarante uniqu solut mean differ choic coeffici vector datac could minim object function therefor option use care weight function given texinfo math e texinfo e default tune constant matht var gsl_multifit_robust_fair fair mathrho function guarante uniqu solut continu deriv three order weight function given texinfo math e texinfo e default tune constant matht var gsl_multifit_robust_hub specifi huber mathrho function parabola vicin zero increas linearli given threshold math function also consid excel gener purpos robust estim howev occasion difficulti encount due discontinu first deriv mathpsi function weight function given texinfo math left beginarraycc e le e e endarray right texinfo max default tune constant matht var gsl_multifit_robust_ol specifi ordinari least squar solut use quickli check differ variou robust ol solut weight function given math default tune constant matht var gsl_multifit_robust_welsch specifi welsch function perform well case residu exponenti distribut weight function given math exp default tune constant matht function void gsl_multifit_robust_fre gsl_multifit_robust_workspac w function free memori associ workspac dataw function const char gsl_multifit_robust_nam const gsl_multifit_robust_workspac w function return name robust type datat specifi funcgsl_multifit_robust_alloc function int gsl_multifit_robust_tun const doubl tune gsl_multifit_robust_workspac w function set tune constant matht use adjust residu iter datatun decreas tune constant increas downweight assign larg residu increas tune constant decreas downweight assign larg residu function int gsl_multifit_robust_maxit const size_t maxit gsl_multifit_robust_workspac w function set maximum number iter iter reweight least squar algorithm datamaxit default valu set funcgsl_multifit_robust_alloc function int gsl_multifit_robust_weight const gsl_vector r gsl_vector wt gsl_multifit_robust_workspac w function assign weight vector datawt use residu vector datar previous specifi weight function output weight given mathwts_i wr_i sigma weight function mathw detail funcgsl_multifit_robust_alloc mathsigma estim residu standard deviat base medianabsolutedevi matht tune constant function use user wish implement robust regress rather use suppli funcgsl_multifit_robust routin function int gsl_multifit_robust const gsl_matrix x const gsl_vector gsl_vector c gsl_matrix cov gsl_multifit_robust_workspac w function comput bestfit paramet datac model mathi x c observ datay matrix predictor variabl datax attemp reduc influenc outlier use algorithm outlin mathpbymathp variancecovari matrix model paramet datacov estim mathsigma xt x mathsigma approxim residu standard deviat use theori robust regress special care must taken estim mathsigma statist mathr comput intern avail call function funcgsl_multifit_robust_statist coeffici converg within maximum iter limit function return macrogsl_emaxit case current estim coeffici covari matrix return datac datacov intern fit statist comput estim function int gsl_multifit_robust_est const gsl_vector x const gsl_vector c const gsl_matrix cov doubl doubl y_err function use bestfit robust regress coeffici datac covari matrix datacov comput fit function valu datay standard deviat datay_err model mathi x cdot c point datax function int gsl_multifit_robust_residu const gsl_matrix x const gsl_vector const gsl_vector c gsl_vector r gsl_multifit_robust_workspac w function comput vector student residu mathr_i y_i x c_i sigma sqrt h_i observ datay coeffici datac matrix predictor variabl datax routin funcgsl_multifit_robust must first call comput statis leverag mathh_i matrix datax residu standard deviat estim mathsigma function gsl_multifit_robust_stat gsl_multifit_robust_statist const gsl_multifit_robust_workspac w function return structur contain relev statist robust regress function funcgsl_multifit_robust must call first perform regress calcul statist return typegsl_multifit_robust_stat structur contain follow field type gsl_multifit_robust_stat codedoubl sigma_ol contain standard deviat residu comput ordinari least squar ol codedoubl sigma_mad contain estim standard deviat final residu use medianabsolutedevi statist codedoubl sigma_rob contain estim standard deviat final residu theori robust regress see street et al codedoubl sigma contain estim standard deviat final residu attemp reconcil codesigma_rob codesigma_ol reason way codedoubl rsq contain mathr coeffici determin statist use estim codesigma codedoubl adj_rsq contain adjust mathr coeffici determin statist use estim codesigma codedoubl rmse contain root mean squar error final residu codedoubl sse contain residu sum squar take account robust covari matrix codesize_t dof contain number degre freedom mathn p codesize_t numit upon success converg contain number iter perform codegsl_vector weight contain final weight vector length datan codegsl_vector r contain final residu vector length datan mathr x c index singl larg dens linear least squar singl linear least squar larg larg dens linear system modul concern solv larg dens least squar system mathx c mathnbymathp matrix mathx mathn p ie mani row column type matrix call tall skinni matrix applic may possibl fit entir matrix memori use standard svd approach therefor algorithm modul design allow user construct smaller block matrix mathx accumul block larger system one time algorithm modul never need store entir matrix mathx memori larg linear least squar routin support data weight tikhonov regular design minim residu math chi xc _w lambda l c mathi mathnbymath observ vector mathx mathnbymathp design matrix mathc mathpbymath solut vector mathw diagw_w_n data weight matrix mathl mathmbymathp regular matrix mathlambda regular paramet mathr_w rt w r discuss follow assum system convert tikhonov standard form texinfo math chi tildey tildex tildec lambda tildec texinfo chi x c lambda c drop tild charact variou paramet discuss transform standard form see refsec_regularizedregress basic idea partit matrix mathx observ vector mathi texinfo math left beginarrayc x_ x_ x_ vdot x_k endarray right c left beginarrayc y_ y_ y_ vdot y_k endarray right texinfo x_ c y_ x_ y_ x_ y_ x_k y_k mathk block block mathx_iy_i may number row mathx_i mathp column section describ method avail solv partit system function declar header file filegsl_multilargeh index singl larg linear least squar normal equat normal equat approach normal equat approach larg linear least squar problem describ popular due speed simplic sinc normal equat solut problem given texinfo math c left xt x lambda right xt texinfo c xt x lambda xt mathpbymathp matrix mathxt x mathpbi vector mathxt need store use partit scheme describ given texinfo math xt x sum_i x_it x_i xt sum_i x_it y_i texinfo xt x sum_i x_it x_i xt sum_i x_it y_i sinc matrix mathxt x symmetr half need calcul block mathx_iy_i accumul final mathxt x mathxt system solv choleski factor mathxt x matrix mathxt x matrix first transform via diagon scale transform attempt reduc condit number much possibl recov accur solut vector normal equat approach fastest method solv larg least squar problem accur wellcondit matric mathx howev illcondit matric often case larg system method suffer numer instabl see trefethen bau number oper method mathonp p index singl larg linear least squar tsqr tall skinni qr tsqr approach algorithm better numer stabil illcondit problem known tall skinni qr tsqr method method base comput thin qr decomposit least squar matrix mathx q r mathq mathnbymathp matrix orthogon column mathr mathpbymathp upper triangular matrix factor calcul residu becom math chi qt r c lambda c written matrix equat texinfo math left beginarrayc r lambda endarray right c left beginarrayc qt endarray right texinfo r lambda c qt b matrix left hand side much smaller mathpbymathp matrix solv standard svd approach mathq matrix larg origin matrix mathx howev need explicitli construct tsqr algorithm comput mathpbymathp matrix mathr mathpbi vector mathqt updat quantiti new block ad system time new block row mathx_iy_i ad algorithm perform qr decomposit matrix texinfo math left beginarrayc r_i x_i endarray right texinfo r_i x_i mathr_i upper triangular mathr factor matrix texinfo math left beginarrayc x_ vdot x_i endarray right texinfo x_ x_i qr decomposit done effici take account spars structur mathr_i see demmel et al detail accomplish number oper method mathonp p index singl larg linear least squar step larg dens linear system solut step typic step requir solv larg regular linear least squar problem follow choos regular matrix mathl construct block row least squar matrix right hand side vector weight vector mathx_i mathy_i mathw_i transform block standard form mathtildex_i mathtildey_i step skip mathl mathw accumul standard form block mathtildex_i mathtildey_i system repeat step entir matrix right hand side vector accumul determin appropri regular paramet mathlambda use exampl lcurv analysi solv standard form system use chosen mathlambda backtransform standard form solut mathtildec recov origin solut vector mathc index singl larg linear least squar routin larg dens linear least squar routin type gsl_multilarge_linear_workspac workspac contain paramet solv larg linear least squar problem function gsl_multilarge_linear_workspac gsl_multilarge_linear_alloc const gsl_multilarge_linear_typ const size_t p function alloc workspac solv larg linear least squar system least squar matrix mathx datap column may number row type gsl_multilarge_linear_typ paramet datat specifi method use solv larg least squar system may select follow choic var gsl_multilarge_linear_norm specifi normal equat approach solv least squar system method suitabl case perform critic known least squar matrix mathx well condit size workspac mathop var gsl_multilarge_linear_tsqr specifi sequenti tall skinni qr tsqr approach solv least squar system method good gener purpos choic larg system requir twice mani oper normal equat method mathn p size workspac mathop function void gsl_multilarge_linear_fre gsl_multilarge_linear_workspac w function free memori associ workspac dataw function const char gsl_multilarge_linear_nam gsl_multilarge_linear_workspac w function return string pointer name multilarg solver function int gsl_multilarge_linear_reset gsl_multilarge_linear_workspac w function reset workspac dataw begin accumul new least squar system function int gsl_multilarge_linear_stdform const gsl_vector l const gsl_matrix x const gsl_vector gsl_matrix xs gsl_vector ys gsl_multilarge_linear_workspac work int gsl_multilarge_linear_wstdform const gsl_vector l const gsl_matrix x const gsl_vector w const gsl_vector gsl_matrix xs gsl_vector ys gsl_multilarge_linear_workspac work function defin regular matrix mathl diagl_l_l_p diagon matrix element mathl_i provid mathith element input vector datal block datax datay convert standard form paramet mathtildex mathtildey store datax datay output datax datay dimens datax datay option data weight may suppli vector dataw order appli transform mathl must exist none mathl_i may zero standard form system solv use funcgsl_multilarge_linear_genform recov origin solut vector allow datax datax datay datay inplac transform function int gsl_multilarge_linear_l_decomp gsl_matrix l gsl_vector tau function calcul qr decomposit mathmbymathp regular matrix datal datal must mathm ge p output household scalar store vector datatau size mathp output use funcgsl_multilarge_linear_wstdform complet transform standard form function int gsl_multilarge_linear_stdform const gsl_matrix lqr const gsl_vector ltau const gsl_matrix x const gsl_vector gsl_matrix xs gsl_vector ys gsl_multilarge_linear_workspac work int gsl_multilarge_linear_wstdform const gsl_matrix lqr const gsl_vector ltau const gsl_matrix x const gsl_vector w const gsl_vector gsl_matrix xs gsl_vector ys gsl_multilarge_linear_workspac work function convert block row datax datay dataw standard form mathtildex mathtildey store datax datay respect datax datay dataw must number row mathmbymathp regular matrix datal specifi input datalqr dataltau output funcgsl_multilarge_linear_l_decomp datax datay dimens datax datay standard form system solv use funcgsl_multilarge_linear_genform recov origin solut vector option data weight may suppli vector dataw mathw diagw function int gsl_multilarge_linear_accumul gsl_matrix x gsl_vector gsl_multilarge_linear_workspac w function accumul standard form block mathxi current least squar system datax datay number row arbitrari datax must mathp column tsqr method datax datay destroy output normal equat method unchang function int gsl_multilarge_linear_solv const doubl lambda gsl_vector c doubl rnorm doubl snorm gsl_multilarge_linear_workspac w block mathx_iy_i accumul larg least squar system function comput solut vector store datac output regular paramet mathlambda provid datalambda output datarnorm contain residu norm mathi x c_w datasnorm contain solut norm mathl c function int gsl_multilarge_linear_genform const gsl_vector l const gsl_vector cs gsl_vector c gsl_multilarge_linear_workspac work regular system solv mathl diagl_l_l_p function backtransform standard form solut vector datac recov solut vector origin problem datac diagon matrix element mathl_i provid vector datal allow datac datac inplac transform function int gsl_multilarge_linear_genform const gsl_matrix lqr const gsl_vector ltau const gsl_vector cs gsl_vector c gsl_multilarge_linear_workspac work regular system solv regular matrix mathl specifi datalqr dataltau function backtransform standard form solut datac recov solut vector origin problem store datac length mathp function int gsl_multilarge_linear_lcurv gsl_vector reg_param gsl_vector rho gsl_vector eta gsl_multilarge_linear_workspac work function comput lcurv larg least squar system fulli accumul workspac datawork output vector datareg_param datarho dataeta must size contain regular paramet mathlambda_i residu norm mathi x c_i solut norm math l c_i compos lcurv mathc_i regular solut vector correspond mathlambda_i user may determin number point lcurv adjust size input array tsqr method regular paramet mathlambda_i estim singular valu triangular mathr factor normal equat method estim eigenvalu mathxt x matrix function int gsl_multilarge_linear_rcond doubl rcond gsl_multilarge_linear_workspac work function comput reciproc condit number store datarcond least squar matrix accumul workspac datawork tsqr algorithm accomplish calcul svd mathr factor singular valu matrix mathx normal equat method done comput eigenvalu mathxt x could inaccur illcondit matric mathx index least squar troubleshoot troubleshoot use model base polynomi care taken construct design matrix mathx mathx valu larg matrix mathx could illcondit sinc column power mathx lead unstabl leastsquar solut case often help center scale mathx valu use mean standard deviat texinfo math x x mux sigmax texinfo x x musigma construct mathx matrix use transform valu mathx exampl exampl program section demonstr variou linear regress method simpl linear regress exampl follow program comput least squar straightlin fit simpl dataset output bestfit line associ one standarddevi error bar includ examplesfittingc code follow command extract data output program display use gnu plotutil graph util demo tmp tmp best fit x covari matrix chisq n data fit hi lo grep n tmp cut f n done graph x x x ie data fit hi lo result shown numreffig_fitwlinear _fig_fitwlinear figur imagesfitwlinearpng straight line fit mathsigma error bar multiparamet linear regress exampl follow program perform quadrat fit mathi c_ c_ x c_ x weight dataset use generalis linear fit function funcgsl_multifit_wlinear model matrix mathx quadrat fit given texinfo math x left beginarrayccc x_ x_ x_ x_ x_ x_ dot dot dot endarray right texinfo x x_ x_ x_ x_ x_ x_ column one correspond constant term mathc_ two remain column correspond term mathc_ x mathc_ x program read datan line data format datax datay dataerr dataerr error standard deviat valu datay includ examplesfittingc code suitabl set data fit gener use follow program output set point gaussian error curv mathi ex region math x includ examplesfittingc code data prepar run result execut program gsl_rng_typemt_ gener expdat expdat fit data use previou program number data point given first argument case data point fit expdat best fit x x covari matrix e e e e e e e e e chisq paramet quadrat fit match coeffici expans mathex take account error paramet mathox differ exponenti quadrat function larger valu mathx error paramet given squareroot correspond diagon element covari matrix chisquar per degre freedom indic reason fit data numreffig_fitwlinear show result fit _fig_fitwlinear figur imagesfitwlinearpng weight fit exampl error bar regular linear regress exampl next program demonstr differ ordinari regular least squar design matrix nearsingular program gener two random normal distribut variabl mathu mathv mathv u nois mathu mathv nearli colinear set third depend variabl mathi u v nois solv coeffici mathc_c_ model mathyc_c_ c_ u c_ v sinc mathu approx v design matrix mathx nearli singular lead unstabl ordinari least squar solut program output matrix condit number e unregular fit best fit u v residu norm solut norm chisqdof regular fit lcurv optim lambda best fit u v residu norm solut norm chisqdof regular fit gcv optim lambda best fit u v residu norm solut norm chisqdof see ordinari least squar solut complet wrong lcurv regular method optim mathlambda find correct solut mathc_ approx c_ approx gcv regular method find regular paramet mathlambda small give accur solut although perform better ol lcurv comput corner well gcv curv minimum plot numreffig_regular _fig_regular figur imagesregularizedpng lcurv gcv curv exampl program program given includ examplesfitregc code regular linear regress exampl follow exampl program minim cost function math x c lambda x mathx mathbymath hilbert matrix whose entri given texinfo math x_ij j texinfo x_ij j right hand side vector given mathi solut comput mathlambda unregular well optim paramet mathlambda chosen analyz lcurv gcv curv program output matrix condit number e unregular fit residu norm solut norm e chisqdof regular fit lcurv optim lambda e residu norm solut norm chisqdof regular fit gcv optim lambda residu norm solut norm chisqdof see unregular solut result larg solut norm due illcondit matrix lcurv solut find small valu mathlambda e still result badli condit system larg solut norm gcv method find paramet mathlambda result wellcondit system small solut norm lcurv comput corner well gcv curv minimum plot numreffig_regular _fig_regular figur imagesregularizedpng lcurv gcv curv exampl program program given includ examplesfitregc code robust linear regress exampl next program demonstr advantag robust least squar dataset outlier program gener linear mathxi data pair line mathi x add random nois insert outlier dataset robust ordinari least squar ol coeffici comput comparison includ examplesrobfitc code output program shown numreffig_robust _fig_robust figur imagesrobustpng linear fit dataset outlier larg dens linear regress exampl follow program demostr larg dens linear least squar solver exampl adapt trefethen bau fit function mathft expsint interv math degre polynomi program gener mathn equal space point matht_i interv calcul function valu add random nois determin observ valu mathy_i entri least squar matrix mathx_ij t_ij repres polynomi fit matrix highli illcondit condit number math cdot program accumul matrix least squar system block row way full matrix mathx never store memori solv system normal equat tsqr method result shown numreffig_multilarg top left plot see unregular normal equat solut larger error tsqr due illcondit matrix bottom left plot show lcurv exhibit multipl corner top right panel plot regular solut use mathlambda tsqr normal solut agre howev unabl provid good fit due damp indic illcondit problem regular normal equat improv solut illustr bottom right panel plot lcurv calcul normal equat curv agre tsqr curv larger damp paramet small mathlambda normal equat approach provid accur solut vector lead numer inaccuraci left portion curv _fig_multilarg figur imagesmultilargepng includ exampleslargefitc code refer read summari formula techniqu least squar fit found statist chapter annual review particl physic prepar particl data group review particl properti rm barnett et al physic review httppdglblgov review particl physic avail onlin websit given index singl nist statist refer dataset singl statist refer dataset strd test use prepar routin base nist statist refer dataset dataset document avail nist follow websit httpwwwnistgovitldivstrdindexhtml inform tikhonov regular found hansen p c rankdefici discret illpos problem numer aspect linear invers siam monogr mathemat model comput societi industri appli mathemat rezghi hosseini new variant lcurv tikhonov regular journal comput appli mathemat volum issu page gsl implement robust linear regress close follow public dumouchel w f obrien integr robust option multipl regress comput environ comput scienc statist proceed st symposium interfac american statist associ street jo rj carrol ruppert note comput robust regress estim via iter reweight least squar american statistician v pp inform normal equat tsqr approach solv larg linear least squar system found public trefethen l n bau numer linear algebra siam demmel j grigori l hoemmen f langou j communicationoptim parallel sequenti qr lu factor ucb technic report ucbeec index singl nonlinear least squar singl least squar nonlinear nonlinear leastsquar fit includ includerst chapter describ function multidimension nonlinear leastsquar fit gener two class algorithm solv nonlinear least squar problem fall line search method trust region method gsl current implement trust region method provid user full access intermedi step iter user also abil tune number paramet affect lowlevel aspect algorithm help acceler converg specif problem hand gsl provid two separ interfac nonlinear least squar fit first design small moder size problem second design larg problem may may signific spars structur header file filegsl_multifit_nlinearh contain prototyp multidimension nonlinear fit function relat declar relat small moder size system header file filegsl_multilarge_nlinearh contain prototyp multidimension nonlinear fit function relat declar relat larg system index singl nonlinear least squar overview overview problem multidimension nonlinear leastsquar fit requir minim squar residu mathn function mathf_i mathp paramet mathx_i texinfo math phix fx sum_in f_i x_ dot x_p texinfo phix fx sum_in f_ix_ x_p trust region method object cost function mathphix approxim model function mathm_kdelta vicin point mathx_k model function often simpli second order taylor seri expans around point mathx_k ie texinfo math phix_k delta approx m_kdelta phix_k g_kt delta deltat b_k delta texinfo phix_k delta m_kdelta phix_k g_kt delta deltat b_k delta mathg_k nabla phix_k jt f gradient vector point mathx_k mathb_k nabla phix_k hessian matrix mathx_k approxim mathj mathnbymathp jacobian matrix texinfo math j_ij partial f_i partial x_j texinfo j_ij f_i x_j order find next step mathdelta minim model function mathm_kdelta search solut within region trust mathm_kdelta good approxim object function mathphix_k delta word seek solut trust region subproblem tr texinfo math min_delta rp m_kdelta phix_k g_kt delta deltat b_k delta qquadhboxstquad d_k delta le delta_k texinfo min_delta rp m_kdelta st d_k delta delta_k mathdelta_k trust region radiu mathd_k scale matrix mathd_k trust region ball radiu mathdelta_k center mathx_k applic paramet vector mathx may wide differ scale exampl one paramet might temperatur order math k anoth might length order math case spheric trust region may best choic sinc mathphi chang rapidli along direct one scale slowli along direct differ scale model function mathm_k may poor approxim mathphi along rapidli chang direct problem may best use ellipt trust region set mathd_k diagon matrix whose entri design scale step mathd_k delta entri approxim order magnitud trust region subproblem normal amount solv linear least squar system multipl system step mathdelta mathdelta comput check whether reduc object function mathphix use statist look ratio texinfo math rho_k phix_k phix_k delta_k m_k m_kdelta_k texinfo rho_k phix_k phix_k delta_k m_k m_kdelta_k numer actual reduct object function due step mathdelta_k denomin predict reduct due model mathm_k mathrho_k neg mean step mathdelta_k increas object function reject mathrho_k posit found step reduc object function accept furthermor mathrho_k close indic model function good approxim object function trust region next iter trust region enlarg order take ambiti step step reject trust region made smaller tr solv outlin gener trust region method use gsl given trust region algorithm initi given mathx_ construct mathm_delta mathd_ mathdelta_ k converg stop b solv tr trial step mathdelta_k c evalu trial step comput mathrho_k step accept set mathx_k x_k delta_k increas radiu mathdelta_k alpha delta_k step reject set mathx_k x_k decreas radiu mathdelta_k delta_k beta goto b construct mathm_kdelta mathd_k gsl offer user number differ algorithm solv trust region subproblem b well differ choic scale matric mathd_k differ method updat trust region radiu mathdelta_k therefor reason default method provid user lot control finetun variou step algorithm specif problem solv trust region subproblem tr describ method avail solv trust region subproblem method avail provid either exact approxim solut trust region subproblem algorithm hessian matrix mathb_k approxim mathb_k approx j_kt j_k mathj_k jx_k method solut tr involv solv linear least squar system involv jacobian matrix small moder size problem codegsl_multifit_nlinear interfac accomplish factor full jacobian matrix provid user choleski qr svd decomposit larg system codegsl_multilarge_nlinear interfac user two choic one solv system iter without need store full jacobian matrix memori method user must provid routin calcul matrixvector product mathj u mathjt u given vector mathu iter method particularli use system jacobian spars structur sinc form matrixvector product done cheapli second option larg system involv form normal equat matrix mathjt j factor use choleski decomposit normal equat matrix mathpbymathp typic much smaller full mathnbymathp jacobian usual store memori even full jacobian matrix option use larg dens system iter method difficulti converg index singl levenbergmarquardt algorithm singl nonlinear least squar levenbergmarquardt levenbergmarquardt theorem state mathdelta_k solut trust region subproblem given exist mathmu_k ge texinfo math left b_k mu_k d_kt d_k right delta_k g_k texinfo b_k mu_k d_kt d_k delta_k g_k mathmu_k delta_k d_k delta_k form basi levenbergmarquardt algorithm control trust region size adjust paramet mathmu_k rather radiu mathdelta_k directli radiu mathdelta_k uniqu paramet mathmu_k solv tr invers relationship larg valu mathmu_k correspond smaller trust region small valu mathmu_k correspond larger trust region approxim mathb_k approx j_kt j_k iter order calcul step mathdelta_k follow linear least squar problem solv texinfo math left beginarrayc j_k sqrtmu_k d_k endarray right delta_k left beginarrayc f_k cr endarray right texinfo j_k sqrtmu_k d_k delta_k f_k step mathdelta_k accept mathmu_k decreas next iter order take larger step otherwis increas take smaller step levenbergmarquardt algorithm provid exact solut trust region subproblem typic higher comput cost per iter approxim method discuss sinc may need solv least squar system sever time differ valu mathmu_k index singl levenbergmarquardt algorithm geodes acceler singl nonlinear least squar levenbergmarquardt geodes acceler levenbergmarquardt geodes acceler method appli socal geodes acceler correct standard levenbergmarquardt step mathdelta_k transtrum et al interpret mathdelta_k first order step along geodes model paramet space ie veloc mathdelta_k v_k geodes acceler matha_k second order correct along geodes determin solv linear least squar system texinfo math left beginarrayc j_k sqrtmu_k d_k endarray right a_k left beginarrayc f_vvx_k endarray right texinfo j_k sqrtmu_k d_k a_k f_vvx_k mathf_vv second direct deriv residu vector veloc direct mathv mathf_vvx d_v f sum_alphabeta v_alpha v_beta partial_alpha partial_beta fx mathalpha mathbeta sum mathp paramet new total step mathdelta_k v_k a_k second order correct matha_k calcul modest addit cost shown dramat reduc number iter expens jacobian evalu requir reach converg varieti differ problem order util geodes acceler user must suppli function provid second direct deriv vector mathf_vvx altern librari use finit differ method estim vector one addit function evalu mathfx h v mathh tunabl step size see codeh_fvv paramet descript index singl dogleg algorithm singl nonlinear least squar dogleg dogleg powel dogleg method find approxim solut trust region subproblem restrict search piecewis linear dogleg path compos origin cauchi point repres model minim along steepest descent direct gaussnewton point overal minim unconstrain model gaussnewton step calcul solv math j_k delta_gn f_k main comput task iter need perform per iter gaussnewton point insid trust region select step outsid method calcul cauchi point locat along gradient direct cauchi point also outsid trust region method assum still far minimum proce along gradient direct truncat step trust region boundari cauchi point insid trust region gaussnewton point outsid method use dogleg step linear combin gradient direct gaussnewton direct stop trust region boundari index singl doubl dogleg algorithm singl dogleg algorithm doubl singl nonlinear least squar doubl dogleg doubl dogleg method improv classic dogleg algorithm attempt includ inform gaussnewton step iter still far minimum cauchi point insid trust region gaussnewton point outsid method comput scale gaussnewton point take dogleg step cauchi point scale gaussnewton point scale calcul ensur reduct model mathm_k reduct provid cauchi point two dimension subspac dogleg method restrict search tr solut curv defin cauchi gaussnewton point improv search solut use full two dimension subspac span cauchi gaussnewton direct dogleg path cours insid subspac method solv tr least accur dogleg method sinc method search larger subspac solut converg quickli dogleg problem subspac two dimension method effici main comput per iter determin gaussnewton point steihaugtoint conjug gradient one difficulti dogleg method calcul gaussnewton step jacobian matrix singular steihaugtoint method also comput gener dogleg step avoid solv gaussnewton step directli instead use iter conjug gradient algorithm method perform well point jacobian singular also suitabl largescal problem factor jacobian matrix could prohibit expens weight nonlinear leastsquar weight nonlinear leastsquar fit minim function texinfo math phix f _w sum_in w_i f_i x_ dot x_p texinfo phix fx _w sum_in f_ix_ x_p mathw diagw_w_w_n weight matrix mathf_w ft w f weight mathw_i commonli defin mathw_i sigma_i mathsigma_i error mathith measur simpl chang variabl mathtildef w f yield mathphix tildef form unweight case user either perform transform directli function residu jacobian use funcgsl_multifit_nlinear_winit interfac automat perform correct scale manual perform transform residu jacobian modifi accord texinfo math tildef_i sqrtw_i f_i f_i sigma_i tildej_ij sqrtw_i partial f_i partial x_j sigma_i partial f_i partial x_j texinfo f_i f_i sigma_i j_ij sigma_i df_idx_j larg system user must perform weight _sec_tunableparamet tunabl paramet user tune nearli aspect iter alloc time codegsl_multifit_nlinear interfac user may modifi typegsl_multifit_nlinear_paramet structur defin follow type gsl_multifit_nlinear_paramet typedef struct const gsl_multifit_nlinear_tr tr trust region subproblem method const gsl_multifit_nlinear_scal scale scale method const gsl_multifit_nlinear_solv solver solver method gsl_multifit_nlinear_fdtyp fdtype finit differ method doubl factor_up factor increas trust radiu doubl factor_down factor decreas trust radiu doubl avmax max allow av doubl h_df step size finit differ jacobian doubl h_fvv step size finit differ fvv gsl_multifit_nlinear_paramet codegsl_multilarge_nlinear interfac user may modifi typegsl_multilarge_nlinear_paramet structur defin follow type gsl_multilarge_nlinear_paramet typedef struct const gsl_multilarge_nlinear_tr tr trust region subproblem method const gsl_multilarge_nlinear_scal scale scale method const gsl_multilarge_nlinear_solv solver solver method gsl_multilarge_nlinear_fdtyp fdtype finit differ method doubl factor_up factor increas trust radiu doubl factor_down factor decreas trust radiu doubl avmax max allow av doubl h_df step size finit differ jacobian doubl h_fvv step size finit differ fvv size_t max_it maximum iter tr method doubl tol toler solv tr gsl_multilarge_nlinear_paramet paramet discuss detail type gsl_multifit_nlinear_tr gsl_multilarge_nlinear_tr paramet datatr determin method use solv trust region subproblem may select follow choic var gsl_multifit_nlinear_trs_lm gsl_multilarge_nlinear_trs_lm select levenbergmarquardt algorithm var gsl_multifit_nlinear_trs_lmaccel gsl_multilarge_nlinear_trs_lmaccel select levenbergmarquardt algorithm geodes acceler var gsl_multifit_nlinear_trs_dogleg gsl_multilarge_nlinear_trs_dogleg select dogleg algorithm var gsl_multifit_nlinear_trs_ddogleg gsl_multilarge_nlinear_trs_ddogleg select doubl dogleg algorithm var gsl_multifit_nlinear_trs_subspac gsl_multilarge_nlinear_trs_subspac select subspac algorithm var gsl_multilarge_nlinear_trs_cgst select steihaugtoint conjug gradient algorithm method avail larg system type gsl_multifit_nlinear_scal gsl_multilarge_nlinear_scal paramet datascal determin diagon scale matrix mathd may select follow choic var gsl_multifit_nlinear_scale_mor gsl_multilarge_nlinear_scale_mor damp strategi suggest correspond mathdt maxdiagjt j word maximum element mathdiagjt j encount thu far iter choic mathd make problem scaleinvari model paramet mathx_i scale arbitrari constant mathtildex_i a_i x_i sequenc iter produc algorithm would unchang method work well case model paramet wide differ scale ie paramet measur nanomet other measur degre kelvin strategi proven effect larg class problem librari default may best choic problem var gsl_multifit_nlinear_scale_levenberg gsl_multilarge_nlinear_scale_levenberg damp strategi origin suggest levenberg correspond mathdt method also proven effect larg class problem scaleinvari howev author eg transtrum sethna argu choic better problem suscept paramet evapor ie paramet go infin var gsl_multifit_nlinear_scale_marquardt gsl_multilarge_nlinear_scale_marquardt damp strategi suggest marquardt correspond mathdt diagjt j method scaleinvari gener consid inferior levenberg strategi though may work well certain class problem type gsl_multifit_nlinear_solv gsl_multilarge_nlinear_solv solv trust region subproblem iter almost alway requir solut follow linear least squar system texinfo math left beginarrayc j sqrtmu endarray right delta left beginarrayc f endarray right texinfo j sqrtmu delta f datasolv paramet determin system solv select follow choic var gsl_multifit_nlinear_solver_qr method solv system use rank reveal qr decomposit jacobian mathj method produc reliabl solut case jacobian rank defici nearsingular requir twice mani oper choleski method discuss var gsl_multifit_nlinear_solver_choleski gsl_multilarge_nlinear_solver_choleski method solv altern normal equat problem texinfo math left jt j mu dt right delta jt f texinfo jt j mu dt delta jt f use choleski decomposit matrix mathjt j mu dt method faster qr approach howev suscept numer instabl jacobian matrix rank defici nearsingular case attempt made reduc condit number matrix use jacobi precondit highli illcondit problem qr approach better known jacobian matrix well condit method accur perform faster qr approach var gsl_multifit_nlinear_solver_svd method solv system use singular valu decomposit jacobian mathj method produc reliabl solut illcondit jacobian also slowest solver method type gsl_multifit_nlinear_fdtyp paramet datafdtyp specifi whether use forward center differ approxim jacobian use analyt jacobian provid solver paramet may set one follow choic macro gsl_multifit_nlinear_fwdiff specifi forward finit differ approxim jacobian matrix jacobian matrix calcul texinfo math j_ij delta_j left f_ix delta_j e_j f_ix right texinfo j_ij delta_j f_ix delta_j e_j f_ix mathdelta_j h x_j mathe_j standard mathjth cartesian unit basi vector mathx delta_j e_j repres small forward perturb mathjth paramet amount mathdelta_j perturb mathdelta_j proport current valu mathx_j help calcul accur jacobian variou paramet differ scale size valu mathh specifi codeh_df paramet accuraci method mathoh evalu matrix requir addit mathp function evalu macro gsl_multifit_nlinear_ctrdiff specifi center finit differ approxim jacobian matrix jacobian matrix calcul texinfo math j_ij delta_j left f_ix delta_j e_j f_ix delta_j e_j right texinfo j_ij delta_j f_ix delta_j e_j f_ix delta_j e_j see descript mathdelta_j accuraci method mathoh evalu matrix requir addit mathp function evalu codedoubl factor_up step accept trust region radiu increas factor default valu math codedoubl factor_down step reject trust region radiu decreas factor default valu math codedoubl avmax use geodes acceler solv nonlinear least squar problem import paramet monitor ratio acceler term veloc term texinfo math v texinfo v ratio small mean acceler correct contribut littl step could problem nonlinear enough benefit acceler ratio larg math mean acceler larger veloc shouldnt happen sinc step repres truncat seri second order term matha smaller first order term mathv guarante converg therefor step ratio larger paramet dataavmax reject dataavmax set default problem experi difficulti converg threshold could lower codedoubl h_df paramet specifi step size approxim jacobian matrix finit differ set mathsqrtepsilon default mathepsilon macrogsl_dbl_epsilon codedoubl h_fvv use geodes acceler user must either suppli function calcul mathf_vvx librari estim second direct deriv use finit differ method use finit differ librari must calcul mathfx h v mathh repres small step veloc direct paramet datah_fvv defin step size set default initi solver type gsl_multifit_nlinear_typ structur specifi type algorithm use solv nonlinear least squar problem may select follow choic var gsl_multifit_nlinear_trust specifi trust region method current implement nonlinear least squar method function gsl_multifit_nlinear_workspac gsl_multifit_nlinear_alloc const gsl_multifit_nlinear_typ const gsl_multifit_nlinear_paramet param const size_t n const size_t p gsl_multilarge_nlinear_workspac gsl_multilarge_nlinear_alloc const gsl_multilarge_nlinear_typ const gsl_multilarge_nlinear_paramet param const size_t n const size_t p function return pointer newli alloc instanc deriv solver type datat datan observ datap paramet dataparam input specifi tunabl set paramet affect import detail iter trust region subproblem algorithm recommend start suggest default paramet see funcgsl_multifit_nlinear_default_paramet funcgsl_multilarge_nlinear_default_paramet tune paramet code work correctli see refsec_tunableparamet descript variou paramet exampl follow code creat instanc levenbergmarquardt solver data point paramet use suggest default const gsl_multifit_nlinear_typ gsl_multifit_nlinear_trust gsl_multifit_nlinear_paramet param gsl_multifit_nlinear_default_paramet gsl_multifit_nlinear_workspac w gsl_multifit_nlinear_alloc param number observ datan must greater equal paramet datap insuffici memori creat solver function return null pointer error handler invok error code macrogsl_enomem function gsl_multifit_nlinear_paramet gsl_multifit_nlinear_default_paramet void gsl_multilarge_nlinear_paramet gsl_multilarge_nlinear_default_paramet void function return set recommend default paramet use solv nonlinear least squar problem user tune paramet improv perform particular problem see refsec_tunableparamet function int gsl_multifit_nlinear_init const gsl_vector x gsl_multifit_nlinear_fdf fdf gsl_multifit_nlinear_workspac w int gsl_multifit_nlinear_winit const gsl_vector x const gsl_vector wt gsl_multifit_nlinear_fdf fdf gsl_multifit_nlinear_workspac w int gsl_multilarge_nlinear_init const gsl_vector x gsl_multilarge_nlinear_fdf fdf gsl_multilarge_nlinear_workspac w function initi reiniti exist workspac dataw use system datafdf initi guess datax see refsec_providingfunctionminim descript datafdf structur option weight vector datawt given perform weight nonlinear regress weight matrix mathw diagw_w_w_n function void gsl_multifit_nlinear_fre gsl_multifit_nlinear_workspac w void gsl_multilarge_nlinear_fre gsl_multilarge_nlinear_workspac w function free memori associ workspac dataw function const char gsl_multifit_nlinear_nam const gsl_multifit_nlinear_workspac w const char gsl_multilarge_nlinear_nam const gsl_multilarge_nlinear_workspac w function return pointer name solver exampl printf w solvern gsl_multifit_nlinear_nam w would print someth like codew trustregion solver function const char gsl_multifit_nlinear_trs_nam const gsl_multifit_nlinear_workspac w const char gsl_multilarge_nlinear_trs_nam const gsl_multilarge_nlinear_workspac w function return pointer name trust region subproblem method exampl printf w solvern gsl_multifit_nlinear_trs_nam w would print someth like codew levenbergmarquardt solver _sec_providingfunctionminim provid function minim user must provid mathn function mathp variabl minim algorithm oper order allow arbitrari paramet function defin follow data type type gsl_multifit_nlinear_fdf data type defin gener system function arbitrari paramet correspond jacobian matrix deriv option second direct deriv function geodes acceler codeint f const gsl_vector x void param gsl_vector f function store mathn compon vector mathfx dataf argument datax arbitrari paramet dataparam return appropri error code function comput codeint df const gsl_vector x void param gsl_matrix j function store datanbydatap matrix result texinfo math j_ij partial f_ix partial x_j texinfo j_ij f_ix x_j dataj argument datax arbitrari paramet dataparam return appropri error code matrix comput analyt jacobian unavail expens comput function pointer may set codenul case jacobian intern comput use finit differ approxim function dataf codeint fvv const gsl_vector x const gsl_vector v void param gsl_vector fvv geodes acceler enabl function store mathn compon vector mathf_vvx sum_alphabeta v_alpha v_beta partial partial x_alpha partial partial x_beta fx repres second direct deriv function minim output datafvv paramet vector provid datax veloc vector provid datav mathp compon arbitrari paramet given dataparam analyt express mathf_vvx unavail difficult comput function pointer may set codenul case mathf_vvx comput intern use finit differ approxim codesize_t n number function ie number compon vector dataf codesize_t p number independ variabl ie number compon vector datax codevoid param pointer arbitrari paramet function codesize_t nevalf need set user count number function evalu initi code_init function codesize_t nevaldf need set user count number jacobian evalu initi code_init function codesize_t nevalfvv need set user count number mathf_vvx evalu initi code_init function type gsl_multilarge_nlinear_fdf data type defin gener system function arbitrari paramet function comput mathj u mathjt u given vector mathu normal equat matrix mathjt j option second direct deriv function geodes acceler codeint f const gsl_vector x void param gsl_vector f function store mathn compon vector mathfx dataf argument datax arbitrari paramet dataparam return appropri error code function comput codeint df cblas_transpose_t transj const gsl_vector x const gsl_vector u void param gsl_vector v gsl_matrix jtj datatransj equal codecblasnotran function comput matrixvector product mathj u store result datav datatransj equal codecblastran function comput matrixvector product mathjt u store result datav addit normal equat matrix mathjt j store lower half datajtj input matrix datajtj could set codenul exampl iter method requir matrix user check prior construct matrix input dataparam contain arbitrari paramet codeint fvv const gsl_vector x const gsl_vector v void param gsl_vector fvv geodes acceler enabl function store mathn compon vector mathf_vvx sum_alphabeta v_alpha v_beta partial partial x_alpha partial partial x_beta fx repres second direct deriv function minim output datafvv paramet vector provid datax veloc vector provid datav mathp compon arbitrari paramet given dataparam analyt express mathf_vvx unavail difficult comput function pointer may set codenul case mathf_vvx comput intern use finit differ approxim codesize_t n number function ie number compon vector dataf codesize_t p number independ variabl ie number compon vector datax codevoid param pointer arbitrari paramet function codesize_t nevalf need set user count number function evalu initi code_init function codesize_t nevaldfu need set user count number jacobian matrixvector evalu mathj u mathjt u initi code_init function codesize_t nevaldf need set user count number mathjt j evalu initi code_init function codesize_t nevalfvv need set user count number mathf_vvx evalu initi code_init function note fit nonlinear model experiment data data pass function use dataparam argument trial bestfit paramet datax argument iter follow function drive iter algorithm function perform one iter trust region method updat state solver function int gsl_multifit_nlinear_iter gsl_multifit_nlinear_workspac w int gsl_multilarge_nlinear_iter gsl_multilarge_nlinear_workspac w function perform singl iter solver dataw iter encount unexpect problem error code return solver workspac maintain current estim bestfit paramet time solver workspac dataw contain follow entri use track progress solut codegsl_vector x current posit length mathp codegsl_vector f function residu vector current posit mathfx length mathn codegsl_matrix j jacobian matrix current posit mathjx size mathnbymathp codegsl_multifit_nlinear interfac codegsl_vector dx differ current posit previou posit ie last step mathdelta taken vector length mathp quantiti access follow function function gsl_vector gsl_multifit_nlinear_posit const gsl_multifit_nlinear_workspac w gsl_vector gsl_multilarge_nlinear_posit const gsl_multilarge_nlinear_workspac w function return current posit mathx ie bestfit paramet solver dataw function gsl_vector gsl_multifit_nlinear_residu const gsl_multifit_nlinear_workspac w gsl_vector gsl_multilarge_nlinear_residu const gsl_multilarge_nlinear_workspac w function return current residu vector mathfx solver dataw weight system residu vector includ weight factor mathsqrtw function gsl_matrix gsl_multifit_nlinear_jac const gsl_multifit_nlinear_workspac w function return pointer mathnbymathp jacobian matrix current iter solver dataw function avail codegsl_multifit_nlinear interfac function size_t gsl_multifit_nlinear_nit const gsl_multifit_nlinear_workspac w size_t gsl_multilarge_nlinear_nit const gsl_multilarge_nlinear_workspac w function return number iter perform far iter counter updat call code_iter function reset code_init function function int gsl_multifit_nlinear_rcond doubl rcond const gsl_multifit_nlinear_workspac w int gsl_multilarge_nlinear_rcond doubl rcond const gsl_multilarge_nlinear_workspac w function estim reciproc condit number jacobian matrix current posit mathx store datarcond comput valu estim give user guidelin condit particular problem calcul base factor method use choleski qr svd choleski solver matrix mathjt j factor iter therefor function estim norm condit number mathrcond jt j_ cdot jt j_ qr solver mathj factor mathj q r iter simplic function calcul norm condit mathr factor mathrcond r_ cdot r_ comput effici sinc mathr upper triangular svd solver order effici solv trust region subproblem matrix factor mathj instead mathj result singular valu use provid norm reciproc condit number mathrcond sigma_min sigma_max note use scale mathd ne result datarcond estim may significantli differ true datarcond mathj function doubl gsl_multifit_nlinear_avratio const gsl_multifit_nlinear_workspac w doubl gsl_multilarge_nlinear_avratio const gsl_multilarge_nlinear_workspac w function return current ratio matha v acceler correct term veloc step term acceler term comput typegsl_multifit_nlinear_trs_lmaccel typegsl_multilarge_nlinear_trs_lmaccel method ratio zero tr method index singl nonlinear fit stop paramet converg test converg minim procedur stop one follow condit true minimum found within userspecifi precis userspecifi maximum number iter reach error occur handl condit user control function allow user test current estim bestfit paramet sever standard way function int gsl_multifit_nlinear_test const doubl xtol const doubl gtol const doubl ftol int info const gsl_multifit_nlinear_workspac w int gsl_multilarge_nlinear_test const doubl xtol const doubl gtol const doubl ftol int info const gsl_multilarge_nlinear_workspac w function test converg minim method use follow criteria test small step size rel current paramet vector math delta_i le xtol x_i xtol math p element step vector mathdelta test individu case differ paramet wide differ scale ad dataxtol mathx_i help test avoid break situat true solut valu mathx_i test succe datainfo set function return macrogsl_success gener guidelin select step toler choos mathxtol mathd number accur decim digit desir solut mathx see denni schnabel inform test small gradient mathg nabla phix jt f indic local function minimum texinfo math max_i g_i time maxx_i le gtol time maxphix texinfo g_inf gtol express test whether ratio mathnabla phi_i x_i phi small test scale gradient better mathnabla phi alon sinc dimensionless quantiti independ scale problem codemax argument help ensur test doesnt break region mathx_i mathphix close test succe datainfo set function return macrogsl_success gener guidelin choos gradient toler set codegtol gsl_dbl_epsilon see denni schnabel inform none test succeed datainfo set function return macrogsl_continu indic iter requir high level driver routin provid high level wrapper combin iter converg test easi use function int gsl_multifit_nlinear_driv const size_t maxit const doubl xtol const doubl gtol const doubl ftol void callbackconst size_t iter void param const gsl_multifit_linear_workspac w void callback_param int info gsl_multifit_nlinear_workspac w int gsl_multilarge_nlinear_driv const size_t maxit const doubl xtol const doubl gtol const doubl ftol void callbackconst size_t iter void param const gsl_multilarge_linear_workspac w void callback_param int info gsl_multilarge_nlinear_workspac w function iter nonlinear least squar solver dataw maximum datamaxit iter iter system test converg error toler dataxtol datagtol dataftol addit user may suppli callback function datacallback call iter user may save print relev quantiti iter paramet datacallback_param pass datacallback function paramet datacallback datacallback_param may set codenul disabl featur upon success converg function return macrogsl_success set datainfo reason converg see funcgsl_multifit_nlinear_test function converg datamaxit iter macrogsl_emaxit return rare case iter algorithm may unabl find new accept step mathdelta take case macrogsl_enoprog return indic progress made problem difficulti converg see refsec_nlineartroubleshoot guidanc index singl bestfit paramet covari singl least squar covari bestfit paramet singl covari matrix nonlinear fit covari matrix best fit paramet function int gsl_multifit_nlinear_covar const gsl_matrix j const doubl epsrel gsl_matrix covar int gsl_multilarge_nlinear_covar gsl_matrix covar gsl_multilarge_nlinear_workspac w function comput covari matrix bestfit paramet use jacobian matrix dataj store datacovar paramet dataepsrel use remov lineardepend column dataj rank defici covari matrix given math c jt j weight case math c jt w j comput use factor form jacobian choleski qr svd column mathr satisfi math r_kk leq epsrel r_ consid linearlydepend exclud covari matrix correspond row column covari matrix set zero minimis use weight leastsquar function mathf_i yx t_i y_i sigma_i covari matrix give statist error bestfit paramet result gaussian error mathsigma_i underli data mathy_i verifi relat mathdelta f j delta c fact fluctuat mathf data mathy_i normalis mathsigma_i satisfi texinfo math langl delta f delta ft rangl texinfo delta f delta ft unweight leastsquar function mathf_i yx t_i y_i covari matrix multipli varianc residu bestfit mathsigma sum y_i yxt_i np give variancecovari matrix mathsigma c estim statist error bestfit paramet scatter underli data inform covari matric see reflinear leastsquar overview sec_llsoverview _sec_nlineartroubleshoot troubleshoot develop code solv nonlinear least squar problem consider keep mind common difficulti accur implement jacobian matrix analyt jacobian properli provid solver hinder mani time prevent converg method develop new nonlinear least squar code often help compar program output intern comput finit differ jacobian user suppli analyt jacobian larg differ coeffici like analyt jacobian incorrectli implement code difficulti converg next thing check start point provid solver method chapter local method mean provid start point far away true minimum method may converg local minimum converg sometim possibl solv linear approxim nonlinear problem use linear solut start point nonlinear problem variou paramet coeffici vector mathx vari wide magnitud problem said badli scale method chapter attempt automat rescal element mathx roughli order magnitud extrem case could still caus problem converg case recommend user scale paramet vector mathx paramet span roughli rang say math solut vector backscal recov origin unit problem exampl follow exampl program demonstr nonlinear least squar fit capabl exponenti fit exampl follow exampl program fit weight exponenti model background experiment data mathi explambda b first part program set function funcexpb_f funcexpb_df calcul model jacobian appropri fit function given math f_i explambda t_i b y_i chosen matht_i n mathn number data point fit matht_i jacobian matrix mathj deriv function respect three paramet matha mathlambda mathb given texinfo math j_ij partial f_i partial x_j texinfo j_ij f_i x_j mathx_ mathx_ lambda mathx_ b mathith row jacobian therefor texinfo math j_icdot left beginarrayccc explambda t_i t_i explambda t_i endarray right texinfo ji explambda t_i t_i explambda t_i main part program set levenbergmarquardt solver simul random data data use known paramet combin gaussian nois standard deviat maximum time matht mathn timestep initi guess paramet chosen iter termin rel chang x smaller math magnitud gradient fall math result run program iter lambda b condj inf fx iter lambda b condj fx iter lambda b condj fx iter lambda b condj fx iter lambda b condj fx iter lambda b condj fx iter lambda b condj fx iter lambda b condj fx iter lambda b condj fx iter lambda b condj fx iter lambda b condj fx iter lambda b condj fx iter lambda b condj fx iter lambda b condj fx iter lambda b condj fx iter lambda b condj fx iter lambda b condj fx iter lambda b condj fx iter lambda b condj fx summari method trustregionlevenbergmarquardt number iter function evalu jacobian evalu reason stop small step size initi fx final fx chisqdof lambda b statu success approxim valu paramet found correctli chisquar valu indic good fit chisquar per degre freedom approxim case error paramet estim squar root diagon element covari matrix chisquar valu show poor fit ie mathchinp gg error estim obtain covari matrix small exampl program error estim multipli mathsqrtchinp case common way increas error poor fit note poor fit result use inappropri model scale error estim may outsid rang valid gaussian error addit see condit number mathjx stay reason small throughout iter indic could safe switch choleski solver speed improv although particular system small realli benefit numreffig_fitexp show fit curv origin data _fig_fitexp figur imagesfitexppng scale exponenti fit curv data includ examplesnlfitc code geodes acceler exampl follow exampl program minim modifi rosenbrock function character narrow canyon steep wall start point select high canyon wall solver must first find canyon bottom navig minimum problem solv without use geodes acceler comparison cost function given texinfo math phix f_ f_ f_ left x_ x_ right f_ x_ texinfo phix f f f x x f x jacobian matrix texinfo math j left beginarraycc partial f_ partial x_ partial f_ partial x_ partial f_ partial x_ partial f_ partial x_ endarray right left beginarraycc x_ endarray right texinfo j x order use geodes acceler user must provid second direct deriv residu veloc direct mathd_v f_i sum_alphabeta v_alpha v_beta partial_alpha partial_beta f_i veloc vector mathv provid solver exampl deriv texinfo math f_vv d_v left beginarrayc f_ f_ endarray right left beginarrayc v_ endarray right texinfo fvv v solut minim problem texinfo math x left beginarrayc endarray right phix texinfo x phix program output shown solv system without acceler niter nfev njev naev initi cost e final cost e final x e e final condj e solv system acceler niter nfev njev naev initi cost e final cost e final x e e final condj e _fig_nlfit figur imagesnlfitpng path taken solver rosenbrock function see enabl geodes acceler requir less third number jacobian evalu order locat minimum path taken method shown numreffig_nlfit contour show cost function mathphix_x_ see method quickli find canyon bottom geodes acceler method navig along bottom solut significantli fewer iter program given includ examplesnlfitc code geodes acceler exampl follow exampl fit set data gaussian model use levenbergmarquardt method geodes acceler cost function texinfo math phix sum_i f_i f_i y_i yabct_i texinfo phix sum_i f_i f_i y_i yabct_i mathy_i measur data point time matht_i model specifi texinfo math yabct exp left left b c right right texinfo yabct exp tbc paramet mathabc repres amplitud mean width gaussian respect program gener mathy_i data math use valu matha mathb mathc ad random nois mathith row jacobian texinfo math j_i left beginarrayccc partial f_i partial partial f_i partial b partial f_i partial c endarray right left beginarrayccc e_i c z_i e_i c z_i e_i endarray right texinfo ji e_i acz_ie_i acz_ie_i texinfo math z_i t_i b c e_i expleft z_i right texinfo z_i t_i b c e_i exp z_i order use geodes acceler need second direct deriv residu veloc direct mathd_v f_i sum_alphabeta v_alpha v_beta partial_alpha partial_beta f_i mathv provid solver comput help make tabl second deriv residu mathf_i respect combin model paramet tabl texinfo math beginarraycccc partial partial partial partial b partial partial c cr partial partial z_i c e_i z_i c e_i cr partial partial b c left z_i right e_i c z_i left z_i right e_i cr partial partial c c z_i left z_i right e_i endarray lower half tabl omit sinc symmetr second direct deriv mathf_i texinfo math d_v f_i v_a partial_a f_i v_a v_b partial_a partial_b f_i v_a v_c partial_a partial_c f_i v_b partial_b f_i v_b v_c partial_b partial_c f_i v_c partial_c f_i texinfo d_v f_i v_a dda f_i v_a v_b dda ddb f_i v_a v_c dda ddc f_i v_b ddb f_i v_b v_c ddb ddc f_i v_c ddc f_i factor come symmetri mix second partial deriv iter start use initi guess matha b c program output shown iter b c av condj inf fx iter b c av condj fx iter b c av condj fx iter b c av condj fx iter b c av condj fx iter b c av condj fx iter b c av condj fx iter b c av condj fx iter b c av condj fx iter b c av condj fx iter b c av condj fx iter b c av condj fx niter nfev njev naev initi cost e final cost e final x e e e final condj e see method converg iter comparison standard levenbergmarquardt method requir iter gaussian fit problem benefit substanti geodes acceler correct column mark codeav show ratio acceler term veloc term iter progress larger valu ratio indic geodes acceler correct term contribut substanti inform solver rel standard lm veloc step data fit model shown numreffig_nlfitb _fig_nlfitb figur imagesnlfitbpng gaussian model fit data program given includ examplesnlfitbc code compar tr method exampl follow program compar avail nonlinear least squar trustregion subproblem tr method branin function common optim test problem cost function texinfo math phix f_ f_ f_ x_ a_ x_ a_ x_ a_ f_ sqrta_ sqrt a_ cosx_ texinfo phix f_ f_ f_ x_ a_ x_ a_ x_ a_ f_ sqrta_ sqrt a_ cosx_ matha_ pi a_ pi a_ a_ a_ pi three minima function rang mathx_x_ time program use start point mathx_x_ calcul solut avail nonlinear least squar tr method program output shown method niter nfev njev initi cost final cost final condj final x levenbergmarquardt e e e e e levenbergmarquardtaccel e e e e e dogleg e e e e e doubledogleg e e e e e dsubspac e e e e e first row output correspond standard levenbergmarquardt second row includ geodes acceler see standard lm method converg minimum mathpi also use least number iter jacobian evalu method converg minimum mathpi perform similarli term number jacobian evalu see mathj fairli illcondit minima indic qr svd solver best choic problem sinc two paramet optim problem easili visual path taken method shown numreffig_nlfit figur show contour cost function mathphix_x_ exhibit three global minima rang math time path taken solver shown color line _fig_nlfit figur imagesnlfitpng scale path taken differ tr method branin function program given includ examplesnlfitc code larg nonlinear least squar exampl follow program illustr larg nonlinear least squar solver system signific spars structur jacobian cost function texinfo math phix sum_ip f_i f_i sqrtalpha x_i quad le le p f_p x texinfo phix sum_ip f_i f_i sqrtalpha x_i le le p f_p x mathalpha residu mathf_p impos constraint mathp paramet mathx ensur mathx approx mathpbymathp jacobian system texinfo math jx left beginarrayc sqrtalpha i_p xt endarray right texinfo jx sqrtalpha i_p xt normal equat matrix math jt j alpha i_p x xt final second direct deriv mathf geodes acceler method texinfo math f_vv d_v f left beginarrayc v endarray right texinfo fvv v sinc upper mathpbymathp block mathj diagon spars structur exploit nonlinear solver comparison follow program solv system mathp use dens direct choleski solver base normal equat matrix mathjt j well iter steihaugtoint solver base spars matrixvector product mathj u mathjt u program output shown method niter nfev njuev njtjev naev init cost final cost condj final x time levenbergmarquardt e e e levenbergmarquardtaccel e e e dogleg e e e doubledogleg e e e dsubspac e e e steihaugtoint e e inf e first five row use method base factor dens mathjt j matrix last row use iter steihaugtoint method number jacobian matrixvector product njuev less dens method ad time construct factor mathjt j matrix njtjev result much larger runtim iter method see last column program given includ examplesnlfitc code refer read follow public relev algorithm describ section jj levenbergmarquardt algorithm implement theori lectur note mathemat v ed g watson h b nielsen damp paramet marquardt method imm depart mathemat model dtu tech report immrep k madsen h b nielsen introduct optim data fit imm depart mathemat model dtu j e denni r b schnabel numer method unconstrain optim nonlinear equat siam k transtrum b b machta j p sethna geometri nonlinear least squar applic sloppi model optim phi rev e k transtrum j p sethna improv levenbergmarquardt algorithm nonlinear leastsquar minim arxiv jj bs garbow ke hillstrom test unconstrain optim softwar acm transact mathemat softwar vol p h b nielsen uctp test problem unconstrain optim imm depart mathemat model dtu tech report immrep contributor gsl includ includerst see fileauthor file distribut uptod inform mark galassi conceiv gsl jame theiler wrote design document wrote simul anneal packag relev chapter manual jame theiler conceiv gsl mark galassi wrote random number gener relev chapter manual jim davi wrote statist routin relev chapter manual brian gough fft numer integr random number gener distribut root find minim fit polynomi solver complex number physic constant permut vector matrix function histogram statist ieeeutil revis cbla level matrix decomposit eigensystem cumul distribut function test document releas reid priedhorski wrote document initi version root find routin lo alamo nation laboratori mathemat model analysi group email reidreidsternet gerard jungman special function seri acceler ode bla linear algebra eigensystem hankel transform patrick alken implement nonsymmetr gener eigensystem bspline linear nonlinear least squar matrix decomposit associ legendr function run statist spars matric spars linear algebra mike booth wrote mont carlo librari jorma olavi tähtinen wrote initi complex arithmet function thoma walter wrote initi heapsort routin choleski decomposit fabric rossi multidimension minim carlo perassi implement random number gener knuth seminumer algorithm rd ed szymon jaroszewicz wrote routin gener combin sjcsumbedu nicola darni wrote cyclic function initi function canon permut jason h stover wrote major cumul distribut function jasonsaklanet ivo alxneit wrote routin wavelet transform tuomo keskitalo improv implement ode solver wrote odeinitv routin lowel johnson implement mathieu function rhi ulerich wrote multiset routin pavel holoborodko wrote fix order gausslegendr quadratur routin pedro gonnet wrote cquad integr routin thank nigel lowri help proofread manual nonsymmetr eigensystem routin contain code base lapack linear algebra librari lapack distribut follow licens copyright c univers tennesse right reserv redistribut use sourc binari form without modif permit provid follow condit met redistribut sourc code must retain copyright notic list condit follow disclaim redistribut binari form must reproduc copyright notic list condit follow disclaim list licens document andor materi provid distribut neither name copyright holder name contributor may use endors promot product deriv softwar without specif prior written permiss softwar provid copyright holder contributor express impli warranti includ limit impli warranti merchant fit particular purpos disclaim event shall copyright owner contributor liabl direct indirect incident special exemplari consequenti damag includ limit procur substitut good servic loss use data profit busi interrupt howev caus theori liabil whether contract strict liabil tort includ neglig otherwis aris way use softwar even advis possibl damag index singl polynomi root polynomi includ includerst chapter describ function evalu solv polynomi routin find real complex root quadrat cubic equat use analyt method iter polynomi solver also avail find root gener polynomi real coeffici order function declar header file filegsl_polyh index singl polynomi evalu singl evalu polynomi polynomi evalu function describ evalu polynomi texinfo math px c c x c x dot clen xlen texinfo px c c x c x clen xlen use horner method stabil inlinefn function doubl gsl_poly_ev const doubl c const int len const doubl x function evalu polynomi real coeffici real variabl datax function gsl_complex gsl_poly_complex_ev const doubl c const int len const gsl_complex z function evalu polynomi real coeffici complex variabl dataz function gsl_complex gsl_complex_poly_complex_ev const gsl_complex c const int len const gsl_complex z function evalu polynomi complex coeffici complex variabl dataz function int gsl_poly_eval_deriv const doubl c const size_t lenc const doubl x doubl re const size_t lenr function evalu polynomi deriv store result array datar size datalenr output array contain valu mathdk pxd xk specifi valu datax start mathk index singl divid differ polynomi singl evalu polynomi divid differ form divid differ represent polynomi function describ manipul polynomi store newton divideddiffer represent use divideddiffer describ abramowitz stegun section burden fair chapter discuss briefli given function mathfx mathn th degre interpol polynomi mathp_nx construct agre mathf mathn distinct point mathx_x_x_n polynomi written form known newton divideddiffer represent texinfo math p_nx fx_ sum_kn x_x_x_k xx_xx_ cdot xx_k texinfo p_nx fx_ sum_kn x_x_x_k xx_xx_ xx_k divid differ mathx_x_x_k defin section abramowitz stegun addit possibl construct interpol polynomi degre mathn also match first deriv mathf point mathx_x_x_n call hermit interpol polynomi defin texinfo math h_nx fz_ sum_kn z_z_z_k xz_xz_ cdot xz_k texinfo h_nx fz_ sum_kn z_z_z_k xz_xz_ xz_k element mathz x_x_x_x_x_nx_n defin mathz_k z_k x_k divideddiffer mathz_z_z_k discuss burden fair section function int gsl_poly_dd_init doubl dd const doubl xa const doubl ya size_t size function comput divideddiffer represent interpol polynomi point mathx store array dataxa dataya length datas output divideddiffer dataxa dataya store array datadd also length datas use notat mathddk x_x_x_k function doubl gsl_poly_dd_ev const doubl dd const doubl xa const size_t size const doubl x function evalu polynomi store divideddiffer form array datadd dataxa length datas point datax inlinefn function int gsl_poly_dd_taylor doubl c doubl xp const doubl dd const doubl xa size_t size doubl w function convert divideddiffer represent polynomi taylor expans divideddiffer represent suppli array datadd dataxa length datas output taylor coeffici polynomi expand point dataxp store array datac also length datas workspac length datas must provid array dataw function int gsl_poly_dd_hermite_init doubl dd doubl za const doubl xa const doubl ya const doubl dya const size_t size function comput divideddiffer represent interpol hermit polynomi point mathxi store array dataxa dataya length datas hermit interpol construct polynomi also match first deriv mathdydx provid array datadya also length datas first deriv incorport usual divideddiffer algorithm form new dataset mathz x_x_x_x_ store array dataza length datas output output divideddiffer hermit represent store array datadd also length datas use notat mathddk z_z_z_k result hermit polynomi evalu call funcgsl_poly_dd_ev use dataza input argument dataxa index singl quadrat equat solv quadrat equat function int gsl_poly_solve_quadrat doubl doubl b doubl c doubl x doubl x function find real root quadrat equat math x b x c number real root either zero one two return locat store datax datax real root found datax datax modifi one real root found ie matha store datax two real root found store datax datax ascend order case coincid root consid special exampl mathx two root happen exactli equal valu number root found depend sign discrimin mathb c subject round cancel error comput doubl precis also subject error coeffici polynomi inexact error may caus discret chang number root howev polynomi small integ coeffici discrimin alway comput exactli function int gsl_poly_complex_solve_quadrat doubl doubl b doubl c gsl_complex z gsl_complex z function find complex root quadrat equat math z b z c number complex root return either one two locat root store dataz dataz root return ascend order sort first real compon imaginari compon one real root found ie matha store dataz index singl cubic equat solv cubic equat function int gsl_poly_solve_cub doubl doubl b doubl c doubl x doubl x doubl x function find real root cubic equat math x x b x c lead coeffici uniti number real root either one three return locat store datax datax datax one real root found datax modifi three real root found store datax datax datax ascend order case coincid root consid special exampl equat mathx three root exactli equal valu quadrat case finit precis may caus equal closelyspac real root move real axi complex plane lead discret chang number real root function int gsl_poly_complex_solve_cub doubl doubl b doubl c gsl_complex z gsl_complex z gsl_complex z function find complex root cubic equat math z z b z c number complex root return alway three locat root store dataz dataz dataz root return ascend order sort first real compon imaginari compon index singl gener polynomi equat solv gener polynomi equat root polynomi equat found analyt beyond special case quadrat cubic quartic equat algorithm describ section use iter method find approxim locat root higher order polynomi type gsl_poly_complex_workspac workspac contain paramet use find root gener polynomi function gsl_poly_complex_workspac gsl_poly_complex_workspace_alloc size_t n function alloc space typegsl_poly_complex_workspac struct workspac suitabl solv polynomi datan coeffici use routin funcgsl_poly_complex_solv function return pointer newli alloc typegsl_poly_complex_workspac error detect null pointer case error function void gsl_poly_complex_workspace_fre gsl_poly_complex_workspac w function free memori associ workspac dataw function int gsl_poly_complex_solv const doubl size_t n gsl_poly_complex_workspac w gsl_complex_packed_ptr z function comput root gener polynomi texinfo math px a_ a_ x a_ x cdot a_n xn texinfo px a_ a_ x a_ x a_n xn use balancedqr reduct companion matrix paramet datan specifi length coeffici array coeffici highest order term must nonzero function requir workspac dataw appropri size mathn root return pack complex array dataz length mathn altern real imaginari part function return datagsl_success root found qr reduct converg error handler invok error code datagsl_efail note due finit precis root higher multipl return cluster simpl root reduc accuraci solut polynomi higherord root requir special algorithm take multipl structur account see eg z zeng algorithm acm transact mathemat softwar volum issu pp exampl demonstr use gener polynomi solver take polynomi mathpx x root texinfo math epi epi epi epi texinfo epi epi epi epi follow program find root includ examplespolyrootsc code output program includ examplespolyrootstxt code agre analyt result mathz_n exp pi n refer read balancedqr method error analysi describ follow paper rs martin g peter jh wilkinson qr algorithm real hessenberg matric numerisch mathematik bn parlett c reinsch balanc matrix calcul eigenvalu eigenvector numerisch mathematik edelman h murakami polynomi root companion matrix eigenvalu mathemat comput vol formula divid differ given follow text abramowitz stegun handbook mathemat function section r l burden j fair numer analysi th edit isbn index bessel function routin describ section comput cylindr bessel function mathj_nx mathy_nx modifi cylindr bessel function mathi_nx mathk_nx spheric bessel function mathj_lx mathy_lx modifi spheric bessel function mathi_lx mathk_lx inform see abramowitz stegun chapter bessel function defin header file filegsl_sf_besselh regular cylindr bessel function index cylindr bessel function index regular cylindr bessel function index singl jx bessel function function doubl gsl_sf_bessel_j doubl x int gsl_sf_bessel_j_ doubl x gsl_sf_result result routin comput regular cylindr bessel function zeroth order mathj_x function doubl gsl_sf_bessel_j doubl x int gsl_sf_bessel_j_ doubl x gsl_sf_result result routin comput regular cylindr bessel function first order mathj_x function doubl gsl_sf_bessel_jn int n doubl x int gsl_sf_bessel_jn_ int n doubl x gsl_sf_result result routin comput regular cylindr bessel function order datan mathj_nx except return valu gsl_eundrflw function int gsl_sf_bessel_jn_array int nmin int nmax doubl x doubl result_array routin comput valu regular cylindr bessel function mathj_nx mathn datanmin datanmax inclus store result array dataresult_array valu comput use recurr relat effici therefor may differ slightli exact valu except return valu gsl_edom gsl_eundrflw irregular cylindr bessel function index irregular cylindr bessel function index singl yx bessel function function doubl gsl_sf_bessel_i doubl x int gsl_sf_bessel_y_ doubl x gsl_sf_result result routin comput irregular cylindr bessel function zeroth order mathy_x mathx except return valu gsl_edom gsl_eundrflw function doubl gsl_sf_bessel_i doubl x int gsl_sf_bessel_y_ doubl x gsl_sf_result result routin comput irregular cylindr bessel function first order mathy_x mathx except return valu gsl_edom gsl_eovrflw gsl_eundrflw function doubl gsl_sf_bessel_yn int n doubl x int gsl_sf_bessel_yn_ int n doubl x gsl_sf_result result routin comput irregular cylindr bessel function order datan mathy_nx mathx except return valu gsl_edom gsl_eovrflw gsl_eundrflw function int gsl_sf_bessel_yn_array int nmin int nmax doubl x doubl result_array routin comput valu irregular cylindr bessel function mathy_nx mathn datanmin datanmax inclus store result array dataresult_array domain function mathx valu comput use recurr relat effici therefor may differ slightli exact valu except return valu gsl_edom gsl_eovrflw gsl_eundrflw regular modifi cylindr bessel function index modifi cylindr bessel function index regular modifi cylindr bessel function index singl ix bessel function function doubl gsl_sf_bessel_i doubl x int gsl_sf_bessel_i_ doubl x gsl_sf_result result routin comput regular modifi cylindr bessel function zeroth order mathi_x except return valu gsl_eovrflw function doubl gsl_sf_bessel_i doubl x int gsl_sf_bessel_i_ doubl x gsl_sf_result result routin comput regular modifi cylindr bessel function first order mathi_x except return valu gsl_eovrflw gsl_eundrflw function doubl gsl_sf_bessel_in int n doubl x int gsl_sf_bessel_in_ int n doubl x gsl_sf_result result routin comput regular modifi cylindr bessel function order datan mathi_nx except return valu gsl_eovrflw gsl_eundrflw function int gsl_sf_bessel_in_array int nmin int nmax doubl x doubl result_array routin comput valu regular modifi cylindr bessel function mathi_nx mathn datanmin datanmax inclus store result array dataresult_array start rang datanmin must posit zero valu comput use recurr relat effici therefor may differ slightli exact valu domain nmin nmax nmin condit nnminnmax nmin nmax nmin except return valu gsl_edom gsl_eovrflw gsl_eundrflw function doubl gsl_sf_bessel_i_sc doubl x int gsl_sf_bessel_i_scaled_ doubl x gsl_sf_result result routin comput scale regular modifi cylindr bessel function zeroth order mathexpx i_x except return valu none function doubl gsl_sf_bessel_i_sc doubl x int gsl_sf_bessel_i_scaled_ doubl x gsl_sf_result result routin comput scale regular modifi cylindr bessel function first order mathexpx i_x except return valu gsl_eundrflw function doubl gsl_sf_bessel_in_sc int n doubl x int gsl_sf_bessel_in_scaled_ int n doubl x gsl_sf_result result routin comput scale regular modifi cylindr bessel function order datan mathexpx i_nx except return valu gsl_eundrflw function int gsl_sf_bessel_in_scaled_array int nmin int nmax doubl x doubl result_array routin comput valu scale regular cylindr bessel function mathexpx i_nx mathn datanmin datanmax inclus store result array dataresult_array start rang datanmin must posit zero valu comput use recurr relat effici therefor may differ slightli exact valu domain nmin nmax nmin condit nnminnmax except return valu gsl_eundrflw irregular modifi cylindr bessel function index irregular modifi cylindr bessel function index singl kx bessel function function doubl gsl_sf_bessel_k doubl x int gsl_sf_bessel_k_ doubl x gsl_sf_result result routin comput irregular modifi cylindr bessel function zeroth order mathk_x mathx domain x except return valu gsl_edom gsl_eundrflw function doubl gsl_sf_bessel_k doubl x int gsl_sf_bessel_k_ doubl x gsl_sf_result result routin comput irregular modifi cylindr bessel function first order mathk_x mathx domain x except return valu gsl_edom gsl_eovrflw gsl_eundrflw function doubl gsl_sf_bessel_kn int n doubl x int gsl_sf_bessel_kn_ int n doubl x gsl_sf_result result routin comput irregular modifi cylindr bessel function order datan mathk_nx mathx domain x except return valu gsl_edom gsl_eovrflw gsl_eundrflw function int gsl_sf_bessel_kn_array int nmin int nmax doubl x doubl result_array routin comput valu irregular modifi cylindr bessel function mathk_nx mathn datanmin datanmax inclus store result array dataresult_array start rang datanmin must posit zero domain function mathx valu comput use recurr relat effici therefor may differ slightli exact valu condit nnminnmax domain x nmin nmax nmin except return valu gsl_edom gsl_eovrflw gsl_eundrflw function doubl gsl_sf_bessel_k_sc doubl x int gsl_sf_bessel_k_scaled_ doubl x gsl_sf_result result routin comput scale irregular modifi cylindr bessel function zeroth order mathexpx k_x mathx domain x except return valu gsl_edom function doubl gsl_sf_bessel_k_sc doubl x int gsl_sf_bessel_k_scaled_ doubl x gsl_sf_result result routin comput scale irregular modifi cylindr bessel function first order mathexpx k_x mathx domain x except return valu gsl_edom gsl_eundrflw function doubl gsl_sf_bessel_kn_sc int n doubl x int gsl_sf_bessel_kn_scaled_ int n doubl x gsl_sf_result result routin comput scale irregular modifi cylindr bessel function order datan mathexpx k_nx mathx domain x except return valu gsl_edom gsl_eundrflw function int gsl_sf_bessel_kn_scaled_array int nmin int nmax doubl x doubl result_array routin comput valu scale irregular cylindr bessel function mathexpx k_nx mathn datanmin datanmax inclus store result array dataresult_array start rang datanmin must posit zero domain function mathx valu comput use recurr relat effici therefor may differ slightli exact valu domain x nmin nmax nmin condit nnminnmax except return valu gsl_edom gsl_eundrflw regular spheric bessel function index spheric bessel function index regular spheric bessel function index singl jx bessel function function doubl gsl_sf_bessel_j doubl x int gsl_sf_bessel_j_ doubl x gsl_sf_result result routin comput regular spheric bessel function zeroth order mathj_x sinxx except return valu none function doubl gsl_sf_bessel_j doubl x int gsl_sf_bessel_j_ doubl x gsl_sf_result result routin comput regular spheric bessel function first order mathj_x sinxx cosxx except return valu gsl_eundrflw function doubl gsl_sf_bessel_j doubl x int gsl_sf_bessel_j_ doubl x gsl_sf_result result routin comput regular spheric bessel function second order mathj_x x sinx cosxxx except return valu gsl_eundrflw function doubl gsl_sf_bessel_jl int l doubl x int gsl_sf_bessel_jl_ int l doubl x gsl_sf_result result routin comput regular spheric bessel function order datal mathj_lx mathl geq mathx geq domain l x except return valu gsl_edom gsl_eundrflw function int gsl_sf_bessel_jl_array int lmax doubl x doubl result_array routin comput valu regular spheric bessel function mathj_lx mathl datalmax inclus mathlmax geq mathx geq store result array dataresult_array valu comput use recurr relat effici therefor may differ slightli exact valu domain lmax condit llmax except return valu gsl_edom gsl_eundrflw function int gsl_sf_bessel_jl_steed_array int lmax doubl x doubl result_array routin use steed method comput valu regular spheric bessel function mathj_lx mathl datalmax inclus mathlmax geq mathx geq store result array dataresult_array steedbarnett algorithm describ comp phi comm steed method stabl recurr use function also slower domain lmax condit llmax except return valu gsl_edom gsl_eundrflw irregular spheric bessel function index irregular spheric bessel function index singl yx bessel function function doubl gsl_sf_bessel_i doubl x int gsl_sf_bessel_y_ doubl x gsl_sf_result result routin comput irregular spheric bessel function zeroth order mathy_x cosxx except return valu none function doubl gsl_sf_bessel_i doubl x int gsl_sf_bessel_y_ doubl x gsl_sf_result result routin comput irregular spheric bessel function first order mathy_x cosxx sinxx except return valu gsl_eundrflw function doubl gsl_sf_bessel_i doubl x int gsl_sf_bessel_y_ doubl x gsl_sf_result result routin comput irregular spheric bessel function second order mathy_x x xcosx xsinx except return valu gsl_eundrflw function doubl gsl_sf_bessel_yl int l doubl x int gsl_sf_bessel_yl_ int l doubl x gsl_sf_result result routin comput irregular spheric bessel function order datal mathy_lx mathl geq except return valu gsl_eundrflw function int gsl_sf_bessel_yl_array int lmax doubl x doubl result_array routin comput valu irregular spheric bessel function mathy_lx mathl datalmax inclus mathlmax geq store result array dataresult_array valu comput use recurr relat effici therefor may differ slightli exact valu domain lmax condit llmax except return valu gsl_eundrflw regular modifi spheric bessel function index modifi spheric bessel function index regular modifi spheric bessel function index singl ix bessel function regular modifi spheric bessel function mathi_lx relat modifi bessel function fraction order mathi_lx sqrtpix i_lx function doubl gsl_sf_bessel_i_sc doubl x int gsl_sf_bessel_i_scaled_ doubl x gsl_sf_result result routin comput scale regular modifi spheric bessel function zeroth order mathexpx i_x except return valu none function doubl gsl_sf_bessel_i_sc doubl x int gsl_sf_bessel_i_scaled_ doubl x gsl_sf_result result routin comput scale regular modifi spheric bessel function first order mathexpx i_x except return valu gsl_eundrflw function doubl gsl_sf_bessel_i_sc doubl x int gsl_sf_bessel_i_scaled_ doubl x gsl_sf_result result routin comput scale regular modifi spheric bessel function second order mathexpx i_x except return valu gsl_eundrflw function doubl gsl_sf_bessel_il_sc int l doubl x int gsl_sf_bessel_il_scaled_ int l doubl x gsl_sf_result result routin comput scale regular modifi spheric bessel function order datal mathexpx i_lx domain l except return valu gsl_edom gsl_eundrflw function int gsl_sf_bessel_il_scaled_array int lmax doubl x doubl result_array routin comput valu scale regular modifi spheric bessel function mathexpx i_lx mathl datalmax inclus mathlmax geq store result array dataresult_array valu comput use recurr relat effici therefor may differ slightli exact valu domain lmax condit llmax except return valu gsl_eundrflw irregular modifi spheric bessel function index irregular modifi spheric bessel function index singl kx bessel function irregular modifi spheric bessel function mathk_lx relat irregular modifi bessel function fraction order mathk_lx sqrtpix k_lx function doubl gsl_sf_bessel_k_sc doubl x int gsl_sf_bessel_k_scaled_ doubl x gsl_sf_result result routin comput scale irregular modifi spheric bessel function zeroth order mathexpx k_x mathx domain x except return valu gsl_edom gsl_eundrflw function doubl gsl_sf_bessel_k_sc doubl x int gsl_sf_bessel_k_scaled_ doubl x gsl_sf_result result routin comput scale irregular modifi spheric bessel function first order mathexpx k_x mathx domain x except return valu gsl_edom gsl_eundrflw gsl_eovrflw function doubl gsl_sf_bessel_k_sc doubl x int gsl_sf_bessel_k_scaled_ doubl x gsl_sf_result result routin comput scale irregular modifi spheric bessel function second order mathexpx k_x mathx domain x except return valu gsl_edom gsl_eundrflw gsl_eovrflw function doubl gsl_sf_bessel_kl_sc int l doubl x int gsl_sf_bessel_kl_scaled_ int l doubl x gsl_sf_result result routin comput scale irregular modifi spheric bessel function order datal mathexpx k_lx mathx domain x except return valu gsl_edom gsl_eundrflw function int gsl_sf_bessel_kl_scaled_array int lmax doubl x doubl result_array routin comput valu scale irregular modifi spheric bessel function mathexpx k_lx mathl datalmax inclus mathlmax geq mathx store result array dataresult_array valu comput use recurr relat effici therefor may differ slightli exact valu domain lmax condit llmax except return valu gsl_edom gsl_eundrflw regular bessel functionfract order index singl fraction order bessel function singl bessel function fraction order singl regular bessel function fraction order function doubl gsl_sf_bessel_jnu doubl nu doubl x int gsl_sf_bessel_jnu_ doubl nu doubl x gsl_sf_result result routin comput regular cylindr bessel function fraction order mathnu mathj_nux except return valu gsl_edom gsl_eundrflw function int gsl_sf_bessel_sequence_jnu_ doubl nu gsl_mode_t mode size_t size doubl v function comput regular cylindr bessel function fraction order mathnu mathj_nux evalu seri mathx valu array datav length datas contain mathx valu assum strictli order posit array overwritten valu mathj_nux_i except return valu gsl_edom gsl_einval irregular bessel functionsfract order function doubl gsl_sf_bessel_ynu doubl nu doubl x int gsl_sf_bessel_ynu_ doubl nu doubl x gsl_sf_result result routin comput irregular cylindr bessel function fraction order mathnu mathy_nux except return valu regular modifi bessel functionsfract order index singl modifi bessel function fraction order singl regular modifi bessel function fraction order function doubl gsl_sf_bessel_inu doubl nu doubl x int gsl_sf_bessel_inu_ doubl nu doubl x gsl_sf_result result routin comput regular modifi bessel function fraction order mathnu mathi_nux mathx mathnu domain x nu except return valu gsl_edom gsl_eovrflw function doubl gsl_sf_bessel_inu_sc doubl nu doubl x int gsl_sf_bessel_inu_scaled_ doubl nu doubl x gsl_sf_result result routin comput scale regular modifi bessel function fraction order mathnu mathexpxi_nux mathx mathnu domain x nu except return valu gsl_edom irregular modifi bessel functionsfract order index singl irregular modifi bessel function fraction order function doubl gsl_sf_bessel_knu doubl nu doubl x int gsl_sf_bessel_knu_ doubl nu doubl x gsl_sf_result result routin comput irregular modifi bessel function fraction order mathnu mathk_nux mathx mathnu domain x nu except return valu gsl_edom gsl_eundrflw function doubl gsl_sf_bessel_lnknu doubl nu doubl x int gsl_sf_bessel_lnknu_ doubl nu doubl x gsl_sf_result result routin comput logarithm irregular modifi bessel function fraction order mathnu mathlnk_nux mathx mathnu domain x nu except return valu gsl_edom function doubl gsl_sf_bessel_knu_sc doubl nu doubl x int gsl_sf_bessel_knu_scaled_ doubl nu doubl x gsl_sf_result result routin comput scale irregular modifi bessel function fraction order mathnu mathexpx k_nux mathx mathnu domain x nu except return valu gsl_edom zero regular bessel function index singl zero regular bessel function singl regular bessel function zero function doubl gsl_sf_bessel_zero_j unsign int int gsl_sf_bessel_zero_j_ unsign int gsl_sf_result result routin comput locat datasth posit zero bessel function mathj_x except return valu function doubl gsl_sf_bessel_zero_j unsign int int gsl_sf_bessel_zero_j_ unsign int gsl_sf_result result routin comput locat datasth posit zero bessel function mathj_x except return valu function doubl gsl_sf_bessel_zero_jnu doubl nu unsign int int gsl_sf_bessel_zero_jnu_ doubl nu unsign int gsl_sf_result result routin comput locat datasth posit zero bessel function mathj_nux current implement support neg valu datanu except return valu inlinefn replac inlin version function use codehave_inlin defin inlinefn replac inlin version function use codehave_inlin defin lapack replac lapack octav replac gnu octav fftpack replac fftpack quadpack replac quadpack minpack replac minpack cquad replac cquad bla replac bla cbla replac cbla atla replac atla replac moré newpag raw latex newpag index multiset multiset includ includerst chapter describ function creat manipul multiset multiset mathc repres array mathk integ rang mathn valu mathc_i may occur multiset mathc correspond indic mathk element chosen mathn element vector replac mathemat term mathn cardin multiset mathk maximum multipl valu multiset use exampl iter indic mathkth order symmetr tensor mathnspac function describ chapter defin header file filegsl_multiseth multiset struct type gsl_multiset multiset defin structur contain three compon valu mathn mathk pointer multiset array element multiset array type codesize_t store increas order typegsl_multiset structur look like typedef struct size_t n size_t k size_t data gsl_multiset multiset alloc function gsl_multiset gsl_multiset_alloc size_t n size_t k function alloc memori new multiset paramet datan datak multiset initi element undefin use function funcgsl_multiset_calloc want creat multiset initi lexicograph first multiset element null pointer return insuffici memori avail creat multiset function gsl_multiset gsl_multiset_calloc size_t n size_t k function alloc memori new multiset paramet datan datak initi lexicograph first multiset element null pointer return insuffici memori avail creat multiset function void gsl_multiset_init_first gsl_multiset c function initi multiset datac lexicograph first multiset element ie math repeat mathk time function void gsl_multiset_init_last gsl_multiset c function initi multiset datac lexicograph last multiset element ie mathn repeat mathk time function void gsl_multiset_fre gsl_multiset c function free memori use multiset datac function int gsl_multiset_memcpi gsl_multiset dest const gsl_multiset src function copi element multiset datasrc multiset datadest two multiset must size access multiset element follow function use access element multiset function size_t gsl_multiset_get const gsl_multiset c const size_t function return valu dataith element multiset datac datai lie outsid allow rang mathk error handler invok return inlinefn multiset properti function size_t gsl_multiset_n const gsl_multiset c function return rang mathn multiset datac function size_t gsl_multiset_k const gsl_multiset c function return number element mathk multiset datac function size_t gsl_multiset_data const gsl_multiset c function return pointer array element multiset datac index singl check multiset valid singl test multiset valid function int gsl_multiset_valid gsl_multiset c function check multiset datac valid datak element lie rang mathn valu occur nondecreas order multiset function index iter multiset function int gsl_multiset_next gsl_multiset c function advanc multiset datac next multiset element lexicograph order return macrogsl_success multiset element avail return macrogsl_failur leav datac unmodifi start first multiset repeatedli appli function iter possibl multiset given order function int gsl_multiset_prev gsl_multiset c function step backward multiset datac previou multiset element lexicograph order return macrogsl_success previou multiset avail return macrogsl_failur leav datac unmodifi read write multiset librari provid function read write multiset file binari data format text function int gsl_multiset_fwrit file stream const gsl_multiset c function write element multiset datac stream datastream binari format function return macrogsl_efail problem write file sinc data written nativ binari format may portabl differ architectur function int gsl_multiset_fread file stream gsl_multiset c function read element open stream datastream multiset datac binari format multiset datac must prealloc correct valu mathn mathk sinc function use size datac determin mani byte read function return macrogsl_efail problem read file data assum written nativ binari format architectur function int gsl_multiset_fprintf file stream const gsl_multiset c const char format function write element multiset datac linebylin stream datastream use format specifi dataformat suitabl type codesize_t iso c type modifi codez repres codesize_t codezun suitabl format f_ function return macrogsl_efail problem write file function int gsl_multiset_fscanf file stream gsl_multiset c function read format data stream datastream multiset datac multiset datac must prealloc correct valu mathn mathk sinc function use size datac determin mani number read function return macrogsl_efail problem read file exampl exampl program print multiset element contain valu math order size multiset element size order lexicograph includ examplesmultisetc code output program includ examplesmultisettxt code multiset gener sort lexicograph rubric footnot f version gnu c librari prior iso c standard type modifi codez use instead index interpol spline _sec_interpol interpol includ includerst chapter describ function perform interpol librari provid varieti interpol method includ cubic akima steffen spline interpol type interchang allow differ method use without recompil interpol defin normal period boundari condit addit function avail comput deriv integr interpol function routin provid interpol one two dimension dataset interpol method produc curv pass datapoint interpol noisi data smooth curv see refchap_basissplin function describ section declar header file filegsl_interph filegsl_splineh introduct interpol given set data point mathx_ y_ dot x_n y_n routin describ section comput continu interpol function mathyx mathyx_i y_i interpol piecewis smooth behavior endpoint determin type interpol use interpol function interpol function given dataset store typegsl_interp object creat follow function type gsl_interp workspac interpol function gsl_interp gsl_interp_alloc const gsl_interp_typ size_t size function return pointer newli alloc interpol object type datat datas datapoint function int gsl_interp_init gsl_interp interp const doubl xa const doubl ya size_t size function initi interpol object datainterp data dataxa dataya dataxa dataya array size datas interpol object typegsl_interp save data array dataxa dataya store static state comput data dataxa data array alway assum strictli order increas mathx valu behavior arrang defin function void gsl_interp_fre gsl_interp interp function free interpol object datainterp interpol type interpol librari provid follow interpol type type gsl_interp_typ index linear interpol var gsl_interp_linear linear interpol interpol method requir addit memori index polynomi interpol var gsl_interp_polynomi polynomi interpol method use interpol small number point polynomi interpol introduc larg oscil even wellbehav dataset number term interpol polynomi equal number point index cubic spline var gsl_interp_csplin cubic spline natur boundari condit result curv piecewis cubic interv match first second deriv suppli datapoint second deriv chosen zero first point last point var gsl_interp_cspline_period cubic spline period boundari condit result curv piecewis cubic interv match first second deriv suppli datapoint deriv first last point also match note last point data must yvalu first point otherwis result period interpol discontinu boundari index akima spline var gsl_interp_akima nonround akima spline natur boundari condit method use nonround corner algorithm wodicka var gsl_interp_akima_period nonround akima spline period boundari condit method use nonround corner algorithm wodicka var gsl_interp_steffen steffen method guarante monoton interpol function given data point therefor minima maxima occur exactli data point never spuriou oscil data point interpol function piecewis cubic interv result curv first deriv guarante continu second deriv may discontinu follow relat function avail function const char gsl_interp_nam const gsl_interp interp function return name interpol type use datainterp exampl printf interp use interpolationn gsl_interp_nam interp would print someth like interp use cspline interpol function unsign int gsl_interp_min_s const gsl_interp interp unsign int gsl_interp_type_min_s const gsl_interp_typ function return minimum number point requir interpol object datainterp interpol type datat exampl akima spline interpol requir minimum point index lookup acceler state search store typegsl_interp_accel object kind iter interpol lookup type gsl_interp_accel workspac store state variabl interpol lookup cach previou valu index lookup subsequ interpol point fall interv index valu return immedi function size_t gsl_interp_bsearch const doubl x_array doubl x size_t index_lo size_t index_hi function return index mathi array datax_array codex_arrayi x x_arrayi index search rang dataindex_lo dataindex_hi inlinefn function gsl_interp_accel gsl_interp_accel_alloc void function return pointer acceler object kind iter interpol lookup track state lookup thu allow applic variou acceler strategi function size_t gsl_interp_accel_find gsl_interp_accel const doubl x_array size_t size doubl x function perform lookup action data array datax_array size datas use given acceler dataa lookup perform evalu interpol function return index mathi codex_arrayi x x_arrayi inlinefn function int gsl_interp_accel_reset gsl_interp_accel acc function reiniti acceler object dataacc use cach inform longer applicablefor exampl switch new dataset function void gsl_interp_accel_fre gsl_interp_accel acc function free acceler object dataacc evalu interpol function function doubl gsl_interp_ev const gsl_interp interp const doubl xa const doubl ya doubl x gsl_interp_accel acc int gsl_interp_eval_ const gsl_interp interp const doubl xa const doubl ya doubl x gsl_interp_accel acc doubl function return interpol valu datay given point datax use interpol object datainterp data array dataxa dataya acceler dataacc datax outsid rang dataxa error code macrogsl_edom return valu macrogsl_nan datay function doubl gsl_interp_eval_deriv const gsl_interp interp const doubl xa const doubl ya doubl x gsl_interp_accel acc int gsl_interp_eval_deriv_ const gsl_interp interp const doubl xa const doubl ya doubl x gsl_interp_accel acc doubl function return deriv datad interpol function given point datax use interpol object datainterp data array dataxa dataya acceler dataacc function doubl gsl_interp_eval_deriv const gsl_interp interp const doubl xa const doubl ya doubl x gsl_interp_accel acc int gsl_interp_eval_deriv_ const gsl_interp interp const doubl xa const doubl ya doubl x gsl_interp_accel acc doubl function return second deriv datad interpol function given point datax use interpol object datainterp data array dataxa dataya acceler dataacc function doubl gsl_interp_eval_integ const gsl_interp interp const doubl xa const doubl ya doubl doubl b gsl_interp_accel acc int gsl_interp_eval_integ_ const gsl_interp interp const doubl xa const doubl ya doubl doubl b gsl_interp_accel acc doubl result function return numer integr dataresult interpol function rang dataa datab use interpol object datainterp data array dataxa dataya acceler dataacc higherlevel interfac function describ previou section requir user suppli pointer mathx mathi array call follow function equival correspond typegsl_interp function maintain copi data typegsl_splin object remov need pass dataxa dataya argument evalu function defin header file filegsl_splineh type gsl_spline workspac provid higher level interfac typegsl_interp object function gsl_spline gsl_spline_alloc const gsl_interp_typ size_t size function int gsl_spline_init gsl_spline spline const doubl xa const doubl ya size_t size function void gsl_spline_fre gsl_spline spline function const char gsl_spline_nam const gsl_spline spline function unsign int gsl_spline_min_s const gsl_spline spline function doubl gsl_spline_ev const gsl_spline spline doubl x gsl_interp_accel acc int gsl_spline_eval_ const gsl_spline spline doubl x gsl_interp_accel acc doubl function doubl gsl_spline_eval_deriv const gsl_spline spline doubl x gsl_interp_accel acc int gsl_spline_eval_deriv_ const gsl_spline spline doubl x gsl_interp_accel acc doubl function doubl gsl_spline_eval_deriv const gsl_spline spline doubl x gsl_interp_accel acc int gsl_spline_eval_deriv_ const gsl_spline spline doubl x gsl_interp_accel acc doubl function doubl gsl_spline_eval_integ const gsl_spline spline doubl doubl b gsl_interp_accel acc int gsl_spline_eval_integ_ const gsl_spline spline doubl doubl b gsl_interp_accel acc doubl result interpol exampl program follow program demonstr use interpol spline function comput cubic spline interpol point dataset mathx_i y_i mathx_i sini mathy_i cosi mathi dot includ examplesinterpc code output design use gnu plotutil codegraph program aout interpdat graph ps interpdat interpp _fig_interp figur imagesinterppng scale cubic spline interpol numreffig_interp show smooth interpol origin point interpol method chang simpli vari first argument funcgsl_spline_alloc next program demonstr period cubic spline data point note first last point must suppli yvalu period spline includ examplesinterppc code output plot gnu codegraph aout interpdat graph ps interpdat interpp _fig_interpp figur imagesinterpppng scale period cubic spline interpol numreffig_interpp show period interpol origin point slope fit curv begin end data second deriv also next program illustr differ cubic spline akima steffen interpol type difficult dataset includ examplesinterp_comparec code _fig_interpcompar figur imagesinterp_comparepng scale comparison differ interpol method output shown numreffig_interpcompar cubic method exhibit local maxima th th data point continu oscil rest data akima also show local maxima recov follow data well th grid point steffen preserv monoton interv exhibit oscil expens discontinu second deriv introduct interpol given set mathx coordin mathx_x_m set mathi coordin mathy_y_n increas order plu set function valu mathz_ij grid point mathx_iy_j routin describ section comput continu interpol function mathzxi mathzx_iy_j z_ij interpol function interpol function given dataset store typegsl_interpd object creat follow function type gsl_interpd workspac interpol function gsl_interpd gsl_interpd_alloc const gsl_interpd_typ const size_t xsize const size_t ysize function return pointer newli alloc interpol object type datat dataxs grid point mathx direct datays grid point mathi direct function int gsl_interpd_init gsl_interpd interp const doubl xa const doubl ya const doubl za const size_t xsize const size_t ysize function initi interpol object datainterp data dataxa dataya dataza dataxa dataya array mathx mathi grid point size dataxs datays respect dataza array function valu size dataxs datays interpol object typegsl_interpd save data array dataxa dataya dataza store static state comput data dataxa dataya data array alway assum strictli order increas mathxi valu behavior arrang defin function void gsl_interpd_fre gsl_interpd interp function free interpol object datainterp interpol grid interpol routin access function valu mathz_ij follow order math z_ij zajxsiz mathi xsize mathj ysize howev eas use follow function provid add retriev element function grid without requir knowledg intern order function int gsl_interpd_set const gsl_interpd interp doubl za const size_t const size_t j const doubl z function set valu mathz_ij grid point datai dataj array dataza dataz function doubl gsl_interpd_get const gsl_interpd interp const doubl za const size_t const size_t j function return valu mathz_ij grid point datai dataj store array dataza function size_t gsl_interpd_idx const gsl_interpd interp const size_t const size_t j function return index correspond grid point datai dataj index given mathjxsiz interpol type type gsl_interpd_typ interpol librari provid follow interpol type index bilinear interpol var gsl_interpd_bilinear bilinear interpol interpol method requir addit memori index bicub interpol var gsl_interpd_bicub bicub interpol function const char gsl_interpd_nam const gsl_interpd interp function return name interpol type use datainterp exampl printf interp use interpolationn gsl_interpd_nam interp would print someth like interp use bilinear interpol function unsign int gsl_interpd_min_s const gsl_interpd interp unsign int gsl_interpd_type_min_s const gsl_interpd_typ function return minimum number point requir interpol object datainterp interpol type datat exampl bicub interpol requir minimum point evalu interpol function function doubl gsl_interpd_ev const gsl_interpd interp const doubl xa const doubl ya const doubl za const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc int gsl_interpd_eval_ const gsl_interpd interp const doubl xa const doubl ya const doubl za const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc doubl z function return interpol valu dataz given point datax datay use interpol object datainterp data array dataxa dataya dataza acceler dataxacc datayacc datax outsid rang dataxa datay outsid rang dataya error code macrogsl_edom return function doubl gsl_interpd_eval_extrap const gsl_interpd interp const doubl xa const doubl ya const doubl za const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc int gsl_interpd_eval_extrap_ const gsl_interpd interp const doubl xa const doubl ya const doubl za const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc doubl z function return interpol valu dataz given point datax datay use interpol object datainterp data array dataxa dataya dataza acceler dataxacc datayacc function perform bound check datax outsid rang dataxa datay outsid rang dataya extrapol perform function doubl gsl_interpd_eval_deriv_x const gsl_interpd interp const doubl xa const doubl ya const doubl za const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc int gsl_interpd_eval_deriv_x_ const gsl_interpd interp const doubl xa const doubl ya const doubl za const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc doubl function return interpol valu datad math partial z partial x given point datax datay use interpol object datainterp data array dataxa dataya dataza acceler dataxacc datayacc datax outsid rang dataxa datay outsid rang dataya error code macrogsl_edom return function doubl gsl_interpd_eval_deriv_i const gsl_interpd interp const doubl xa const doubl ya const doubl za const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc int gsl_interpd_eval_deriv_y_ const gsl_interpd interp const doubl xa const doubl ya const doubl za const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc doubl function return interpol valu datad math partial z partial given point datax datay use interpol object datainterp data array dataxa dataya dataza acceler dataxacc datayacc datax outsid rang dataxa datay outsid rang dataya error code macrogsl_edom return function doubl gsl_interpd_eval_deriv_xx const gsl_interpd interp const doubl xa const doubl ya const doubl za const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc int gsl_interpd_eval_deriv_xx_ const gsl_interpd interp const doubl xa const doubl ya const doubl za const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc doubl function return interpol valu datad math partial z partial x given point datax datay use interpol object datainterp data array dataxa dataya dataza acceler dataxacc datayacc datax outsid rang dataxa datay outsid rang dataya error code macrogsl_edom return function doubl gsl_interpd_eval_deriv_yy const gsl_interpd interp const doubl xa const doubl ya const doubl za const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc int gsl_interpd_eval_deriv_yy_ const gsl_interpd interp const doubl xa const doubl ya const doubl za const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc doubl function return interpol valu datad math partial z partial given point datax datay use interpol object datainterp data array dataxa dataya dataza acceler dataxacc datayacc datax outsid rang dataxa datay outsid rang dataya error code macrogsl_edom return function doubl gsl_interpd_eval_deriv_xi const gsl_interpd interp const doubl xa const doubl ya const doubl za const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc int gsl_interpd_eval_deriv_xy_ const gsl_interpd interp const doubl xa const doubl ya const doubl za const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc doubl function return interpol valu datad math partial z partial x partial given point datax datay use interpol object datainterp data array dataxa dataya dataza acceler dataxacc datayacc datax outsid rang dataxa datay outsid rang dataya error code macrogsl_edom return higherlevel interfac function describ previou section requir user suppli pointer mathx mathi mathz array call follow function equival correspond codegsl_interpd function maintain copi data typegsl_splin object remov need pass dataxa dataya dataza argument evalu function defin header file filegsl_splinedh type gsl_spline workspac provid higher level interfac typegsl_interpd object function gsl_spline gsl_splined_alloc const gsl_interpd_typ size_t xsize size_t ysize function int gsl_splined_init gsl_spline spline const doubl xa const doubl ya const doubl za size_t xsize size_t ysize function void gsl_splined_fre gsl_spline spline function const char gsl_splined_nam const gsl_spline spline function unsign int gsl_splined_min_s const gsl_spline spline function doubl gsl_splined_ev const gsl_spline spline const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc int gsl_splined_eval_ const gsl_spline spline const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc doubl z function doubl gsl_splined_eval_deriv_x const gsl_spline spline const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc int gsl_splined_eval_deriv_x_ const gsl_spline spline const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc doubl function doubl gsl_splined_eval_deriv_i const gsl_spline spline const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc int gsl_splined_eval_deriv_y_ const gsl_spline spline const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc doubl function doubl gsl_splined_eval_deriv_xx const gsl_spline spline const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc int gsl_splined_eval_deriv_xx_ const gsl_spline spline const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc doubl function doubl gsl_splined_eval_deriv_yy const gsl_spline spline const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc int gsl_splined_eval_deriv_yy_ const gsl_spline spline const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc doubl function doubl gsl_splined_eval_deriv_xi const gsl_spline spline const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc int gsl_splined_eval_deriv_xy_ const gsl_spline spline const doubl x const doubl gsl_interp_accel xacc gsl_interp_accel yacc doubl function int gsl_splined_set const gsl_spline spline doubl za const size_t const size_t j const doubl z function doubl gsl_splined_get const gsl_spline spline const doubl za const size_t const size_t j function return valu mathz_ij grid point datai dataj store array dataza interpol exampl program follow exampl perform bilinear interpol unit squar use mathz valu math go clockwis around squar includ examplesinterpdc code result interpol shown numreffig_interpd corner label fix mathz valu _fig_interpd figur imagesinterpdpng scale interpol exampl refer read descript interpol algorithm refer found follow public cw ueberhub numer comput volum chapter interpol springer isbn dm young rt gregori survey numer mathemat volum chapter dover isbn steffen simpl method monoton interpol one dimens astron astrophi index singl quadratur singl numer integr quadratur singl integr numer quadratur singl quadpack numer integr includ includerst chapter describ routin perform numer integr quadratur function one dimens routin adapt nonadapt integr gener function specialis routin specif case includ integr infinit semiinfinit rang singular integr includ logarithm singular comput cauchi princip valu oscillatori integr librari reimplement algorithm use quadpack numer integr packag written piessen de donckerkapenga ueberhub kahan fortran code quadpack avail netlib also includ nonadapt fixedord gausslegendr integr routin high precis coeffici well fixedord quadratur rule varieti weight function iqpack function describ chapter declar header file filegsl_integrationh introduct algorithm comput approxim definit integr form math int_ab fx wx dx mathwx weight function gener integrand mathwx user provid absolut rel error bound mathepsab epsrel specifi follow accuraci requir texinfo math result leq maxepsab epsrel texinfo math result maxepsab epsrel mathresult numer approxim obtain algorithm algorithm attempt estim absolut error mathabserr result way follow inequ hold texinfo math result leq abserr leq maxepsab epsrel texinfo math result abserr maxepsab epsrel short routin return first approxim absolut error smaller mathepsab rel error smaller mathepsrel note eitheror constraint simultan comput specifi absolut error set mathepsrel zero comput specifi rel error set mathepsab zero routin fail converg error bound stringent alway return best approxim obtain stage algorithm quadpack use name convent base follow letter q quadratur routin n nonadapt integr adapt integr g gener integrand userdefin w weight function integrand singular readili integr p point special difficulti suppli infinit rang integr oscillatori weight function co sin f fourier integr c cauchi princip valu algorithm built pair quadratur rule higher order rule lower order rule higher order rule use comput best approxim integr small rang differ result higher order rule lower order rule give estim error approxim index gausskronrod quadratur integrand without weight function algorithm gener function without weight function base gausskronrod rule gausskronrod rule begin classic gaussian quadratur rule order mathm extend addit point abscissa give higher order kronrod rule order mathm kronrod rule effici reus exist function evalu gaussian rule higher order kronrod rule use best approxim integr differ two rule use estim error approxim integrand weight function index singl clenshawcurti quadratur singl modifi clenshawcurti quadratur integrand weight function algorithm use clenshawcurti quadratur rule clenshawcurti rule begin mathnth order chebyshev polynomi approxim integrand polynomi integr exactli give approxim integr origin function chebyshev expans extend higher order improv approxim provid estim error integrand singular weight function presenc singular behavior integrand caus slow converg chebyshev approxim modifi clenshawcurti rule use quadpack separ sever common weight function caus slow converg weight function integr analyt chebyshev polynomi precomput modifi chebyshev moment combin moment chebyshev approxim function give desir integr use analyt integr singular part function allow exact cancel substanti improv overal converg behavior integr qng nonadapt gausskronrod integr index qng quadratur algorithm qng algorithm nonadapt procedur use fix gausskronrodpatterson abscissa sampl integrand maximum point provid fast integr smooth function function int gsl_integration_qng const gsl_function f doubl doubl b doubl epsab doubl epsrel doubl result doubl abserr size_t neval function appli gausskronrod point point point point integr rule success estim integr mathf mathab achiev within desir absolut rel error limit dataepsab dataepsrel function return final approxim dataresult estim absolut error dataabserr number function evalu use datanev gausskronrod rule design way rule use result predecessor order minim total number function evalu qag adapt integr index qag quadratur algorithm qag algorithm simpl adapt integr procedur integr region divid subinterv iter subinterv largest estim error bisect reduc overal error rapidli subinterv becom concentr around local difficulti integrand subinterv manag follow struct type gsl_integration_workspac workspac handl memori subinterv rang result error estim index gsl_integration_workspac function gsl_integration_workspac gsl_integration_workspace_alloc size_t n function alloc workspac suffici hold datan doubl precis interv integr result error estim one workspac may use multipl time necessari reiniti perform automat integr routin function void gsl_integration_workspace_fre gsl_integration_workspac w function free memori associ workspac dataw function int gsl_integration_qag const gsl_function f doubl doubl b doubl epsab doubl epsrel size_t limit int key gsl_integration_workspac workspac doubl result doubl abserr function appli integr rule adapt estim integr mathf mathab achiev within desir absolut rel error limit dataepsab dataepsrel function return final approxim dataresult estim absolut error dataabserr integr rule determin valu datakey chosen follow symbol name macro gsl_integ_gauss key macro gsl_integ_gauss key macro gsl_integ_gauss key macro gsl_integ_gauss key macro gsl_integ_gauss key macro gsl_integ_gauss key correspond point gausskronrod rule higherord rule give better accuraci smooth function lowerord rule save time function contain local difficulti discontinu iter adapt integr strategi bisect interv largest error estim subinterv result store memori provid dataworkspac maximum number subinterv given datalimit may exceed alloc size workspac qag adapt integr singular index qag quadratur algorithm presenc integr singular integr region caus adapt routin concentr new subinterv around singular subinterv decreas size success approxim integr converg limit fashion approach limit acceler use extrapol procedur qag algorithm combin adapt bisect wynn epsilonalgorithm speed integr mani type integr singular function int gsl_integration_qag const gsl_function f doubl doubl b doubl epsab doubl epsrel size_t limit gsl_integration_workspac workspac doubl result doubl abserr function appli gausskronrod point integr rule adapt estim integr mathf mathab achiev within desir absolut rel error limit dataepsab dataepsrel result extrapol use epsilonalgorithm acceler converg integr presenc discontinu integr singular function return final approxim extrapol dataresult estim absolut error dataabserr subinterv result store memori provid dataworkspac maximum number subinterv given datalimit may exceed alloc size workspac qagp adapt integr known singular point index singl qagp quadratur algorithm singl singular point specifi posit quadratur function int gsl_integration_qagp const gsl_function f doubl pt size_t npt doubl epsab doubl epsrel size_t limit gsl_integration_workspac workspac doubl result doubl abserr function appli adapt integr algorithm qag take account usersuppli locat singular point array datapt length datanpt contain endpoint integr rang defin integr region locat singular exampl integr region mathab breakpoint mathx_ x_ x_ matha x_ x_ x_ b follow datapt array use pt pt x_ pt x_ pt x_ pt b datanpt know locat singular point integr region routin faster funcgsl_integration_qag qagi adapt integr infinit interv index qagi quadratur algorithm function int gsl_integration_qagi gsl_function f doubl epsab doubl epsrel size_t limit gsl_integration_workspac workspac doubl result doubl abserr function comput integr function dataf infinit interv mathinftyinfti integr map onto semiopen interv math use transform mathx tt math int_inftyinfti dx fx int_ dt ftt fttt integr use qag algorithm normal point gausskronrod rule qag replac point rule transform gener integr singular origin case lowerord rule effici function int gsl_integration_qagiu gsl_function f doubl doubl epsab doubl epsrel size_t limit gsl_integration_workspac workspac doubl result doubl abserr function comput integr function dataf semiinfinit interv mathainfti integr map onto semiopen interv math use transform mathx tt math int_ainfti dx fx int_ dt fa ttt integr use qag algorithm function int gsl_integration_qagil gsl_function f doubl b doubl epsab doubl epsrel size_t limit gsl_integration_workspac workspac doubl result doubl abserr function comput integr function dataf semiinfinit interv mathinftyb integr map onto semiopen interv math use transform mathx b tt math int_inftyb dx fx int_ dt fb ttt integr use qag algorithm qawc adapt integr cauchi princip valu index singl qawc quadratur algorithm singl cauchi princip valu numer quadratur function int gsl_integration_qawc gsl_function f doubl doubl b doubl c doubl epsab doubl epsrel size_t limit gsl_integration_workspac workspac doubl result doubl abserr function comput cauchi princip valu integr mathf mathab singular datac texinfo math int_ab dx fx x c lim_epsilon left int_acepsilon dx fx x c int_cepsilonb dx fx x c right texinfo math int_ab dx fx x c adapt bisect algorithm qag use modif ensur subdivis occur singular point mathx c subinterv contain point mathx c close special point modifi clenshawcurti rule use control singular away singular algorithm use ordinari point gausskronrod integr rule qaw adapt integr singular function index singl qaw quadratur algorithm singl singular function numer integr qaw algorithm design integrand algebraiclogarithm singular endpoint integr region order work effici algorithm requir precomput tabl chebyshev moment type gsl_integration_qaws_t structur contain precomput quantiti qaw algorithm function gsl_integration_qaws_t gsl_integration_qaws_table_alloc doubl alpha doubl beta int mu int nu function alloc space typegsl_integration_qaws_t struct describ singular weight function mathwx paramet mathalpha beta mu nu math wx x aalpha b xbeta logmu x lognu b x mathalpha mathbeta mathmu mathnu weight function take four differ form depend valu mathmu mathnu weight function mathwx mathmunu mathx aalpha b xbeta math mathx aalpha b xbeta logxa math mathx aalpha b xbeta logbx math mathx aalpha b xbeta logxa logbx math singular point mathab specifi integr comput endpoint integr rang function return pointer newli alloc tabl typegsl_integration_qaws_t error detect case error function int gsl_integration_qaws_table_set gsl_integration_qaws_t doubl alpha doubl beta int mu int nu function modifi paramet mathalpha beta mu nu exist typegsl_integration_qaws_t struct datat function void gsl_integration_qaws_table_fre gsl_integration_qaws_t function free memori associ typegsl_integration_qaws_t struct datat function int gsl_integration_qaw gsl_function f const doubl const doubl b gsl_integration_qaws_t const doubl epsab const doubl epsrel const size_t limit gsl_integration_workspac workspac doubl result doubl abserr function comput integr function mathfx interv mathab singular weight function mathxaalpha bxbeta logmu xa lognu bx paramet weight function mathalpha beta mu nu taken tabl datat integr math int_ab dx fx x aalpha b xbeta logmu x lognu b x adapt bisect algorithm qag use subinterv contain one endpoint special point modifi clenshawcurti rule use control singular subinterv includ endpoint ordinari point gausskronrod integr rule use qawo adapt integr oscillatori function index singl qawo quadratur algorithm singl oscillatori function numer integr qawo algorithm design integrand oscillatori factor mathsinomega x mathcosomega x order work effici algorithm requir tabl chebyshev moment must precomput call function index gsl_integration_qawo_t function gsl_integration_qawo_t gsl_integration_qawo_table_alloc doubl omega doubl l enum gsl_integration_qawo_enum sine size_t n function alloc space typegsl_integration_qawo_t struct associ workspac describ sine cosin weight function mathwx paramet mathomega l texinfo math wx left beginarrayc sinomega x cosomega x endarray right texinfo wx sinomega x wx cosomega x paramet datal must length interv function integr mathl b choic sine cosin made paramet datasin chosen one two follow symbol valu macro gsl_integ_cosin macro gsl_integ_sin typegsl_integration_qawo_t tabl trigonometr coeffici requir integr process paramet datan determin number level coeffici comput level correspond one bisect interv mathl datan level suffici subinterv length mathln integr routin funcgsl_integration_qawo return error codegsl_et number level insuffici request accuraci function int gsl_integration_qawo_table_set gsl_integration_qawo_t doubl omega doubl l enum gsl_integration_qawo_enum sine function chang paramet dataomega datal datasin exist workspac datat function int gsl_integration_qawo_table_set_length gsl_integration_qawo_t doubl l function allow length paramet datal workspac datat chang function void gsl_integration_qawo_table_fre gsl_integration_qawo_t function free memori associ workspac datat function int gsl_integration_qawo gsl_function f const doubl const doubl epsab const doubl epsrel const size_t limit gsl_integration_workspac workspac gsl_integration_qawo_t wf doubl result doubl abserr function use adapt algorithm comput integr mathf mathab weight function mathsinomega x mathcosomega x defin tabl datawf texinfo math int_ab dx fx left beginarrayc sinomega x cosomega x endarray right texinfo int_ab dx fx sinomega x int_ab dx fx cosomega x result extrapol use epsilonalgorithm acceler converg integr function return final approxim extrapol dataresult estim absolut error dataabserr subinterv result store memori provid dataworkspac maximum number subinterv given datalimit may exceed alloc size workspac subinterv larg width mathd mathdomega comput use point clenshawcurti integr rule handl oscillatori behavior subinterv small width mathdomega comput use point gausskronrod integr qawf adapt integr fourier integr index singl qawf quadratur algorithm singl fourier integr numer function int gsl_integration_qawf gsl_function f const doubl const doubl epsab const size_t limit gsl_integration_workspac workspac gsl_integration_workspac cycle_workspac gsl_integration_qawo_t wf doubl result doubl abserr function attempt comput fourier integr function dataf semiinfinit interv mathainfti texinfo math int_ainfti dx fx left beginarrayc sinomega x cosomega x endarray right texinfo int_ainfti dx fx sinomega x int_ainfti dx fx cosomega x paramet mathomega choic mathsin mathco taken tabl datawf length datal take valu sinc overridden function valu appropri fourier integr integr comput use qawo algorithm subinterv texinfo math c_ aac c_ acac dot dot c_k akcakc texinfo c_ c c_ c c c_k k c k c mathc flooromega piomega width mathc chosen cover odd number period contribut interv altern sign monoton decreas dataf posit monoton decreas sum sequenc contribut acceler use epsilonalgorithm function work overal absolut toler dataabserr follow strategi use interv mathc_k algorithm tri achiev toler math tol_k u_k abserr mathu_k ppk mathp sum geometr seri contribut interv give overal toler dataabserr integr subinterv lead difficulti accuraci requir subsequ interv relax texinfo math tol_k u_k maxabserr max_ike_i texinfo math tol_k u_k maxabserr max_ike_i mathe_k estim error interv mathc_k subinterv result store memori provid dataworkspac maximum number subinterv given datalimit may exceed alloc size workspac integr subinterv use memori provid datacycle_workspac workspac qawo algorithm index singl cquad doublyadapt integr cquad doublyadapt integr cquad new doublyadapt generalpurpos quadratur routin handl type singular nonnumer function valu codeinf codenan well diverg integr gener requir function evalu integr routin quadpack yet fail less often difficult integrand underli algorithm use doublyadapt scheme clenshawcurti quadratur rule increas degre use comput integr interv mathl_norm differ underli interpolatori polynomi two success rule use error estim interv subdivid differ two success rule larg rule maximum degre reach index gsl_integration_cquad_workspac function gsl_integration_cquad_workspac gsl_integration_cquad_workspace_alloc size_t n function alloc workspac suffici hold data datan interv number datan maximum number interv evalu workspac full interv smaller error estim discard minimum interv requir function workspac size suffici function void gsl_integration_cquad_workspace_fre gsl_integration_cquad_workspac w function free memori associ workspac dataw function int gsl_integration_cquad const gsl_function f doubl doubl b doubl epsab doubl epsrel gsl_integration_cquad_workspac workspac doubl result doubl abserr size_t neval function comput integr mathf mathab within desir absolut rel error limit dataepsab dataepsrel use cquad algorithm function return final approxim dataresult estim absolut error dataabserr number function evalu requir datanev cquad algorithm divid integr region subinterv iter subinterv largest estim error process algorithm use clenshawcurit quadratur rule degre node respect interv initi lowestdegre rule interv process nexthigh degre rule evalu error estim comput base mathl_norm differ underli interpol polynomi rule highestdegre rule alreadi use interpolatori polynomi differ significantli interv bisect subinterv result store memori provid dataworkspac error estim number function evalu need pointer dataabserr datanev set codenul romberg integr romberg integr method estim definit integr math int_ab fx dx appli richardson extrapol trapezoid rule use equal space point space math h_k b k mathk dot n mathk richardson extrapol use mathk time previou approxim improv order accuraci much possibl romberg integr typic work well converg quickli smooth integrand singular interv end point function gsl_integration_romberg_workspac gsl_integration_romberg_allocconst size_t n function alloc workspac romberg integr specifi maximum mathn iter divis interv sinc number divis mathn mathn kept rel small ie math math cap maximum valu math prevent overflow size workspac mathon function void gsl_integration_romberg_freegsl_integration_romberg_workspac w function free memori associ workspac dataw function int gsl_integration_rombergconst gsl_function f const doubl const doubl b const doubl epsab const doubl epsrel doubl result size_t neval gsl_integration_romberg_workspac w function integr mathfx specifi dataf dataa datab store answer dataresult step iter converg test check math i_k i_k le textrmmax left epsab epsrel time i_k right mathi_k current approxim mathi_k approxim previou iter method converg within previous specifi mathn iter function store best current estim dataresult return macrogsl_emaxit method converg function return macrogsl_success total number function evalu return datanev gausslegendr integr fixedord gausslegendr integr routin provid fast integr smooth function known polynomi order mathnpoint gausslegendr rule exact polynomi order mathn less exampl rule use integr basi function form mass matric galerkin method unlik numer integr routin within librari routin accept absolut rel error bound index gsl_integration_glfixed_t function gsl_integration_glfixed_t gsl_integration_glfixed_table_alloc size_t n function determin gausslegendr abscissa weight necessari mathnpoint fix order integr scheme possibl high precis precomput coeffici use precomput weight avail lower precis coeffici comput fli function doubl gsl_integration_glfix const gsl_function f doubl doubl b const gsl_integration_glfixed_t function appli gausslegendr integr rule contain tabl datat return result function int gsl_integration_glfixed_point doubl doubl b size_t doubl xi doubl wi const gsl_integration_glfixed_t datai math dot n function obtain dataith gausslegendr point dataxi weight datawi interv dataa datab point weight order increas point valu function mathf may integr dataa datab sum mathwi fxi datai index gsl_integration_glfixed_t function void gsl_integration_glfixed_table_fre gsl_integration_glfixed_t function free memori associ tabl datat fix point quadratur index singl interpol quadratur singl quadratur interpol singl quadratur fix point routin section approxim integr sum math int_ab wx fx dx sum_in w_i fx_i mathfx function integr mathwx weight function mathn weight mathw_i node mathx_i care chosen result exact mathfx polynomi degre mathn less user choos order mathn weight function mathwx weight mathw_i node mathx_i precomput use effici evalu integr number function mathfx method work best mathfx well approxim polynomi interv mathab suitabl function singular sinc user specifi ahead time mani quadratur node use routin accept absolut rel error bound tabl list weight function current support _tab_fixedquadratur name interv weight function mathwx constraint legendr mathab math mathb chebyshev type mathab math sqrtb x x mathb gegenbau mathab mathb x x aalpha mathalpha b jacobi mathab mathb xalpha x abeta mathalphabeta b laguerr mathainfti mathxaalpha exp b x mathalpha b hermit mathinftyinfti mathxaalpha exp b xa mathalpha b exponenti mathab mathx balpha mathalpha b ration mathainfti mathx aalpha x bbeta mathalpha alpha beta n b chebyshev type mathab mathsqrtb x x mathb fix point quadratur routin use follow workspac store node weight well addit variabl intermedi calcul type gsl_integration_fixed_workspac workspac use fix point quadratur rule look like typedef struct size_t n number nodesweight doubl weight quadratur weight doubl x quadratur node doubl diag diagon jacobi matrix doubl subdiag subdiagon jacobi matrix const gsl_integration_fixed_typ type gsl_integration_fixed_workspac function gsl_integration_fixed_workspac gsl_integration_fixed_allocconst gsl_integration_fixed_typ const size_t n const doubl const doubl b const doubl alpha const doubl beta function alloc workspac comput integr interpol quadratur use datan quadratur node paramet dataa datab dataalpha databeta specifi integr interv andor weight function variou quadratur type see reftabl tab_fixedquadratur constraint paramet size workspac mathon type gsl_integration_fixed_typ type quadratur use specifi datat set follow choic var gsl_integration_fixed_legendr specifi legendr quadratur integr paramet dataalpha databeta ignor type var gsl_integration_fixed_chebyshev specifi chebyshev type quadratur integr paramet dataalpha databeta ignor type var gsl_integration_fixed_gegenbau specifi gegenbau quadratur integr paramet databeta ignor type var gsl_integration_fixed_jacobi specifi jacobi quadratur integr var gsl_integration_fixed_laguerr specifi laguerr quadratur integr paramet databeta ignor type var gsl_integration_fixed_hermit specifi hermit quadratur integr paramet databeta ignor type var gsl_integration_fixed_exponenti specifi exponenti quadratur integr paramet databeta ignor type var gsl_integration_fixed_r specifi ration quadratur integr var gsl_integration_fixed_chebyshev specifi chebyshev type quadratur integr paramet dataalpha databeta ignor type function void gsl_integration_fixed_freegsl_integration_fixed_workspac w function free memori assoc workspac dataw function size_t gsl_integration_fixed_nconst gsl_integration_fixed_workspac w function return number quadratur node weight function doubl gsl_integration_fixed_nodesconst gsl_integration_fixed_workspac w function return pointer array size datan contain quadratur node mathx_i function doubl gsl_integration_fixed_weightsconst gsl_integration_fixed_workspac w function return pointer array size datan contain quadratur weight mathw_i function int gsl_integration_fixedconst gsl_function func doubl result const gsl_integration_fixed_workspac w function integr function mathfx provid datafunc use previous comput fix quadratur rule integr approxim math sum_in w_i fx_i mathw_i quadratur weight mathx_i quadratur node comput previous funcgsl_integration_fixed_alloc sum store dataresult output error code addit standard error code invalid argument function return follow valu macrogsl_emaxit maximum number subdivis exceed macrogsl_eround reach toler roundoff error roundoff error detect extrapol tabl macrogsl_es nonintegr singular bad integrand behavior found integr interv macrogsl_ediverg integr diverg slowli converg integr numer macrogsl_edom error valu input argument exampl adapt integr exampl integr codeqag handl larg class definit integr exampl consid follow integr algebraiclogarithm singular origin math int_ x logx dx program comput integr rel accuraci bound code includ examplesintegrationc code result show desir accuraci achiev subdivis includ examplesintegrationtxt code fact extrapol procedur use codeqag produc accuraci almost twice mani digit error estim return extrapol procedur larger actual error give margin safeti one order magnitud fixedpoint quadratur exampl exampl use fixedpoint quadratur rule integr integr math int_inftyinfti ex left xm right dx left beginarraycc sqrtpi gammaleft fracm right textrm even sqrtpi textrm odd endarray right integ mathm consult reftabl tab_fixedquadratur fix point quadratur see integr evalu hermit quadratur rule set mathalpha b sinc integr polynomi degre mathm need choos number node mathn ge achiev best result first tri integr mathm n satisfi criteria integr output includ examplesintegrationatxt code find larg error tri integr mathm n satisfi criteria integr output includ examplesintegrationbtxt code program given includ examplesintegrationc code refer read follow book definit refer quadpack written origin author provid descript algorithm program list test program exampl also includ use advic numer integr mani refer numer integr literatur use develop quadpack r piessen e de donckerkapenga cw ueberhub dk kahan quadpack subroutin packag automat integr springer verlag cquad integr algorithm describ follow paper p gonnet increas reliabl adapt quadratur use explicit interpol acm transact mathemat softwar volum issu articl fixedpoint quadratur routin base iqpack describ follow paper elhay j kautski algorithm iqpack fortran subroutin weight interpolatori quadratur acm transact mathemat softwar volum number decemb page j kautski elhay calcul weight interpolatori quadratur numerisch mathematik volum number octob page index singl spars bla singl bla spars spars bla support includ includerst spars basic linear algebra subprogram bla defin set fundament oper vector spars matric use creat optim higherlevel linear algebra function gsl support limit number bla oper spars matric header file filegsl_spblash contain prototyp spars bla function relat declar index singl spars matric bla oper spars bla oper function int gsl_spblas_dgemv const cblas_transpose_t transa const doubl alpha const gsl_spmatrix const gsl_vector x const doubl beta gsl_vector function comput matrixvector product sum mathi leftarrow alpha opa x beta mathopa datatransa codecblasnotran codecblastran inplac comput support datax datay must distinct vector matrix dataa may triplet compress format function int gsl_spblas_dgemm const doubl alpha const gsl_spmatrix const gsl_spmatrix b gsl_spmatrix c function comput spars matrixmatrix product mathc alpha b matric must compress format index singl spars bla refer refer read algorithm use function describ follow sourc davi direct method spars linear system siam cspars softwar librari httpswwwciseufleduresearchsparsecspars index deby function deby function mathd_nx defin follow integr texinfo math d_nx n xn int_x dt tn et texinfo math d_nx nxn int_x dt tnet inform see abramowitz stegun section deby function declar header file filegsl_sf_debyeh function doubl gsl_sf_debye_ doubl x int gsl_sf_debye__ doubl x gsl_sf_result result routin comput firstord deby function mathd_x except return valu gsl_edom function doubl gsl_sf_debye_ doubl x int gsl_sf_debye__ doubl x gsl_sf_result result routin comput secondord deby function mathd_x except return valu gsl_edom gsl_eundrflw function doubl gsl_sf_debye_ doubl x int gsl_sf_debye__ doubl x gsl_sf_result result routin comput thirdord deby function mathd_x except return valu gsl_edom gsl_eundrflw function doubl gsl_sf_debye_ doubl x int gsl_sf_debye__ doubl x gsl_sf_result result routin comput fourthord deby function mathd_x except return valu gsl_edom gsl_eundrflw function doubl gsl_sf_debye_ doubl x int gsl_sf_debye__ doubl x gsl_sf_result result routin comput fifthord deby function mathd_x except return valu gsl_edom gsl_eundrflw function doubl gsl_sf_debye_ doubl x int gsl_sf_debye__ doubl x gsl_sf_result result routin comput sixthord deby function mathd_x except return valu gsl_edom gsl_eundrflw index singl quasirandom sequenc singl low discrep sequenc singl sobol sequenc singl niederreit sequenc quasirandom sequenc includ includerst chapter describ function gener quasirandom sequenc arbitrari dimens quasirandom sequenc progress cover mathddimension space set point uniformli distribut quasirandom sequenc also known lowdiscrep sequenc quasirandom sequenc gener use interfac similar interfac random number gener except seed requiredeach gener produc singl sequenc function describ section declar header file filegsl_qrngh quasirandom number gener initi type gsl_qrng workspac comput quasirandom sequenc function gsl_qrng gsl_qrng_alloc const gsl_qrng_type unsign int function return pointer newlycr instanc quasirandom sequenc gener type datat dimens datad insuffici memori creat gener function return null pointer error handler invok error code macrogsl_enomem function void gsl_qrng_free gsl_qrng q function free memori associ gener dataq function void gsl_qrng_init gsl_qrng q function reiniti gener dataq start point note quasirandom sequenc use seed alway produc set valu sampl quasirandom number gener function int gsl_qrng_get const gsl_qrng q doubl x function store next point sequenc gener dataq array datax space avail datax must match dimens gener point datax lie rang math x_i mathx_i inlinefn auxiliari quasirandom number gener function function const char gsl_qrng_name const gsl_qrng q function return pointer name gener function size_t gsl_qrng_size const gsl_qrng q void gsl_qrng_state const gsl_qrng q function return pointer state gener datar size use inform access state directli exampl follow code write state gener stream void state gsl_qrng_state q size_t n gsl_qrng_size q fwrite state n stream save restor quasirandom number gener state function int gsl_qrng_memcpi gsl_qrng dest const gsl_qrng src function copi quasirandom sequenc gener datasrc preexist gener datadest make datadest exact copi datasrc two gener must type function gsl_qrng gsl_qrng_clone const gsl_qrng q function return pointer newli creat gener exact copi gener dataq quasirandom number gener algorithm follow quasirandom sequenc algorithm avail type gsl_qrng_type var gsl_qrng_niederreiter_ gener use algorithm describ bratley fox niederreit acm tran model comp sim valid dimens var gsl_qrng_sobol gener use sobol sequenc describ antonov saleev ussr comput math math phi valid dimens var gsl_qrng_halton gsl_qrng_reversehalton gener use halton revers halton sequenc describ jh halton numerisch mathematik b vandewoestyn r cool comput appli mathemat valid dimens exampl follow program print first point dimension sobol sequenc includ examplesqrngc code output program aout seen success point progress fillin space previou point numreffig_qrng show distribut xy plane first point sobol sequenc _fig_qrng figur imagesqrngpng scale distribut first point quasirandom sobol sequenc refer implement quasirandom sequenc routin base algorithm describ follow paper p bratley bl fox h niederreit algorithm program gener niederreit lowdiscrep sequenc acm transact mathemat softwar vol decemb p index singl acceler seri singl summat acceler singl seri acceler singl utransform seri singl levin utransform singl converg acceler seri seri acceler function describ chapter acceler converg seri use levin mathutransform method take small number term start seri use systemat approxim comput extrapol valu estim error mathutransform work converg diverg seri includ asymptot seri function declar header file filegsl_sumh acceler function follow function comput full levin mathutransform seri error estim error estim comput propag round error term final extrapol function intend sum analyt seri term known high accuraci round error assum origin finit precis taken rel error order macrogsl_dbl_epsilon term calcul error extrapol valu mathon process expens time memori faster less reliabl method estim error converg extrapol valu describ next section method describ full tabl intermedi valu deriv mathon must comput store give reliabl error estim type gsl_sum_levin_u_workspac workspac leven mathutransform function gsl_sum_levin_u_workspac gsl_sum_levin_u_alloc size_t n function alloc workspac levin mathutransform datan term size workspac mathon n function void gsl_sum_levin_u_fre gsl_sum_levin_u_workspac w function free memori associ workspac dataw function int gsl_sum_levin_u_accel const doubl array size_t array_s gsl_sum_levin_u_workspac w doubl sum_accel doubl abserr function take term seri dataarray size dataarray_s comput extrapol limit seri use levin mathutransform addit work space must provid dataw extrapol sum store datasum_accel estim absolut error store dataabserr actual termbyterm sum return codewsum_plain algorithm calcul truncat error differ two success extrapol roundoff error propag individu term choos optim number term extrapol term seri pass dataarray nonzero acceler function without error estim function describ section comput levin mathutransform seri attempt estim error truncat error extrapol differ final two approxim use method avoid need comput intermedi tabl deriv error estim behavior extrapol valu consequ algorithm mathon process requir mathon term storag seri converg suffici fast procedur accept appropri use method need comput mani extrapol seri similar converg properti highspe exampl numer integr function defin parameter seri paramet vari slightli reliabl error estim comput first use full algorithm describ order verifi consist result type gsl_sum_levin_utrunc_workspac workspac levin mathutransform without error estim function gsl_sum_levin_utrunc_workspac gsl_sum_levin_utrunc_alloc size_t n function alloc workspac levin mathutransform datan term without error estim size workspac mathon function void gsl_sum_levin_utrunc_fre gsl_sum_levin_utrunc_workspac w function free memori associ workspac dataw function int gsl_sum_levin_utrunc_accel const doubl array size_t array_s gsl_sum_levin_utrunc_workspac w doubl sum_accel doubl abserr_trunc function take term seri dataarray size dataarray_s comput extrapol limit seri use levin mathutransform addit work space must provid dataw extrapol sum store datasum_accel actual termbyterm sum return codewsum_plain algorithm termin differ two success extrapol reach minimum suffici small differ two valu use estim error store dataabserr_trunc improv reliabl algorithm extrapol valu replac move averag calcul truncat error smooth fluctuat exampl follow code calcul estim mathzeta pi use seri math zeta dot datan term error sum mathon make direct summat seri converg slowli includ examplessumc code output show levin mathutransform abl obtain estim sum part math use first eleven term seri error estim return function also accur give correct number signific digit includ examplessumtxt code note direct summat seri would requir math term achiev precis acceler sum term refer read algorithm use function describ follow paper fessler wf ford da smith hurri acceler algorithm scalar sequenc seri acm transact mathemat softwar algorithm theori mathutransform present levin levin develop nonlinear transform improv converg sequenc intern j comput math b review paper levin transform avail onlin herbert h h homeier scalar levintyp sequenc transform httparxivorgabsmath index eigenvalu eigenvector eigensystem includ includerst chapter describ function comput eigenvalu eigenvector matric routin real symmetr real nonsymmetr complex hermitian real gener symmetricdefinit complex gener hermitiandefinit real gener nonsymmetr eigensystem eigenvalu comput without eigenvector hermitian real symmetr matrix algorithm symmetr bidiagon follow qr reduct nonsymmetr algorithm franci qr doubleshift gener nonsymmetr algorithm qz method due moler stewart function describ chapter declar header file filegsl_eigenh real symmetr matric index singl symmetr matrix real eigensystem singl real symmetr matrix eigensystem real symmetr matric librari use symmetr bidiagon qr reduct method describ golub van loan section comput eigenvalu accur absolut accuraci mathepsilon a_ mathepsilon machin precis type gsl_eigen_symm_workspac workspac contain intern paramet use solv symmetr eigenvalu problem function gsl_eigen_symm_workspac gsl_eigen_symm_alloc const size_t n function alloc workspac comput eigenvalu datanbydatan real symmetr matric size workspac mathon function void gsl_eigen_symm_fre gsl_eigen_symm_workspac w function free memori associ workspac dataw function int gsl_eigen_symm gsl_matrix gsl_vector eval gsl_eigen_symm_workspac w function comput eigenvalu real symmetr matrix dataa addit workspac appropri size must provid dataw diagon lower triangular part dataa destroy comput strict upper triangular part referenc eigenvalu store vector dataev unord type gsl_eigen_symmv_workspac workspac contain intern paramet use solv symmetr eigenvalu eigenvector problem function gsl_eigen_symmv_workspac gsl_eigen_symmv_alloc const size_t n function alloc workspac comput eigenvalu eigenvector datanbydatan real symmetr matric size workspac mathon function void gsl_eigen_symmv_fre gsl_eigen_symmv_workspac w function free memori associ workspac dataw function int gsl_eigen_symmv gsl_matrix gsl_vector eval gsl_matrix evec gsl_eigen_symmv_workspac w function comput eigenvalu eigenvector real symmetr matrix dataa addit workspac appropri size must provid dataw diagon lower triangular part dataa destroy comput strict upper triangular part referenc eigenvalu store vector dataev unord correspond eigenvector store column matrix dataevec exampl eigenvector first column correspond first eigenvalu eigenvector guarante mutual orthogon normalis unit magnitud complex hermitian matric hermitian matric librari use complex form symmetr bidiagon qr reduct method index singl hermitian matrix complex eigensystem singl complex hermitian matrix eigensystem type gsl_eigen_herm_workspac workspac contain intern paramet use solv hermitian eigenvalu problem function gsl_eigen_herm_workspac gsl_eigen_herm_alloc const size_t n function alloc workspac comput eigenvalu datanbydatan complex hermitian matric size workspac mathon function void gsl_eigen_herm_fre gsl_eigen_herm_workspac w function free memori associ workspac dataw function int gsl_eigen_herm gsl_matrix_complex gsl_vector eval gsl_eigen_herm_workspac w function comput eigenvalu complex hermitian matrix dataa addit workspac appropri size must provid dataw diagon lower triangular part dataa destroy comput strict upper triangular part referenc imaginari part diagon assum zero referenc eigenvalu store vector dataev unord type gsl_eigen_hermv_workspac workspac contain intern paramet use solv hermitian eigenvalu eigenvector problem function gsl_eigen_hermv_workspac gsl_eigen_hermv_alloc const size_t n function alloc workspac comput eigenvalu eigenvector datanbydatan complex hermitian matric size workspac mathon function void gsl_eigen_hermv_fre gsl_eigen_hermv_workspac w function free memori associ workspac dataw function int gsl_eigen_hermv gsl_matrix_complex gsl_vector eval gsl_matrix_complex evec gsl_eigen_hermv_workspac w function comput eigenvalu eigenvector complex hermitian matrix dataa addit workspac appropri size must provid dataw diagon lower triangular part dataa destroy comput strict upper triangular part referenc imaginari part diagon assum zero referenc eigenvalu store vector dataev unord correspond complex eigenvector store column matrix dataevec exampl eigenvector first column correspond first eigenvalu eigenvector guarante mutual orthogon normalis unit magnitud real nonsymmetr matric index singl nonsymmetr matrix real eigensystem singl real nonsymmetr matrix eigensystem solut real nonsymmetr eigensystem problem matrix matha involv comput schur decomposit math z zt mathz orthogon matrix schur vector matht schur form quasi upper triangular diagon mathbymath block real eigenvalu matha diagon mathbymath block whose eigenvalu complex conjug eigenvalu matha algorithm use doubleshift franci method type gsl_eigen_nonsymm_workspac workspac contain intern paramet use solv nonsymmetr eigenvalu problem function gsl_eigen_nonsymm_workspac gsl_eigen_nonsymm_alloc const size_t n function alloc workspac comput eigenvalu datanbydatan real nonsymmetr matric size workspac mathon function void gsl_eigen_nonsymm_fre gsl_eigen_nonsymm_workspac w function free memori associ workspac dataw function void gsl_eigen_nonsymm_param const int compute_t const int balanc gsl_eigen_nonsymm_workspac w function set paramet determin eigenvalu problem solv subsequ call funcgsl_eigen_nonsymm datacompute_t set full schur form matht comput funcgsl_eigen_nonsymm set matht comput default set comput full schur form matht requir approxim time number flop databal set balanc transform appli matrix prior comput eigenvalu transform design make row column matrix compar norm result accur eigenvalu matric whose entri vari wide magnitud see refbalanc balanc inform note balanc transform preserv orthogon schur vector wish comput schur vector funcgsl_eigen_nonsymm_z obtain schur vector balanc matrix instead origin matrix relationship math qt q dataq matrix schur vector balanc matrix datad balanc transform funcgsl_eigen_nonsymm_z comput matrix dataz satisfi math z z mathz q note dataz orthogon reason balanc perform default function int gsl_eigen_nonsymm gsl_matrix gsl_vector_complex eval gsl_eigen_nonsymm_workspac w function comput eigenvalu real nonsymmetr matrix dataa store vector dataev matht desir store upper portion dataa output otherwis output diagon dataa contain mathbymath real eigenvalu mathbymath complex conjug eigenvalu system rest dataa destroy rare case function may fail find eigenvalu happen error code return number converg eigenvalu store codewn_ev converg eigenvalu store begin dataev function int gsl_eigen_nonsymm_z gsl_matrix gsl_vector_complex eval gsl_matrix z gsl_eigen_nonsymm_workspac w function ident funcgsl_eigen_nonsymm except also comput schur vector store dataz type gsl_eigen_nonsymmv_workspac workspac contain intern paramet use solv nonsymmetr eigenvalu eigenvector problem function gsl_eigen_nonsymmv_workspac gsl_eigen_nonsymmv_alloc const size_t n function alloc workspac comput eigenvalu eigenvector datanbydatan real nonsymmetr matric size workspac mathon function void gsl_eigen_nonsymmv_fre gsl_eigen_nonsymmv_workspac w function free memori associ workspac dataw function void gsl_eigen_nonsymmv_param const int balanc gsl_eigen_nonsymm_workspac w function set paramet determin eigenvalu problem solv subsequ call funcgsl_eigen_nonsymmv databal set balanc transform appli matrix see funcgsl_eigen_nonsymm_param inform balanc turn default sinc preserv orthogon schur vector function int gsl_eigen_nonsymmv gsl_matrix gsl_vector_complex eval gsl_matrix_complex evec gsl_eigen_nonsymmv_workspac w function comput eigenvalu right eigenvector datanbydatan real nonsymmetr matrix dataa first call funcgsl_eigen_nonsymm comput eigenvalu schur form matht schur vector find eigenvector matht backtransform use schur vector schur vector destroy process save use funcgsl_eigen_nonsymmv_z comput eigenvector normal unit magnitud output upper portion dataa contain schur form matht funcgsl_eigen_nonsymm fail eigenvector comput error code return function int gsl_eigen_nonsymmv_z gsl_matrix gsl_vector_complex eval gsl_matrix_complex evec gsl_matrix z gsl_eigen_nonsymmv_workspac w function ident funcgsl_eigen_nonsymmv except also save schur vector dataz real gener symmetricdefinit eigensystem index gener symmetr eigensystem real gener symmetricdefinit eigenvalu problem find eigenvalu mathlambda eigenvector mathx math x lambda b x matha mathb symmetr matric mathb positivedefinit problem reduc standard symmetr eigenvalu problem appli choleski decomposit mathb texinfo math x lambda b x x lambda l lt x left l lt right lt x lambda lt x texinfo x lambda b x x lambda l lt x l lt lt x lambda lt x therefor problem becom mathc lambda mathc l lt symmetr mathi lt x standard symmetr eigensolv appli matrix mathc result eigenvector backtransform find vector origin problem eigenvalu eigenvector gener symmetricdefinit eigenproblem alway real type gsl_eigen_gensymm_workspac workspac contain intern paramet use solv gener symmetr eigenvalu problem function gsl_eigen_gensymm_workspac gsl_eigen_gensymm_alloc const size_t n function alloc workspac comput eigenvalu datanbydatan real gener symmetricdefinit eigensystem size workspac mathon function void gsl_eigen_gensymm_fre gsl_eigen_gensymm_workspac w function free memori associ workspac dataw function int gsl_eigen_gensymm gsl_matrix gsl_matrix b gsl_vector eval gsl_eigen_gensymm_workspac w function comput eigenvalu real gener symmetricdefinit matrix pair dataa datab store dataev use method outlin output datab contain choleski decomposit dataa destroy type gsl_eigen_gensymmv_workspac workspac contain intern paramet use solv gener symmetr eigenvalu eigenvector problem function gsl_eigen_gensymmv_workspac gsl_eigen_gensymmv_alloc const size_t n function alloc workspac comput eigenvalu eigenvector datanbydatan real gener symmetricdefinit eigensystem size workspac mathon function void gsl_eigen_gensymmv_fre gsl_eigen_gensymmv_workspac w function free memori associ workspac dataw function int gsl_eigen_gensymmv gsl_matrix gsl_matrix b gsl_vector eval gsl_matrix evec gsl_eigen_gensymmv_workspac w function comput eigenvalu eigenvector real gener symmetricdefinit matrix pair dataa datab store dataev dataevec respect comput eigenvector normal unit magnitud output datab contain choleski decomposit dataa destroy complex gener hermitiandefinit eigensystem index gener hermitian definit eigensystem complex gener hermitiandefinit eigenvalu problem find eigenvalu mathlambda eigenvector mathx math x lambda b x matha mathb hermitian matric mathb positivedefinit similarli real case reduc mathc lambda mathc l ldagger hermitian mathi ldagger x standard hermitian eigensolv appli matrix mathc result eigenvector backtransform find vector origin problem eigenvalu gener hermitiandefinit eigenproblem alway real type gsl_eigen_genherm_workspac workspac contain intern paramet use solv gener hermitian eigenvalu problem function gsl_eigen_genherm_workspac gsl_eigen_genherm_alloc const size_t n function alloc workspac comput eigenvalu datanbydatan complex gener hermitiandefinit eigensystem size workspac mathon function void gsl_eigen_genherm_fre gsl_eigen_genherm_workspac w function free memori associ workspac dataw function int gsl_eigen_genherm gsl_matrix_complex gsl_matrix_complex b gsl_vector eval gsl_eigen_genherm_workspac w function comput eigenvalu complex gener hermitiandefinit matrix pair dataa datab store dataev use method outlin output datab contain choleski decomposit dataa destroy type gsl_eigen_genhermv_workspac workspac contain intern paramet use solv gener hermitian eigenvalu eigenvector problem function gsl_eigen_genhermv_workspac gsl_eigen_genhermv_alloc const size_t n function alloc workspac comput eigenvalu eigenvector datanbydatan complex gener hermitiandefinit eigensystem size workspac mathon function void gsl_eigen_genhermv_fre gsl_eigen_genhermv_workspac w function free memori associ workspac dataw function int gsl_eigen_genhermv gsl_matrix_complex gsl_matrix_complex b gsl_vector eval gsl_matrix_complex evec gsl_eigen_genhermv_workspac w function comput eigenvalu eigenvector complex gener hermitiandefinit matrix pair dataa datab store dataev dataevec respect comput eigenvector normal unit magnitud output datab contain choleski decomposit dataa destroy real gener nonsymmetr eigensystem index gener eigensystem given two squar matric matha mathb gener nonsymmetr eigenvalu problem find eigenvalu mathlambda eigenvector mathx math x lambda b x may also defin problem find eigenvalu mathmu eigenvector mathi math mu b note two problem equival mathlambda mu neither mathlambda mathmu zero say mathlambda zero still well defin eigenproblem altern problem involv mathmu therefor allow zero infinit eigenvalu problem actual solv math beta x alpha b x eigensolv routin return two valu mathalpha mathbeta leav user perform divis mathlambda alpha beta mathmu beta alpha determin matrix pencil matha lambda b zero mathlambda problem said singular otherwis call regular singular normal lead mathalpha beta mean eigenproblem illcondit gener well defin eigenvalu solut routin intend regular matrix pencil could yield unpredict result appli singular pencil solut real gener nonsymmetr eigensystem problem matrix pair matha b involv comput gener schur decomposit texinfo math q zt b q zt texinfo q zt b q zt mathq mathz orthogon matric left right schur vector respect math gener schur form whose diagon element give mathalpha mathbeta valu algorithm use qz method due moler stewart see refer type gsl_eigen_gen_workspac workspac contain intern paramet use solv gener eigenvalu problem function gsl_eigen_gen_workspac gsl_eigen_gen_alloc const size_t n function alloc workspac comput eigenvalu datanbydatan real gener nonsymmetr eigensystem size workspac mathon function void gsl_eigen_gen_fre gsl_eigen_gen_workspac w function free memori associ workspac dataw function void gsl_eigen_gen_param const int compute_ const int compute_t const int balanc gsl_eigen_gen_workspac w function set paramet determin eigenvalu problem solv subsequ call funcgsl_eigen_gen datacompute_ set full schur form math comput funcgsl_eigen_gen set math comput default set math quasi upper triangular matrix block diagon block correspond real eigenvalu block correspond complex eigenvalu datacompute_t set full schur form matht comput funcgsl_eigen_gen set matht comput default set matht upper triangular matrix nonneg element diagon block math correspond diagon block matht databal paramet current ignor sinc gener balanc yet implement function int gsl_eigen_gen gsl_matrix gsl_matrix b gsl_vector_complex alpha gsl_vector beta gsl_eigen_gen_workspac w function comput eigenvalu real gener nonsymmetr matrix pair dataa datab store pair dataalpha databeta dataalpha complex databeta real mathbeta_i nonzero mathlambda alpha_i beta_i eigenvalu likewis mathalpha_i nonzero mathmu beta_i alpha_i eigenvalu altern problem mathmu b element databeta normal nonneg math desir store dataa output matht desir store datab output order eigenvalu dataalpha databeta follow order diagon block schur form math matht rare case function may fail find eigenvalu occur error code return function int gsl_eigen_gen_qz gsl_matrix gsl_matrix b gsl_vector_complex alpha gsl_vector beta gsl_matrix q gsl_matrix z gsl_eigen_gen_workspac w function ident funcgsl_eigen_gen except also comput left right schur vector store dataq dataz respect type gsl_eigen_genv_workspac workspac contain intern paramet use solv gener eigenvalu eigenvector problem function gsl_eigen_genv_workspac gsl_eigen_genv_alloc const size_t n function alloc workspac comput eigenvalu eigenvector datanbydatan real gener nonsymmetr eigensystem size workspac mathon function void gsl_eigen_genv_fre gsl_eigen_genv_workspac w function free memori associ workspac dataw function int gsl_eigen_genv gsl_matrix gsl_matrix b gsl_vector_complex alpha gsl_vector beta gsl_matrix_complex evec gsl_eigen_genv_workspac w function comput eigenvalu right eigenvector datanbydatan real gener nonsymmetr matrix pair dataa datab eigenvalu store dataalpha databeta eigenvector store dataevec first call funcgsl_eigen_gen comput eigenvalu schur form schur vector find eigenvector schur form backtransform use schur vector schur vector destroy process save use funcgsl_eigen_genv_qz comput eigenvector normal unit magnitud output dataa datab contain gener schur form math matht funcgsl_eigen_gen fail eigenvector comput error code return function int gsl_eigen_genv_qz gsl_matrix gsl_matrix b gsl_vector_complex alpha gsl_vector beta gsl_matrix_complex evec gsl_matrix q gsl_matrix z gsl_eigen_genv_workspac w function ident funcgsl_eigen_genv except also comput left right schur vector store dataq dataz respect sort eigenvalu eigenvector index sort eigenvalu eigenvector function int gsl_eigen_symmv_sort gsl_vector eval gsl_matrix evec gsl_eigen_sort_t sort_typ function simultan sort eigenvalu store vector dataev correspond real eigenvector store column matrix dataevec ascend descend order accord valu paramet datasort_typ type gsl_eigen_sort_t macrogsl_eigen_sort_val_asc ascend order numer valu macrogsl_eigen_sort_val_desc descend order numer valu macrogsl_eigen_sort_abs_asc ascend order magnitud macrogsl_eigen_sort_abs_desc descend order magnitud function int gsl_eigen_hermv_sort gsl_vector eval gsl_matrix_complex evec gsl_eigen_sort_t sort_typ function simultan sort eigenvalu store vector dataev correspond complex eigenvector store column matrix dataevec ascend descend order accord valu paramet datasort_typ shown function int gsl_eigen_nonsymmv_sort gsl_vector_complex eval gsl_matrix_complex evec gsl_eigen_sort_t sort_typ function simultan sort eigenvalu store vector dataev correspond complex eigenvector store column matrix dataevec ascend descend order accord valu paramet datasort_typ shown macrogsl_eigen_sort_abs_asc macrogsl_eigen_sort_abs_desc support due eigenvalu complex function int gsl_eigen_gensymmv_sort gsl_vector eval gsl_matrix evec gsl_eigen_sort_t sort_typ function simultan sort eigenvalu store vector dataev correspond real eigenvector store column matrix dataevec ascend descend order accord valu paramet datasort_typ shown function int gsl_eigen_genhermv_sort gsl_vector eval gsl_matrix_complex evec gsl_eigen_sort_t sort_typ function simultan sort eigenvalu store vector dataev correspond complex eigenvector store column matrix dataevec ascend descend order accord valu paramet datasort_typ shown function int gsl_eigen_genv_sort gsl_vector_complex alpha gsl_vector beta gsl_matrix_complex evec gsl_eigen_sort_t sort_typ function simultan sort eigenvalu store vector dataalpha databeta correspond complex eigenvector store column matrix dataevec ascend descend order accord valu paramet datasort_typ shown macrogsl_eigen_sort_abs_asc macrogsl_eigen_sort_abs_desc support due eigenvalu complex exampl follow program comput eigenvalu eigenvector th order hilbert matrix mathhij j includ exampleseigenc code begin output program aout eigenvalu e eigenvector compar correspond output octav octav vd eighilb octav diagd an e e e e octav v v note eigenvector differ chang sign sinc sign eigenvector arbitrari follow program illustr use nonsymmetr eigensolv comput eigenvalu eigenvector vandermond matrix mathvxij x_in j mathx includ exampleseigen_nonsymmc code begin output program aout eigenvalu eigenvector eigenvalu eigenvector compar correspond output octav octav vd eigvand octav diagd an octav v v column column note eigenvector correspond eigenvalu math differ multipl constant math arbitrari phase factor magnitud refer read inform algorithm describ section found follow book g h golub c f van loan matrix comput rd ed john hopkin univers press isbn inform gener eigensystem qz algorithm found paper c moler g stewart algorithm gener matrix eigenvalu problem siam j numer anal vol index lapack eigensystem routin larg matric found fortran librari lapack lapack librari describ lapack user guid third edit publish siam isbn lapack sourc code found websit httpwwwnetliborglapack along onlin copi user guid index zeta function riemann zeta function defin abramowitz stegun section function describ section declar header file filegsl_sf_zetah riemann zeta function index riemann zeta function riemann zeta function defin infinit sum math zeta sum_kinfti ks function doubl gsl_sf_zeta_int int n int gsl_sf_zeta_int_ int n gsl_sf_result result routin comput riemann zeta function mathzetan integ datan mathn ne domain n integ n except return valu gsl_edom gsl_eovrflw function doubl gsl_sf_zeta doubl int gsl_sf_zeta_ doubl gsl_sf_result result routin comput riemann zeta function mathzeta arbitrari data math ne domain except return valu gsl_edom gsl_eovrflw riemann zeta function minu one larg posit argument riemann zeta function approach one region fraction part interest therefor need function evalu explicitli function doubl gsl_sf_zetam_int int n int gsl_sf_zetam_int_ int n gsl_sf_result result routin comput mathzetan integ datan mathn ne domain n integ n except return valu gsl_edom gsl_eovrflw function doubl gsl_sf_zetam doubl int gsl_sf_zetam_ doubl gsl_sf_result result routin comput mathzeta arbitrari data math ne domain except return valu gsl_edom gsl_eovrflw hurwitz zeta function index hurwitz zeta function hurwitz zeta function defin math zetasq sum_infti kq function doubl gsl_sf_hzeta doubl doubl q int gsl_sf_hzeta_ doubl doubl q gsl_sf_result result routin comput hurwitz zeta function mathzetasq math mathq domain q except return valu gsl_edom gsl_eundrflw gsl_eovrflw eta function index eta function eta function defin math eta zeta function doubl gsl_sf_eta_int int n int gsl_sf_eta_int_ int n gsl_sf_result result routin comput eta function mathetan integ datan except return valu gsl_eundrflw gsl_eovrflw function doubl gsl_sf_eta doubl int gsl_sf_eta_ doubl gsl_sf_result result routin comput eta function matheta arbitrari data except return valu gsl_eundrflw gsl_eovrflw index sort heapsort sort chapter describ function sort data directli indirectli use index function use heapsort algorithm heapsort mathon log n algorithm oper inplac requir addit storag also provid consist perform run time worstcas order data significantli longer averag best case note heapsort algorithm preserv rel order equal elementsit unstabl sort howev result order equal element consist across differ platform use function sort object follow function provid simpl altern standard librari function funcqsort intend system lack funcqsort replac function funcqsort use whenev possibl faster provid stabl order equal element document funcqsort avail gnu c librari refer manual function describ section defin header file filegsl_heapsorth index singl comparison function definit function void gsl_heapsort void array size_t count size_t size gsl_comparison_fn_t compar function sort datacount element array dataarray size datas ascend order use comparison function datacompar type comparison function defin type gsl_comparison_fn_t int gsl_comparison_fn_t const void const void b comparison function return neg integ first argument less second argument code two argument equal posit integ first argument greater second argument exampl follow function use sort doubl ascend numer order int compare_doubl const doubl const doubl b b return els b return els return appropri function call perform sort gsl_heapsort array count sizeofdoubl compare_doubl note unlik funcqsort heapsort algorithm made stabl sort pointer arithmet trick compar pointer equal element comparison function work heapsort algorithm heapsort algorithm perform intern rearrang data destroy initi order index indirect sort function int gsl_heapsort_index size_t p const void array size_t count size_t size gsl_comparison_fn_t compar function indirectli sort datacount element array dataarray size datas ascend order use comparison function datacompar result permut store datap array length datan element datap give index array element would store posit array sort place first element datap give index least element dataarray last element datap give index greatest element dataarray array chang sort vector follow function sort element array vector either directli indirectli defin real integ type use normal suffix rule exampl codefloat version array function funcgsl_sort_float funcgsl_sort_float_index correspond vector function funcgsl_sort_vector_float funcgsl_sort_vector_float_index prototyp avail header file filegsl_sort_floath filegsl_sort_vector_floath complet set prototyp includ use header file filegsl_sorth filegsl_sort_vectorh function sort complex array vector sinc order complex number uniqu defin sort complex vector magnitud comput real vector contain magnitud complex element sort vector indirectli result index give appropri order origin complex vector index singl sort vector element singl vector sort element function void gsl_sort doubl data const size_t stride size_t n function sort datan element array datadata stride datastrid ascend numer order function void gsl_sort doubl data const size_t stride doubl data const size_t stride size_t n function sort datan element array datadata stride datastrid ascend numer order make rearrang array datadata stride datastrid also size datan function void gsl_sort_vector gsl_vector v function sort element vector datav ascend numer order function void gsl_sort_vector gsl_vector v gsl_vector v function sort element vector datav ascend numer order make rearrang vector datav index singl indirect sort vector element function void gsl_sort_index size_t p const doubl data size_t stride size_t n function indirectli sort datan element array datadata stride datastrid ascend order store result permut datap array datap must alloc suffici length store datan element permut element datap give index array element would store posit array sort place array datadata chang function int gsl_sort_vector_index gsl_permut p const gsl_vector v function indirectli sort element vector datav ascend order store result permut datap element datap give index vector element would store posit vector sort place first element datap give index least element datav last element datap give index greatest element datav vector datav chang select k smallest largest element function describ section select mathk smallest largest element data set size mathn routin use mathokn direct insert algorithm suit subset small compar total size dataset exampl routin use select largest valu one million data point select largest valu subset signific part total dataset may faster sort element dataset directli mathon log n algorithm obtain smallest largest valu way function int gsl_sort_smallest doubl dest size_t k const doubl src size_t stride size_t n function copi datak smallest element array datasrc size datan stride datastrid ascend numer order array datadest size datak subset must less equal datan data datasrc modifi oper function int gsl_sort_largest doubl dest size_t k const doubl src size_t stride size_t n function copi datak largest element array datasrc size datan stride datastrid descend numer order array datadest datak must less equal datan data datasrc modifi oper function int gsl_sort_vector_smallest doubl dest size_t k const gsl_vector v int gsl_sort_vector_largest doubl dest size_t k const gsl_vector v function copi datak smallest largest element vector datav array datadest datak must less equal length vector datav follow function find indic mathk smallest largest element dataset function int gsl_sort_smallest_index size_t p size_t k const doubl src size_t stride size_t n function store indic datak smallest element array datasrc size datan stride datastrid array datap indic chosen correspond data ascend numer order datak must less equal datan data datasrc modifi oper function int gsl_sort_largest_index size_t p size_t k const doubl src size_t stride size_t n function store indic datak largest element array datasrc size datan stride datastrid array datap indic chosen correspond data descend numer order datak must less equal datan data datasrc modifi oper function int gsl_sort_vector_smallest_index size_t p size_t k const gsl_vector v int gsl_sort_vector_largest_index size_t p size_t k const gsl_vector v function store indic datak smallest largest element vector datav array datap datak must less equal length vector datav comput rank rank element order sort data rank invers index permut mathp comput use follow algorithm psize size_t pi pdatai rankdatapi comput directli function codegsl_permutation_inverserankp follow function print rank element vector mathv void print_rank gsl_vector v size_t size_t n vsize gsl_permut perm gsl_permutation_allocn gsl_permut rank gsl_permutation_allocn gsl_sort_vector_index perm v gsl_permutation_invers rank perm n doubl vi gsl_vector_getv printf element valu g rank dn vi rankdatai gsl_permutation_fre perm gsl_permutation_fre rank exampl follow exampl show use permut mathp print element vector mathv ascend order gsl_sort_vector_index p v vsize doubl vpi gsl_vector_get v pdatai printf order valu gn vpi next exampl use function funcgsl_sort_smallest select smallest number uniform random variat store array includ examplessortsmallc code output list smallest valu ascend order includ examplessortsmalltxt code refer read subject sort cover extens follow donald e knuth art comput program sort search vol rd ed addisonwesley isbn heapsort algorithm describ follow book robert sedgewick algorithm c addisonwesley isbn index singl power function singl integ power follow function equival function funcgsl_pow_int error estim function declar header file filegsl_sf_pow_inth function doubl gsl_sf_pow_int doubl x int n int gsl_sf_pow_int_ doubl x int n gsl_sf_result result routin comput power mathxn integ datan power comput use minimum number multipl exampl mathx comput mathx requir multipl reason effici function check overflow underflow condit follow simpl exampl includ gslgsl_sf_pow_inth comput doubl gsl_sf_pow_int index singl standard conform ansi c singl ansi c use singl c extens compat use singl compat use librari includ includerst chapter describ compil program use gsl introduc convent exampl program follow short program demonstr use librari comput valu bessel function mathj_x mathx includ examplesintroc code output shown correct doubleprecis accuraci f_ includ examplesintrotxt code step need compil program describ follow section index singl compil program includ path singl includ gsl header file singl header file includ compil link librari header file instal filegsl directori write preprocessor includ statement filegsl directori prefix thu includ gslgsl_mathh directori instal standard search path compil also need provid locat preprocessor command line flag default locat filegsl directori fileusrlocalincludegsl typic compil command sourc file fileexamplec gnu c compil codegcc gcc wall iusrlocalinclud c examplec result object file fileexampleo default includ path codegcc search fileusrlocalinclud automat codei option actual omit gsl instal default locat index singl compil program librari path singl link gsl librari singl librari link link program librari librari instal singl file filelibgsla share version librari filelibgslso also instal system support share librari default locat file fileusrlocallib directori standard search path linker also need provid locat command line flag link librari need specifi main librari support cbla librari provid standard basic linear algebra subroutin suitabl cbla implement provid librari filelibgslcblasa system provid one follow exampl show link applic librari gcc lusrlocallib exampleo lgsl lgslcbla lm default librari path codegcc search fileusrlocallib automat codel option omit gsl instal default locat option codelm link system math librari system need f_ tutori introduct gnu c compil relat program see introduct gcc isbn f_ link altern bla librari follow command line show would link applic altern cbla librari filelibcblasa gcc exampleo lgsl lcbla lm best perform optim platformspecif cbla librari use codelcbla librari must conform cbla standard atla packag provid portabl highperform bla librari cbla interfac free softwar instal work requir fast vector matrix oper follow command line link atla librari cbla interfac gcc exampleo lgsl lcbla latla lm atla librari instal nonstandard directori use codel option add search path describ inform bla function see refchap_blassupport index singl share librari singl librari share singl ld_library_path share librari run program link share version librari oper system must abl locat correspond fileso file runtim librari found follow error occur aout aout error load share librari libgslso open share object file file directori avoid error either modifi system dynam linker configur f_ defin shell variabl codeld_library_path includ directori librari instal exampl bourn shell codebinsh codebinbash librari search path set follow command ld_library_pathusrlocallib export ld_library_path exampl cshell codebincsh codebintcsh equival command setenv ld_library_path usrlocallib standard prompt cshell exampl percent charact type part command save retyp command session place individu systemwid login file compil static link version program use codestat flag codegcc gcc static exampleo lgsl lgslcbla lm ansi c complianc librari written ansi c intend conform ansi c standard c portabl system work ansi c compil librari reli nonansi extens interfac export user program write use gsl ansi compliant extens use way compat pure ansi c support howev via condit compil allow librari take advantag compil extens platform support ansi c featur known broken particular system librari exclud relat function compiletim make imposs link program would use function give incorrect result avoid namespac conflict export function name variabl prefix codegsl_ export macro prefix codegsl_ index singl inlin function singl have_inlin singl gsl_c_inlin singl c inlin keyword singl extern inlin _sec_inlinefunct inlin function codeinlin keyword part origin ansi c standard c librari export inlin function definit default inlin function introduc offici newer c standard c compil also includ codeinlin extens long time allow use inlin function librari provid option inlin version performancecrit routin condit compil export header file inlin version function includ defin macro codehave_inlin compil applic gcc wall c dhave_inlin examplec use codeautoconf macro defin automat defin macro codehave_inlin slower noninlin version function use instead default actual form inlin keyword codeextern inlin codegcc extens elimin unnecessari function definit form codeextern inlin caus problem compil stricter autoconf test use see refchap_autoconfmacro compil codegcc c mode codegcc stdc header file automat switch ccompat inlin function declar instead codeextern inlin c compil defin macro codegsl_c_inlin use declar long doubl index long doubl gener algorithm librari written doubl precis codelong doubl type support actual comput one reason choic precis codelong doubl platform depend ieee standard specifi minimum precis extend precis number precis codedoubl platform howev sometim necessari interact extern data longdoubl format vector matrix datatyp includ longdoubl version note system librari codestdioh format inputoutput function codeprintf codescanf implement correctli codelong doubl undefin incorrect result avoid test function codeconfigur stage librari compil elimin certain gsl function depend necessari correspond line codeconfigur output look like check whether printf work long doubl consequ codelong doubl format inputoutput work given system imposs link program use gsl function depend necessari work system support format codelong doubl inputoutput option use binari format convert codelong doubl result codedoubl read write _portabilityfunct portabl function help write portabl applic gsl provid implement function found librari bsd math librari write applic use nativ version function substitut gsl version via preprocessor macro unavail anoth platform exampl determin whether bsd function funchypot avail includ follow macro definit file fileconfigh applic substitut gsl_hypot miss system hypot ifndef have_hypot defin hypot gsl_hypot endif applic sourc file use includ command codeinclud configh replac occurr funchypot funcgsl_hypot funchypot avail substitut made automat use codeautoconf see refchap_autoconfmacro circumst best strategi use nativ version function avail fall back gsl version otherwis sinc allow applic take advantag platformspecif optim system librari strategi use within gsl index singl altern optim function singl optim function altern altern optim function main implement function librari optim architectur exampl sever way comput gaussian random variat rel speed platformdepend case like librari provid altern implement function interfac write applic use call standard implement select altern version later via preprocessor definit also possibl introduc optim function way retain portabl follow line demonstr use platformdepend choic method sampl gaussian distribut ifdef sparc defin gsl_ran_gaussian gsl_ran_gaussian_ratio_method endif ifdef intel defin gsl_ran_gaussian my_gaussian endif line would place configur header file fileconfigh applic includ sourc file note altern implement produc bitforbit ident result case random number distribut produc entir differ stream random variat support differ numer type mani function librari defin differ numer type featur implement vari name function typerel modifiera primit form c templat modifi insert function name initi modul prefix follow tabl show function name defin numer type imaginari modul codegsl_foo function funcfn gsl_foo_fn doubl gsl_foo_long_double_fn long doubl gsl_foo_float_fn float gsl_foo_long_fn long gsl_foo_ulong_fn unsign long gsl_foo_int_fn int gsl_foo_uint_fn unsign int gsl_foo_short_fn short gsl_foo_ushort_fn unsign short gsl_foo_char_fn char gsl_foo_uchar_fn unsign char normal numer precis codedoubl consid default requir suffix exampl function funcgsl_stats_mean comput mean doubl precis number function funcgsl_stats_int_mean comput mean integ correspond scheme use librari defin type codegsl_vector codegsl_matrix case modifi append type name exampl modul defin new typedepend struct typedef codegsl_foo modifi type follow way gsl_foo doubl gsl_foo_long_doubl long doubl gsl_foo_float float gsl_foo_long long gsl_foo_ulong unsign long gsl_foo_int int gsl_foo_uint unsign int gsl_foo_short short gsl_foo_ushort unsign short gsl_foo_char char gsl_foo_uchar unsign char modul contain typedepend definit librari provid individu header file type filenam modifi shown conveni default header includ definit type includ doubl precis header file specif type use individu filenam includ gslgsl_fooh type includ gslgsl_foo_doubleh doubl includ gslgsl_foo_long_doubleh long doubl includ gslgsl_foo_floath float includ gslgsl_foo_longh long includ gslgsl_foo_ulongh unsign long includ gslgsl_foo_inth int includ gslgsl_foo_uinth unsign int includ gslgsl_foo_shorth short includ gslgsl_foo_ushorth unsign short includ gslgsl_foo_charh char includ gslgsl_foo_ucharh unsign char index singl c compat singl except c compat c librari header file automat defin function codeextern c linkag includ c program allow function call directli c use c except handl within userdefin function pass librari paramet librari must built addit codecflag compil option codefexcept index alias array _aliasingofarray alias array librari assum array vector matric pass modifi argument alias overlap remov need librari handl overlap memori region special case allow addit optim use overlap memori region pass modifi argument result function undefin argument modifi exampl function prototyp declar codeconst argument overlap alias memori region safe use threadsafeti librari use multithread program function threadsaf sens use static variabl memori alway associ object function function use workspac object temporari storag workspac alloc perthread basi function use tabl object readonli memori tabl use multipl thread simultan tabl argument alway declar codeconst function prototyp indic may safe access differ thread small number static global variabl use control overal behavior librari eg whether use rangecheck function call fatal error etc variabl set directli user initi program startup modifi differ thread index deprec function deprec function time time may necessari definit function alter remov librari circumst function first declar deprec remov subsequ version librari function deprec disabl current releas set preprocessor definit codegsl_disable_deprec allow exist code test forward compat index singl code reus applic singl sourc code reus applic code reus possibl routin librari written avoid depend modul file make possibl extract individu function use applic without need whole librari instal may need defin certain macro codegsl_error remov codeinclud statement order compil file standalon unit reus librari code way encourag subject term gnu gener public licens rubric footnot f last digit may vari slightli depend compil platform usedthi normal f need maco x f httpwwwnetworktheorycoukgccintro f fileetcldsoconf gnulinux system index ntupl ntupl chapter describ function creat manipul ntupl set valu associ event ntupl store file valu extract combin book histogram use select function valu store held userdefin data structur ntupl creat associ data structur file valu written file normal insid loop use ntupl function describ histogram creat ntupl data provid select function valu function select function specifi whether event includ subset analyz valu function comput entri ad histogram event ntupl function defin header file filegsl_ntupleh ntupl struct type gsl_ntupl ntupl manipul use typegsl_ntupl struct struct contain inform file ntupl data store pointer current ntupl data row size userdefin ntupl data struct typedef struct file file void ntuple_data size_t size gsl_ntupl creat ntupl function gsl_ntupl gsl_ntuple_cr char filenam void ntuple_data size_t size function creat new writeonli ntupl file datafilenam ntupl size datas return pointer newli creat ntupl struct exist file name truncat zero length overwritten pointer memori current ntupl row datantuple_data must suppliedthi use copi ntupl file open exist ntupl file function gsl_ntupl gsl_ntuple_open char filenam void ntuple_data size_t size function open exist ntupl file datafilenam read return pointer correspond ntupl struct ntupl file must size datas pointer memori current ntupl row datantuple_data must suppliedthi use copi ntupl file write ntupl function int gsl_ntuple_writ gsl_ntupl ntupl function write current ntupl codentuplentuple_data size codentuples correspond file function int gsl_ntuple_bookdata gsl_ntupl ntupl function synonym funcgsl_ntuple_writ read ntupl function int gsl_ntuple_read gsl_ntupl ntupl function read current row ntupl file datantupl store valu codentupledata close ntupl file function int gsl_ntuple_clos gsl_ntupl ntupl function close ntupl file datantupl free associ alloc memori histogram ntupl valu ntupl creat content histogram variou way use function funcgsl_ntuple_project two userdefin function must provid function select event function comput scalar valu select function valu function accept ntupl row first argument paramet second argument index singl select function ntupl type gsl_ntuple_select_fn select function determin ntupl row select histogram defin follow struct typedef struct int function void ntuple_data void param void param gsl_ntuple_select_fn struct compon datafunct return nonzero valu ntupl row includ histogram index singl valu function ntupl type gsl_ntuple_value_fn valu function comput scalar valu ntupl row select select function typedef struct doubl function void ntuple_data void param void param gsl_ntuple_value_fn case struct compon datafunct return valu ad histogram ntupl row index singl histogram ntupl singl project ntupl function int gsl_ntuple_project gsl_histogram h gsl_ntupl ntupl gsl_ntuple_value_fn value_func gsl_ntuple_select_fn select_func function updat histogram datah ntupl datantupl use function datavalue_func dataselect_func ntupl row select function dataselect_func nonzero correspond valu row comput use function datavalue_func ad histogram ntupl row dataselect_func return zero ignor new entri ad histogram subsequ call use accumul data histogram exampl follow exampl program demonstr use ntupl manag larg dataset first program creat set simul event associ valu mathxyz gener gaussian distribut unit varianc demonstr purpos written ntupl file filetestdat includ examplesntuplewc code next program analys ntupl data file filetestdat analysi procedur comput squaredmagnitud event mathexyz select exceed lower limit select event histogram use math valu includ examplesntuplerc code numreffig_ntupl show distribut select event note cutoff lower bound _fig_ntupl figur imagesntuplepng scale distribut select event refer read index paw hbook inform use ntupl found document cern packag paw hbook avail onlin index singl error function singl erfx singl erfcx error function describ abramowitz stegun chapter function section declar header file filegsl_sf_erfh error function function doubl gsl_sf_erf doubl x int gsl_sf_erf_ doubl x gsl_sf_result result routin comput error function matherfx matherfx sqrtpi int_x dt expt except return valu none complementari error function function doubl gsl_sf_erfc doubl x int gsl_sf_erfc_ doubl x gsl_sf_result result routin comput complementari error function matherfcx erfx sqrtpi int_xinfti expt except return valu none log complementari error function function doubl gsl_sf_log_erfc doubl x int gsl_sf_log_erfc_ doubl x gsl_sf_result result routin comput logarithm complementari error function mathlogerfcx except return valu none probabl function probabl function normal gaussian distribut describ abramowitz stegun section function doubl gsl_sf_erf_z doubl x int gsl_sf_erf_z_ doubl x gsl_sf_result result routin comput gaussian probabl densiti function mathzx sqrtpi expx function doubl gsl_sf_erf_q doubl x int gsl_sf_erf_q_ doubl x gsl_sf_result result routin comput upper tail gaussian probabl function mathqx sqrtpi int_xinfti dt expt except return valu none index singl hazard function normal distribut singl mill ratio invers hazard function normal distribut also known invers mill ratio defin texinfo math hx zx qx sqrt pi expx erfcxsqrt texinfo hx zxqx sqrtpi expx erfcxsqrt decreas rapidli mathx approach mathinfti asymptot mathhx sim x mathx approach mathinfti function doubl gsl_sf_hazard doubl x int gsl_sf_hazard_ doubl x gsl_sf_result result routin comput hazard function normal distribut except return valu gsl_eundrflw index singl differenti function numer singl function numer differenti singl deriv calcul numer singl numer deriv singl slope see numer deriv numer differenti function describ chapter comput numer deriv finit differenc adapt algorithm use find best choic finit differ estim error deriv function declar header file filegsl_derivh function function int gsl_deriv_centr const gsl_function f doubl x doubl h doubl result doubl abserr function comput numer deriv function dataf point datax use adapt central differ algorithm stepsiz datah deriv return dataresult estim absolut error return dataabserr initi valu datah use estim optim stepsiz base scale truncat error roundoff error deriv calcul deriv comput use point rule equal space abscissa mathx h mathx h mathx mathx h mathxh error estim taken differ point rule correspond point rule mathxh mathx mathxh note valu function mathx contribut deriv calcul point actual use function int gsl_deriv_forward const gsl_function f doubl x doubl h doubl result doubl abserr function comput numer deriv function dataf point datax use adapt forward differ algorithm stepsiz datah function evalu point greater datax never datax deriv return dataresult estim absolut error return dataabserr function use mathfx discontinu datax undefin valu less datax initi valu datah use estim optim stepsiz base scale truncat error roundoff error deriv calcul deriv mathx comput use open point rule equal space abscissa mathxh mathx h mathx h mathxh error estim taken differ point rule correspond point rule mathxh mathxh function int gsl_deriv_backward const gsl_function f doubl x doubl h doubl result doubl abserr function comput numer deriv function dataf point datax use adapt backward differ algorithm stepsiz datah function evalu point less datax never datax deriv return dataresult estim absolut error return dataabserr function use mathfx discontinu datax undefin valu greater datax function equival call funcgsl_deriv_forward neg stepsiz exampl follow code estim deriv function mathfx x mathx mathx function mathfx undefin mathx deriv mathx comput use funcgsl_deriv_forward includ examplesdiffc code output program includ examplesdifftxt code refer read algorithm use function describ follow sourc abramowitz stegun handbook mathemat function section tabl coeffici differenti sd cont carl de boor elementari numer analysi algorithm approach mcgrawhil debug numer program chapter describ tip trick debug numer program use gsl index singl gdb singl debug numer program singl breakpoint use gdb error report librari pass function funcgsl_error run program gdb set breakpoint function automat catch librari error add breakpoint everi session put break gsl_error filegdbinit file directori program start breakpoint catch error use backtrac codebt see calltre argument possibl caus error move call function investig valu variabl point exampl program codeffttest_trap contain follow line statu gsl_fft_complex_wavetable_alloc complex_wavet function funcgsl_fft_complex_wavetable_alloc take length fft first argument line execut error gener length fft allow zero debug problem start codegdb use file filegdbinit defin breakpoint funcgsl_error gdb test_trap gdb free softwar welcom distribut copi certain condit type show copi see condit absolut warranti gdb type show warranti detail gdb idebianlinux copyright free softwar foundat inc breakpoint xbe file errorc line run program breakpoint catch error show reason gdb run start program test_trap breakpoint gsl_error reasonxbd length n must posit integ filexb c_initc line gsl_errno errorc gsl_error_handl first argument funcgsl_error alway string describ error look backtrac see caus problem gdb bt gsl_error reasonxbd length n must posit integ filexb c_initc line gsl_errno errorc x gsl_fft_complex_wavetable_alloc n wavetablexbffff c_initc xa main argc argvxbffffbc test_trapc xbe ___crt_dummy__ see error gener function funcgsl_fft_complex_wavetable_alloc call argument coden origin call came line file filetest_trapc move level origin call find line caus error gdb x gsl_fft_complex_wavetable_alloc n wavetablexbffff c_initc gsl_error length n must posit integ gsl_edom gdb xa main argc argvxbffffbc test_trapc statu gsl_fft_complex_wavetable_alloc complex_wavet thu found line caus problem point could also print valu variabl codecomplex_wavet index float point regist examin float point regist content float point regist examin use command codeinfo float support platform gdb info float st xcbaaa valid normal e st xffeaf valid normal st xfeccedad valid normal e st xffaaefdfd spec normal st xc valid normal e st xffefcd zero normal st xfff valid normal st xcbafdc valid normal e fctrl x bit near mask denor lo fstat xbba flag top excep denor overf lo ftag xfff fip xbc fc xa fopoff x fopsel xb individu regist examin use variabl codereg codereg regist name gdb p st index singl except float point singl float point except handl float point except possibl stop program whenev codesigfp float point except occur use find caus unexpect infin codenan current handler set shown command codeinfo signal sigfp gdb info signal sigfp signal stop print pass program descript sigfp ye ye ye arithmet except unless program use signal handler default set chang sigfp pass program would caus exit command codehandl sigfp stop nopass prevent gdb handl sigfp stop nopass signal stop print pass program descript sigfp ye ye arithmet except depend platform may necessari instruct kernel gener signal float point except program use gsl achiev use macrogsl_ieee_mod environ variabl conjunct function funcgsl_ieee_env_setup describ refchap_iee gdb set env gsl_ieee_modedoubleprecis index singl warn option singl gcc warn option gcc warn option numer program write reliabl numer program c requir great care follow gcc warn option recommend compil numer program gcc ansi pedant werror wall w wmissingprototyp wstrictprototyp wconvers wshadow wpointerarith wcastqual wcastalign wwritestr wnestedextern fshortenum fnocommon dinlin g uniniti variabl convers integ sign unsign integ caus hardtofind problem mani nonnumer program compil codegcc warn option codewal provid good check common error howev numer program codewal enough unconvinc take look program contain error occur numer code exampl includ mathh includ stdioh doubl f int x int main doubl doubl fa printfa g sqrta gn return doubl fx return sqrtx end exampl noindent code compil cleanli codewal produc strang output exampl bash gcc wall tmpc lm bash aout sqrta end exampl noindent note ad codeansi help sinc program contain invalid construct happen prototyp function codefint x consist function call codefi codey float point number result argument silent convert integ valid c numer program also like program error would like warn genuin want convert codey integ could use explicit cast codeinti fortun gcc provid mani addit warn alert problem rememb use set recommend warn option numer program detail option consult manual use port gcc follow tabl give brief explan type error option catch codeansi pedant use ansi c reject nonansi extens flag help write portabl program compil system codewerror consid warn error compil stop prevent warn scroll top screen lost wont abl compil program complet warningfre codewal turn set warn common program problem need codewal enough codeo turn optim warn uniniti variabl codewal reli optim analyz code optim warn arent gener codew turn extra warn includ codewal miss return valu comparison sign unsign integ codewmissingprototyp wstrictprototyp warn miss inconsist prototyp without prototyp harder detect problem incorrect argument codewconvers main use option warn convers sign unsign integ exampl codeunsign int x need perform convers use explicit cast codewshadow warn whenev local variabl shadow anoth local variabl two variabl name potenti sourc confus codewpointerarith wcastqual wcastalign option warn tri pointer arithmet type dont size codevoid remov codeconst cast pointer cast pointer type differ size caus invalid align codewwritestr option give string constant codeconst qualifi compiletim error attempt overwrit codefshortenum option make type codeenum short possibl normal make codeenum differ codeint consequ attempt assign pointertoint pointertoenum gener castalign warn codefnocommon option prevent global variabl simultan defin differ object file get error link time variabl defin one file refer file codeextern declar codewnestedextern warn codeextern declar encount within function codedinlin codeinlin keyword part ansi c thu want use codeansi program use inlin function use preprocessor definit remov codeinlin keyword codeg alway make sens put debug symbol execut debug use codegdb effect debug symbol increas size file use codestrip command remov later necessari comparison happen test program compil option exampl bash gcc ansi pedant werror w wall wtradit wconvers wshadow wpointerarith wcastqual wcastalign wwritestr waggregatereturn wstrictprototyp fshortenum fnocommon wmissingprototyp wnestedextern dinlin g tmpc cc warn treat error tmpc warn function declar isnt prototyp tmpc function main tmpc warn pass arg f integ rather float due prototyp tmpc function f tmpc warn type x default int tmpc warn pass arg sqrt float rather integ due prototyp make tmp error end exampl noindent error prototyp flag plu fact defin main codeint main void ansi c clearli work program readi run refer read follow book essenti read anyon write debug numer program codegcc codegdb rm stallman use port gnu cc free softwar foundat isbn rm stallman rh pesch debug gdb gnu sourcelevel debugg free softwar foundat isbn tutori introduct gnu c compil relat program see bj gough httpwwwnetworktheorycoukgccintro introduct gcc network theori ltd isbn index dilogarithm dilogarithm defin texinfo math li_z int_z ds log texinfo math li_z int_z ds log function describ section declar header file filegsl_sf_dilogh real argument function doubl gsl_sf_dilog doubl x int gsl_sf_dilog_ doubl x gsl_sf_result result routin comput dilogarithm real argument lewin notat mathli_x real part dilogarithm real mathx defin integr represent math li_x int_x ds log note mathimli_x mathx le mathpilogx mathx note abramowitz stegun refer spenc integr mathsx li_ x dilogarithm rather mathli_x complex argument function int gsl_sf_complex_dilog_ doubl r doubl theta gsl_sf_result result_r gsl_sf_result result_im function comput full complexvalu dilogarithm complex argument mathz r expi theta real imaginari part result return dataresult_r dataresult_im index singl physic constant singl constant physic singl convers unit singl unit convers physic constant chapter describ macro valu physic constant speed light mathc gravit constant mathg valu avail differ unit system includ standard mksa system meter kilogram second amper cgsm system centimet gram second gauss commonli use astronomi definit constant mksa system avail file filegsl_const_mksah constant cgsm system defin filegsl_const_cgsmh dimensionless constant fine structur constant pure number defin filegsl_const_numh full list constant describ briefli consult header file valu constant use librari index singl fundament constant singl constant fundament fundament constant macro gsl_const_mksa_speed_of_light speed light vacuum mathc macro gsl_const_mksa_vacuum_perm permeabl free space mathmu_ constant defin mksa system macro gsl_const_mksa_vacuum_permitt permitt free space mathepsilon_ constant defin mksa system macro gsl_const_mksa_plancks_constant_h planck constant mathh macro gsl_const_mksa_plancks_constant_hbar planck constant divid mathpi mathhbar macro gsl_const_num_avogadro avogadro number mathn_a macro gsl_const_mksa_faraday molar charg faraday macro gsl_const_mksa_boltzmann boltzmann constant mathk macro gsl_const_mksa_molar_ga molar ga constant mathr_ macro gsl_const_mksa_standard_gas_volum standard ga volum mathv_ macro gsl_const_mksa_stefan_boltzmann_const stefanboltzmann radiat constant mathsigma macro gsl_const_mksa_gauss magnet field gauss index astronom constant astronomi astrophys macro gsl_const_mksa_astronomical_unit length astronom unit mean earthsun distanc mathau macro gsl_const_mksa_gravitational_const gravit constant mathg macro gsl_const_mksa_light_year distanc lightyear mathli macro gsl_const_mksa_parsec distanc parsec mathpc macro gsl_const_mksa_grav_accel standard gravit acceler earth mathg macro gsl_const_mksa_solar_mass mass sun index singl atom physic constant singl nuclear physic constant atom nuclear physic macro gsl_const_mksa_electron_charg charg electron math macro gsl_const_mksa_electron_volt energi electron volt mathev macro gsl_const_mksa_unified_atomic_mass unifi atom mass mathamu macro gsl_const_mksa_mass_electron mass electron mathm_ macro gsl_const_mksa_mass_muon mass muon mathm_mu macro gsl_const_mksa_mass_proton mass proton mathm_p macro gsl_const_mksa_mass_neutron mass neutron mathm_n macro gsl_const_num_fine_structur electromagnet fine structur constant mathalpha macro gsl_const_mksa_rydberg rydberg constant mathri unit energi relat rydberg invers wavelength mathr_infti mathri h c r_infti macro gsl_const_mksa_bohr_radiu bohr radiu matha_ macro gsl_const_mksa_angstrom length angstrom macro gsl_const_mksa_barn area barn macro gsl_const_mksa_bohr_magneton bohr magneton mathmu_b macro gsl_const_mksa_nuclear_magneton nuclear magneton mathmu_n macro gsl_const_mksa_electron_magnetic_mo absolut valu magnet moment electron mathmu_ physic magnet moment electron neg macro gsl_const_mksa_proton_magnetic_mo magnet moment proton mathmu_p macro gsl_const_mksa_thomson_cross_sect thomson cross section mathsigma_t macro gsl_const_mksa_deby electr dipol moment deby mathd index time unit measur time macro gsl_const_mksa_minut number second minut macro gsl_const_mksa_hour number second hour macro gsl_const_mksa_day number second day macro gsl_const_mksa_week number second week index singl imperi unit singl unit imperi imperi unit macro gsl_const_mksa_inch length inch macro gsl_const_mksa_foot length foot macro gsl_const_mksa_yard length yard macro gsl_const_mksa_mil length mile macro gsl_const_mksa_mil length mil th inch index nautic unit speed nautic unit macro gsl_const_mksa_kilometers_per_hour speed kilomet per hour macro gsl_const_mksa_miles_per_hour speed mile per hour macro gsl_const_mksa_nautical_mil length nautic mile macro gsl_const_mksa_fathom length fathom macro gsl_const_mksa_knot speed knot index printer unit printer unit macro gsl_const_mksa_point length printer point inch macro gsl_const_mksa_texpoint length tex point inch index volum unit volum area length macro gsl_const_mksa_micron length micron macro gsl_const_mksa_hectar area hectar macro gsl_const_mksa_acr area acr macro gsl_const_mksa_lit volum liter macro gsl_const_mksa_us_gallon volum us gallon macro gsl_const_mksa_canadian_gallon volum canadian gallon macro gsl_const_mksa_uk_gallon volum uk gallon macro gsl_const_mksa_quart volum quart macro gsl_const_mksa_pint volum pint node cookeri section cookeri commentindex cookeri unit tabl commentod item gsl_const_mksa_cup volum cup item gsl_const_mksa_fluid_ounc volum fluid ounc item gsl_const_mksa_tablespoon volum tablespoon item gsl_const_mksa_teaspoon volum teaspoon end tabl index singl mass unit singl weight unit mass weight macro gsl_const_mksa_pound_mass mass pound macro gsl_const_mksa_ounce_mass mass ounc macro gsl_const_mksa_ton mass ton macro gsl_const_mksa_metric_ton mass metric ton kg macro gsl_const_mksa_uk_ton mass uk ton macro gsl_const_mksa_troy_ounc mass troy ounc macro gsl_const_mksa_carat mass carat macro gsl_const_mksa_gram_forc forc gram weight macro gsl_const_mksa_pound_forc forc pound weight macro gsl_const_mksa_kilopound_forc forc kilopound weight macro gsl_const_mksa_pound forc poundal index singl energi unit singl power unit singl thermal energi unit thermal energi power macro gsl_const_mksa_calori energi calori macro gsl_const_mksa_btu energi british thermal unit mathbtu macro gsl_const_mksa_therm energi therm macro gsl_const_mksa_horsepow power horsepow index pressur unit pressur macro gsl_const_mksa_bar pressur bar macro gsl_const_mksa_std_atmospher pressur standard atmospher macro gsl_const_mksa_torr pressur torr macro gsl_const_mksa_meter_of_mercuri pressur meter mercuri macro gsl_const_mksa_inch_of_mercuri pressur inch mercuri macro gsl_const_mksa_inch_of_wat pressur inch water macro gsl_const_mksa_psi pressur pound per squar inch index viscos unit viscos macro gsl_const_mksa_pois dynam viscos pois macro gsl_const_mksa_stok kinemat viscos stoke index singl light unit singl illumin unit light illumin macro gsl_const_mksa_stilb lumin stilb macro gsl_const_mksa_lumen lumin flux lumen macro gsl_const_mksa_lux illumin lux macro gsl_const_mksa_phot illumin phot macro gsl_const_mksa_footcandl illumin footcandl macro gsl_const_mksa_lambert lumin lambert macro gsl_const_mksa_footlambert lumin footlambert index radioact unit radioact macro gsl_const_mksa_curi activ curi macro gsl_const_mksa_roentgen exposur roentgen macro gsl_const_mksa_rad absorb dose rad index forc energi unit forc energi macro gsl_const_mksa_newton si unit forc newton macro gsl_const_mksa_dyn forc dyne math newton macro gsl_const_mksa_joul si unit energi joul macro gsl_const_mksa_erg energi erg math joul index singl prefix singl constant prefix prefix constant dimensionless scale factor macro gsl_const_num_yotta math macro gsl_const_num_zetta math macro gsl_const_num_exa math macro gsl_const_num_peta math macro gsl_const_num_tera math macro gsl_const_num_giga math macro gsl_const_num_mega math macro gsl_const_num_kilo math macro gsl_const_num_milli math macro gsl_const_num_micro math macro gsl_const_num_nano math macro gsl_const_num_pico math macro gsl_const_num_femto math macro gsl_const_num_atto math macro gsl_const_num_zepto math macro gsl_const_num_yocto math exampl follow program demonstr use physic constant calcul case goal calcul rang lighttravel time earth mar requir data averag distanc planet sun astronom unit eccentr inclin orbit neglect purpos calcul averag radiu orbit mar astronom unit orbit earth astronom unit definit valu combin mksa valu constant speed light length astronom unit produc result shortest longest lighttravel time second figur convert minut display includ examplesconstc code output program includ examplesconsttxt code refer read authorit sourc physic constant codata recommend valu publish articl inform valu physic constant also avail nist websit pj mohr bn taylor db newel codata recommend valu fundament physic constant review modern physic pp httpwwwphysicsnistgovcuuconstantsindexhtml httpphysicsnistgovpubsspappenbhtml digit filter introduct filter discuss chapter base follow move data window center mathith sampl texinfo math w_ih left x_ih dot x_i dot x_ih right texinfo w_ih x_ih x_i x_ih mathh nonneg integ call window halflength repres number sampl sampl mathi total window length mathk h handl endpoint process sampl near end input signal enough sampl fill window mathw_ih defin therefor user must specifi construct window near end point done pass input argument type typegsl_filter_end_t type gsl_filter_end_t data type specifi construct window near end point select follow choic macro gsl_filter_end_padzero option full window length mathk construct insert zero window near signal end point effect input signal modifi texinfo math tildex underbrac dot _h textrm zero x_ x_ dot x_n x_n underbrac dot _h textrm zero texinfo x x_ x_ x_n x_n ensur welldefin window mathx_i macro gsl_filter_end_padvalu option full window length mathk construct pad window first last sampl input signal effect input signal modifi texinfo math tildex underbracex_ dot x__h x_ x_ dot x_n x_n underbracex_n dot x_n_h texinfo x x_ x_ x_ x_ x_n x_n x_n x_n macro gsl_filter_end_trunc option pad perform window simpli truncat end point approach linear digit filter gaussian filter gaussian filter convolv input signal gaussian kernel window filter often use smooth nois reduct filter gaussian kernel defin texinfo math gk efrac left alpha frackk right eksigma texinfo gk e alpha kk eksigma mathk le k le k mathk size kernel paramet mathalpha specifi number standard deviat mathsigma desir kernel exampl set mathalpha would defin gaussian window length mathk span mathpm sigma often conveni specifi paramet mathalpha rather standard deviat mathsigma construct kernel sinc fix valu mathalpha would correspond shape gaussian regardless size mathk appropri valu standard deviat depend mathk relat mathalpha texinfo math sigma frack alpha texinfo sigma k alpha routin accept mathalpha input argument instead mathsigma gaussian filter offer conveni way differenti smooth input signal singl pass use deriv properti convolut texinfo math fracddt left g x right fracdgdt x texinfo ddt g x dgdt x input signal mathxt smooth differenti time convolut deriv gaussian kernel readili comput analyt express principl appli higher order deriv function gsl_filter_gaussian_workspac gsl_filter_gaussian_allocconst size_t k function initi workspac gaussian filter use kernel size datak mathh k mathk even round next odd integ ensur symmetr window size workspac mathok function void gsl_filter_gaussian_freegsl_filter_gaussian_workspac w function free memori associ dataw function int gsl_filter_gaussianconst gsl_filter_end_t endtyp const doubl alpha const size_t order const gsl_vector x gsl_vector gsl_filter_gaussian_workspac w function appli gaussian filter parameter dataalpha input vector datax store output datay deriv order specifi dataord code correspond gaussian code correspond first deriv gaussian paramet dataendtyp specifi signal end point handl allow datax datay inplac filter function int gsl_filter_gaussian_kernelconst doubl alpha const size_t order const int normal gsl_vector kernel function construct gaussian kernel parameter dataalpha store output datakernel paramet dataord specifi deriv order code correspond gaussian code correspond first deriv gaussian datanorm set code kernel normal sum one output datanorm set code normal perform nonlinear digit filter nonlinear digit filter describ base window median given texinfo math m_i textrmmedian left w_ih right textrmmedian left x_ih dot x_i dot x_ih right texinfo m_i median w_ih median x_ih x_i x_ih median consid robust local outlier unlik mean median filter preserv sharp edg remov signal nois use wide rang applic standard median filter standard median filter smf simpli replac sampl mathx_i median mathm_i window mathw_ih filter one tune paramet given mathh standard median filter consid highli resist local outlier local nois data sequenc mathx_i function gsl_filter_median_workspac gsl_filter_median_allocconst size_t k function initi workspac standard median filter use symmetr center move window size datak mathh k mathk even round next odd integ ensur symmetr window size workspac mathok function void gsl_filter_median_freegsl_filter_median_workspac w function free memori associ dataw function int gsl_filter_medianconst gsl_filter_end_t endtyp const gsl_vector x gsl_vector gsl_filter_median_workspac w function appli standard median filter input datax store output datay paramet dataendtyp specifi signal end point handl allow datax datay inplac filter recurs median filter recurs median filter rmf modif smf includ previou filter output window comput median filter respons texinfo math y_i textrmmedian left y_ih dot y_i x_i x_i dot x_ih right texinfo y_i median y_ih y_i x_i x_i x_ih sometim smf must appli sever time row achiev adequ smooth ie cascad filter rmf hand converg root sequenc one pass sometim provid smoother result sever pass smf root sequenc input left unchang filter need appli recurs median filter twice input vector function gsl_filter_rmedian_workspac gsl_filter_rmedian_allocconst size_t k function initi workspac recurs median filter use symmetr center move window size datak mathh k mathk even round next odd integ ensur symmetr window size workspac mathok function void gsl_filter_rmedian_freegsl_filter_rmedian_workspac w function free memori associ dataw function int gsl_filter_rmedianconst gsl_filter_end_t endtyp const gsl_vector x gsl_vector gsl_filter_rmedian_workspac w function appli recurs median filter input datax store output datay paramet dataendtyp specifi signal end point handl allow datax datay inplac filter impuls detect filter impuls nois character short sequenc data point distinct surround neighborhood section describ power class filter also known impuls reject filter decisionbas filter design detect remov outlier data filter respons given texinfo math y_i left beginarraycc x_i x_i m_i le s_i m_i x_i m_i s_i endarray right texinfo y_i x_i x_i m_i s_i m_i x_i m_i s_i mathm_i median valu window mathw_ih maths_i robust estim scatter dispers window mathw_ih matht tune paramet specifi number scale factor need determin point outlier main idea median mathm_i unaffect small number outlier window given sampl mathx_i test determin far away median term local scale estim maths_i sampl matht scale estim away median label outlier replac window median mathm_i sampl less matht scale estim median left unchang filter note matht impuls detect filter equival standard median filter matht rightarrow infti becom ident filter mean impuls detect filter view less aggress version standard median filter becom less aggress matht increas note filter modifi sampl identifi outlier standard median filter chang sampl local median regardless whether outlier fact plu addit flexibl offer addit tune paramet matht make impuls detect filter better choic applic import robust accur scale estim maths_i order detect impuls outlier even presenc nois window standard deviat typic good choic significantli perturb presenc even one outlier gsl offer follow choic specifi paramet type typegsl_filter_scale_t comput scale estim maths_i robust presenc impuls outlier type gsl_filter_scale_t type specifi scale estim maths_i window mathw_ih calcul macro gsl_filter_scale_mad option specifi median absolut deviat mad scale estim defin texinfo math s_i time textrmmedian left w_ih m_i right texinfo s_i median w_ih m_i choic scale estim also known hampel filter statist literatur see refher sec_madstatist inform macro gsl_filter_scale_iqr option specifi interquartil rang iqr scale estim defin differ th th percentil window mathw_ih texinfo math s_i left q_ q_ right texinfo s_i q_ q_ mathq_p pquantil window mathw_ih idea throw away largest smallest window sampl outlier would estim scale middl factor math provid unbias estim standard deviat gaussian data macro gsl_filter_scale_sn option specifi socal maths_n statist propos croux rousseeuw see refher sec_snstatist inform macro gsl_filter_scale_qn option specifi socal mathq_n statist propos croux rousseeuw see refher sec_qnstatist inform warn scale estim defin much less sensit outlier standard deviat suffer effect call implos standard deviat window mathw_ih zero sampl window equal howev possibl mad window zero even sampl window equal exampl mathk mathk sampl window equal valu mathx window median equal mathx consequ least mathk absolut deviat mathx_j x zero mad zero case hampel filter act like standard median filter regardless valu matht caution also exercis divid maths_i function gsl_filter_impulse_workspac gsl_filter_impulse_allocconst size_t k function initi workspac impuls detect filter use symmetr move window size datak mathh k mathk even round next odd integ ensur symmetr window size workspac mathok function void gsl_filter_impulse_freegsl_filter_impulse_workspac w function free memori associ dataw function int gsl_filter_impulseconst gsl_filter_end_t endtyp const gsl_filter_scale_t scale_typ const doubl const gsl_vector x gsl_vector gsl_vector xmedian gsl_vector xsigma size_t noutlier gsl_vector_int ioutlier gsl_filter_impulse_workspac w function appli impuls detect filter input vector datax store filter output datay tune paramet matht provid datat window median mathm_i store dataxmedian maths_i store dataxsigma output number outlier detect store datanoutli output locat flag outlier store boolean array dataioutli input dataioutli may codenul desir allow datax datay inplac filter exampl gaussian exampl exampl program illustr gaussian filter appli smooth time seri length mathn kernel size mathk three filter appli paramet mathalpha result shown numreffig_filtgaussian _fig_filtgaussian figur imagesgaussfiltpng scale top panel gaussian kernel unnorm mathalpha bottom panel time seri gray gaussian filter output mathalpha valu see filter correspond mathalpha appli smooth mathalpha correspond least amount smooth program given includ examplesgaussfiltc code gaussian exampl common applic gaussian filter detect edg sudden jump noisi input signal use edg detect time seri well edg detect imag examin noisi time seri length mathn singl edg input signal defin texinfo math xn en left beginarraycc n le n n n endarray right texinfo xn en n n n n mathen gaussian random nois program smooth input signal order math math gaussian filter length mathk mathalpha comparison program also comput finit differ input signal without smooth result shown numreffig_filtgaussian _fig_filtgaussian figur imagesgaussfiltpng scale top row origin input signal mathxn black gaussian smooth signal red second row first finit differ input signal third row input signal smooth first order gaussian filter fourth row input signal smooth second order gaussian filter finit differ approxim first deriv second row show common problem differenti noisi signal nois amplifi make extrem difficult detect sharp gradient sampl math third row show first order gaussian smooth signal clear peak locat edg altern one could examin second order gaussian smooth signal fourth row look zero cross determin edg locat program given includ examplesgaussfiltc code squar wave signal exampl follow exampl program illustr median filter noisi squar wave signal median filter well known preserv sharp edg input signal reduc nois program construct hz squar wave signal gaussian nois ad signal filter standard median filter recurs median filter use symmetr window length mathk result shown numreffig_filtedg _fig_filtedg figur imagesfilt_edgepng scale origin time seri gray standard median filter output green recurs median filter output red filter preserv sharp signal edg reduc nois recurs median filter achiev smoother result standard median filter blocki natur output characterist median filter program given includ examplesfilt_edgec code impuls detect exampl follow exampl program illustr impuls detect filter first construct sinusoid signal length mathn gaussian nois ad data perturb repres larg outlier impuls detect filter appli window size mathk tune paramet matht use mathq_n statist robust measur scale result plot numreffig_impuls _fig_impuls figur imagesimpulsepng scale origin time seri blue filter output green upper lower interv detect outlier red yellow respect detect outlier mark squar program given includ examplesimpulsec code refer read follow public relev algorithm describ chapter f j harri use window harmon analysi discret fourier transform proceed ieee sj ko yh lee fam effici implement onedimension recurs median filter ieee transact circuit system r k pearson gabbouj nonlinear digit filter python introduct crc press index singl random number distribut singl cumul distribut function cdf singl cdf cumul distribut function singl invers cumul distribut function singl quantil function _chap_randomnumberdistribut random number distribut includ includerst chapter describ function gener random variat comput probabl distribut sampl distribut describ chapter obtain use random number gener librari underli sourc random simplest case nonuniform distribut obtain analyt uniform distribut random number gener appli appropri transform method use one call random number gener complic distribut creat acceptancereject method compar desir distribut distribut similar known analyt usual requir sever sampl gener librari also provid cumul distribut function invers cumul distribut function sometim refer quantil function cumul distribut function invers comput separ upper lower tail distribut allow full accuraci retain small result function random variat probabl densiti function describ section declar filegsl_randisth correspond cumul distribut function declar filegsl_cdfh note discret random variat function alway return valu type codeunsign int platform maximum valu texinfo math approx time texinfo e call safe rang paramet neglig probabl variat exceed limit prevent incorrect result due overflow introduct continu random number distribut defin probabl densiti function mathpx probabl mathx occur infinitesim rang mathx mathx dx mathpx dx cumul distribut function lower tail mathpx defin integr math px int_inftyx dx px give probabl variat take valu less mathx cumul distribut function upper tail mathqx defin integr math qx int_xinfti dx px give probabl variat take valu greater mathx upper lower cumul distribut function relat mathpx qx satisfi math le px le math le qx le invers cumul distribut mathx pp mathx qq give valu mathx correspond specif valu mathp mathq use find confid limit probabl valu discret distribut probabl sampl integ valu mathk given mathpk mathsum_k pk cumul distribut lower tail mathpk discret distribut defin math pk sum_i le k pi sum allow rang distribut less equal mathk cumul distribut upper tail discret distribut mathqk defin math qk sum_i k pi give sum probabl valu greater mathk two definit satisfi ident mathpkqk rang distribut mathn inclus mathpn mathqn mathp p mathq p newpag gaussian distribut index gaussian distribut function doubl gsl_ran_gaussian const gsl_rng r doubl sigma function return gaussian random variat mean zero standard deviat datasigma probabl distribut gaussian random variat math px dx sqrt pi sigma exp x sigma dx mathx rang mathinfti mathinfti use transform mathz mu x number return funcgsl_ran_gaussian obtain gaussian distribut mean mathmu function use boxmul algorithm requir two call random number gener datar function doubl gsl_ran_gaussian_pdf doubl x doubl sigma function comput probabl densiti mathpx datax gaussian distribut standard deviat datasigma use formula given imag imagesrandgaussianpng index ziggurat method function doubl gsl_ran_gaussian_ziggurat const gsl_rng r doubl sigma doubl gsl_ran_gaussian_ratio_method const gsl_rng r doubl sigma function comput gaussian random variat use altern marsagliatsang ziggurat kindermanmonahanleva ratio method ziggurat algorithm fastest avail algorithm case function doubl gsl_ran_ugaussian const gsl_rng r doubl gsl_ran_ugaussian_pdf doubl x doubl gsl_ran_ugaussian_ratio_method const gsl_rng r function comput result unit gaussian distribut equival function standard deviat one datasigma function doubl gsl_cdf_gaussian_p doubl x doubl sigma doubl gsl_cdf_gaussian_q doubl x doubl sigma doubl gsl_cdf_gaussian_pinv doubl p doubl sigma doubl gsl_cdf_gaussian_qinv doubl q doubl sigma function comput cumul distribut function mathpx mathqx invers gaussian distribut standard deviat datasigma function doubl gsl_cdf_ugaussian_p doubl x doubl gsl_cdf_ugaussian_q doubl x doubl gsl_cdf_ugaussian_pinv doubl p doubl gsl_cdf_ugaussian_qinv doubl q function comput cumul distribut function mathpx mathqx invers unit gaussian distribut newpag gaussian tail distribut index gaussian tail distribut function doubl gsl_ran_gaussian_tail const gsl_rng r doubl doubl sigma function provid random variat upper tail gaussian distribut standard deviat datasigma valu return larger lower limit dataa must posit method base marsaglia famou rectanglewedgetail algorithm ann math stat aspect explain knuth v rd ed p exercis probabl distribut gaussian tail random variat math px dx nasigma sqrt pi sigma exp x sigma dx mathx mathnasigma normal constant texinfo math nasigma hboxerfclefta sqrt sigmaright texinfo nasigma erfca sqrt sigma function doubl gsl_ran_gaussian_tail_pdf doubl x doubl doubl sigma function comput probabl densiti mathpx datax gaussian tail distribut standard deviat datasigma lower limit dataa use formula given imag imagesrandgaussiantailpng function doubl gsl_ran_ugaussian_tail const gsl_rng r doubl doubl gsl_ran_ugaussian_tail_pdf doubl datax doubl dataa function comput result tail unit gaussian distribut equival function standard deviat one datasigma newpag bivari gaussian distribut index singl bivari gaussian distribut singl two dimension gaussian distribut singl gaussian distribut bivari function void gsl_ran_bivariate_gaussian const gsl_rng r doubl sigma_x doubl sigma_i doubl rho doubl x doubl function gener pair correl gaussian variat mean zero correl coeffici datarho standard deviat datasigma_x datasigma_i mathx mathi direct probabl distribut bivari gaussian random variat texinfo math pxi dx dy pi sigma_x sigma_i sqrtrho exp leftxsigma_x ysigma_i rho x ysigma_xsigma_i rhoright dx dy texinfo pxi dx dy pi sigma_x sigma_i sqrtrho exp xsigma_x ysigma_i rho x ysigma_xsigma_yrho dx dy mathxi rang mathinfti mathinfti correl coeffici datarho lie math math function doubl gsl_ran_bivariate_gaussian_pdf doubl x doubl doubl sigma_x doubl sigma_i doubl rho function comput probabl densiti mathpxi datax datay bivari gaussian distribut standard deviat datasigma_x datasigma_i correl coeffici datarho use formula given imag imagesrandbivariategaussianpng newpag multivari gaussian distribut index singl bivari gaussian distribut singl two dimension gaussian distribut singl gaussian distribut bivari function int gsl_ran_multivariate_gaussian const gsl_rng r const gsl_vector mu const gsl_matrix l gsl_vector result function gener random vector satisfi mathkdimension multivari gaussian distribut mean mathmu variancecovari matrix mathsigma input mathkvector mathmu given datamu choleski factor mathkbymathk matrix mathsigma l lt given lower triangl datal output funcgsl_linalg_cholesky_decomp random vector store dataresult output probabl distribut multivari gaussian random variat texinfo math px_dotsx_k dx_ dot dx_k sqrt pik sigma exp left x mut sigma x muright dx_ dot dx_k texinfo px_x_k dx_ dx_k sqrt pik sigma exp x mut sigma x mu dx_ dx_k function int gsl_ran_multivariate_gaussian_pdf const gsl_vector x const gsl_vector mu const gsl_matrix l doubl result gsl_vector work int gsl_ran_multivariate_gaussian_log_pdf const gsl_vector x const gsl_vector mu const gsl_matrix l doubl result gsl_vector work function comput mathpx mathlogpx point datax use mean vector datamu variancecovari matrix specifi choleski factor datal use formula addit workspac length mathk requir datawork function int gsl_ran_multivariate_gaussian_mean const gsl_matrix x gsl_vector mu_hat given set mathn sampl mathx_j mathkdimension multivari gaussian distribut function comput maximum likelihood estim mean distribut given math hatmu n sum_jn x_j sampl mathx_x_dotsx_n given mathnbymathk matrix datax maximum likelihood estim mean store datamu_hat output function int gsl_ran_multivariate_gaussian_vcov const gsl_matrix x gsl_matrix sigma_hat given set mathn sampl mathx_j mathkdimension multivari gaussian distribut function comput maximum likelihood estim variancecovari matrix distribut given texinfo math hatsigma n sum_jn left x_j hatmu right left x_j hatmu rightt texinfo hatsigma n sum_jn x_j hatmu x_j hatmu sampl mathx_x_dotsx_n given mathnbymathk matrix datax maximum likelihood estim variancecovari matrix store datasigma_hat output newpag exponenti distribut index exponenti distribut function doubl gsl_ran_exponenti const gsl_rng r doubl mu function return random variat exponenti distribut mean datamu distribut math px dx mu expxmu dx mathx ge function doubl gsl_ran_exponential_pdf doubl x doubl mu function comput probabl densiti mathpx datax exponenti distribut mean datamu use formula given imag imagesrandexponentialpng function doubl gsl_cdf_exponential_p doubl x doubl mu doubl gsl_cdf_exponential_q doubl x doubl mu doubl gsl_cdf_exponential_pinv doubl p doubl mu doubl gsl_cdf_exponential_qinv doubl q doubl mu function comput cumul distribut function mathpx mathqx invers exponenti distribut mean datamu newpag laplac distribut index singl twosid exponenti distribut singl laplac distribut function doubl gsl_ran_laplac const gsl_rng r doubl function return random variat laplac distribut width dataa distribut math px dx expxa dx mathinfti x infti function doubl gsl_ran_laplace_pdf doubl x doubl function comput probabl densiti mathpx datax laplac distribut width dataa use formula given imag imagesrandlaplacepng function doubl gsl_cdf_laplace_p doubl x doubl doubl gsl_cdf_laplace_q doubl x doubl doubl gsl_cdf_laplace_pinv doubl p doubl doubl gsl_cdf_laplace_qinv doubl q doubl function comput cumul distribut function mathpx mathqx invers laplac distribut width dataa newpag exponenti power distribut index exponenti power distribut function doubl gsl_ran_exppow const gsl_rng r doubl doubl b function return random variat exponenti power distribut scale paramet dataa expon datab distribut math px dx gammab expxab dx mathx ge mathb reduc laplac distribut mathb form gaussian distribut matha sqrt sigma function doubl gsl_ran_exppow_pdf doubl x doubl doubl b function comput probabl densiti mathpx datax exponenti power distribut scale paramet dataa expon datab use formula given imag imagesrandexppowpng function doubl gsl_cdf_exppow_p doubl x doubl doubl b doubl gsl_cdf_exppow_q doubl x doubl doubl b function comput cumul distribut function mathpx mathqx exponenti power distribut paramet dataa datab newpag cauchi distribut index cauchi distribut function doubl gsl_ran_cauchi const gsl_rng r doubl function return random variat cauchi distribut scale paramet dataa probabl distribut cauchi random variat math px dx api xa dx mathx rang mathinfti mathinfti cauchi distribut also known lorentz distribut function doubl gsl_ran_cauchy_pdf doubl x doubl function comput probabl densiti mathpx datax cauchi distribut scale paramet dataa use formula given imag imagesrandcauchypng function doubl gsl_cdf_cauchy_p doubl x doubl doubl gsl_cdf_cauchy_q doubl x doubl doubl gsl_cdf_cauchy_pinv doubl p doubl doubl gsl_cdf_cauchy_qinv doubl q doubl function comput cumul distribut function mathpx mathqx invers cauchi distribut scale paramet dataa newpag rayleigh distribut index rayleigh distribut function doubl gsl_ran_rayleigh const gsl_rng r doubl sigma function return random variat rayleigh distribut scale paramet datasigma distribut math px dx x sigma exp x sigma dx mathx function doubl gsl_ran_rayleigh_pdf doubl x doubl sigma function comput probabl densiti mathpx datax rayleigh distribut scale paramet datasigma use formula given imag imagesrandrayleighpng function doubl gsl_cdf_rayleigh_p doubl x doubl sigma doubl gsl_cdf_rayleigh_q doubl x doubl sigma doubl gsl_cdf_rayleigh_pinv doubl p doubl sigma doubl gsl_cdf_rayleigh_qinv doubl q doubl sigma function comput cumul distribut function mathpx mathqx invers rayleigh distribut scale paramet datasigma newpag rayleigh tail distribut index rayleigh tail distribut function doubl gsl_ran_rayleigh_tail const gsl_rng r doubl doubl sigma function return random variat tail rayleigh distribut scale paramet datasigma lower limit dataa distribut math px dx x sigma exp x sigma dx mathx function doubl gsl_ran_rayleigh_tail_pdf doubl x doubl doubl sigma function comput probabl densiti mathpx datax rayleigh tail distribut scale paramet datasigma lower limit dataa use formula given imag imagesrandrayleightailpng newpag landau distribut index landau distribut function doubl gsl_ran_landau const gsl_rng r function return random variat landau distribut probabl distribut landau random variat defin analyt complex integr texinfo math px pi int_ciinftyciinfti ds exp log x texinfo px pi int_ciinftyciinfti ds exp log x numer purpos conveni use follow equival form integr math px pi int_infti dt expt logt x sinpi function doubl gsl_ran_landau_pdf doubl x function comput probabl densiti mathpx datax landau distribut use approxim formula given imag imagesrandlandaupng newpag levi alphast distribut index levi distribut function doubl gsl_ran_levi const gsl_rng r doubl c doubl alpha function return random variat levi symmetr stabl distribut scale datac expon dataalpha symmetr stabl probabl distribut defin fourier transform texinfo math px pi int_inftyinfti dt expit x c talpha texinfo px pi int_inftyinfti dt expit x c talpha explicit solut form mathpx librari defin correspond codepdf function mathalpha distribut reduc cauchi distribut mathalpha gaussian distribut mathsigma sqrt c mathalpha tail distribut becom extrem wide algorithm work math alpha le imag imagesrandlevypng newpag levi skew alphast distribut index singl levi distribut skew singl skew levi distribut function doubl gsl_ran_levy_skew const gsl_rng r doubl c doubl alpha doubl beta function return random variat levi skew stabl distribut scale datac expon dataalpha skew paramet databeta skew paramet must lie rang math levi skew stabl probabl distribut defin fourier transform texinfo math px pi int_inftyinfti dt expit x c talpha beta sgnt tanpialpha texinfo px pi int_inftyinfti dt expit x c talpha beta signt tanpi alpha mathalpha term mathtanpi alpha replac mathpilogt explicit solut form mathpx librari defin correspond codepdf function mathalpha distribut reduc gaussian distribut mathsigma sqrt c skew paramet effect mathalpha tail distribut becom extrem wide symmetr distribut correspond mathbeta algorithm work math alpha le levi alphast distribut properti mathn alphast variat drawn distribut mathpc alpha beta sum mathi x_ x_ dot x_n also distribut alphast variat mathpnalpha c alpha beta pdf avail analyt express deftypefun doubl gsl_ran_levy_pdf doubl x doubl mu function comput probabl densiti mathpx datax symmetr levi distribut scale paramet datamu expon dataa use formula given end deftypefun imag imagesrandlevyskewpng newpag gamma distribut index singl gamma distribut singl erlang distribut function doubl gsl_ran_gamma const gsl_rng r doubl doubl b function return random variat gamma distribut distribut function math px dx gammaa ba xa exb dx mathx gamma distribut integ paramet dataa known erlang distribut variat comput use marsagliatsang fast gamma method function method previous call funcgsl_ran_gamma_mt still access use name xmathx xmathi independ gammadistribut random variabl order xmatha xmathb xmathxi gamma distribut order xmathab function doubl gsl_ran_gamma_knuth const gsl_rng r doubl doubl b function return gamma variat use algorithm knuth vol function doubl gsl_ran_gamma_pdf doubl x doubl doubl b function comput probabl densiti mathpx datax gamma distribut paramet dataa datab use formula given imag imagesrandgammapng function doubl gsl_cdf_gamma_p doubl x doubl doubl b doubl gsl_cdf_gamma_q doubl x doubl doubl b doubl gsl_cdf_gamma_pinv doubl p doubl doubl b doubl gsl_cdf_gamma_qinv doubl q doubl doubl b function comput cumul distribut function mathpx mathqx invers gamma distribut paramet dataa datab newpag flat uniform distribut index singl flat distribut singl uniform distribut function doubl gsl_ran_flat const gsl_rng r doubl doubl b function return random variat flat uniform distribut dataa datab distribut math px dx ba dx matha le x b otherwis function doubl gsl_ran_flat_pdf doubl x doubl doubl b function comput probabl densiti mathpx datax uniform distribut dataa datab use formula given imag imagesrandflatpng function doubl gsl_cdf_flat_p doubl x doubl doubl b doubl gsl_cdf_flat_q doubl x doubl doubl b doubl gsl_cdf_flat_pinv doubl p doubl doubl b doubl gsl_cdf_flat_qinv doubl q doubl doubl b function comput cumul distribut function mathpx mathqx invers uniform distribut dataa datab newpag lognorm distribut index lognorm distribut function doubl gsl_ran_lognorm const gsl_rng r doubl zeta doubl sigma function return random variat lognorm distribut distribut function math px dx x sqrt pi sigma explnx zeta sigma dx mathx function doubl gsl_ran_lognormal_pdf doubl x doubl zeta doubl sigma function comput probabl densiti mathpx datax lognorm distribut paramet datazeta datasigma use formula given imag imagesrandlognormalpng function doubl gsl_cdf_lognormal_p doubl x doubl zeta doubl sigma doubl gsl_cdf_lognormal_q doubl x doubl zeta doubl sigma doubl gsl_cdf_lognormal_pinv doubl p doubl zeta doubl sigma doubl gsl_cdf_lognormal_qinv doubl q doubl zeta doubl sigma function comput cumul distribut function mathpx mathqx invers lognorm distribut paramet datazeta datasigma newpag chisquar distribut chisquar distribut aris statist mathy_i mathn independ gaussian random variat unit varianc sumofsquar math x_i sum_i y_i chisquar distribut mathn degre freedom index chisquar distribut function doubl gsl_ran_chisq const gsl_rng r doubl nu function return random variat chisquar distribut datanu degre freedom distribut function math px dx gammanu xnu expx dx mathx ge function doubl gsl_ran_chisq_pdf doubl x doubl nu function comput probabl densiti mathpx datax chisquar distribut datanu degre freedom use formula given imag imagesrandchisqpng function doubl gsl_cdf_chisq_p doubl x doubl nu doubl gsl_cdf_chisq_q doubl x doubl nu doubl gsl_cdf_chisq_pinv doubl p doubl nu doubl gsl_cdf_chisq_qinv doubl q doubl nu function comput cumul distribut function mathpx mathqx invers chisquar distribut datanu degre freedom newpag fdistribut fdistribut aris statist mathy_ mathy_ chisquar deviat mathnu_ mathnu_ degre freedom ratio math x y_ nu_ y_ nu_ fdistribut mathfxnu_nu_ index fdistribut function doubl gsl_ran_fdist const gsl_rng r doubl nu doubl nu function return random variat fdistribut degre freedom datanu datanu distribut function texinfo math px dx gammanu_ nu_ gammanu_ gammanu_ nu_nu_ nu_nu_ xnu_ nu_ nu_ xnu_ nu_ texinfo px dx gammanu_ nu_ gammanu_ gammanu_ nu_nu_ nu_nu_ xnu_ nu_ nu_ xnu_ nu_ mathx ge function doubl gsl_ran_fdist_pdf doubl x doubl nu doubl nu function comput probabl densiti mathpx datax fdistribut datanu datanu degre freedom use formula given imag imagesrandfdistpng function doubl gsl_cdf_fdist_p doubl x doubl nu doubl nu doubl gsl_cdf_fdist_q doubl x doubl nu doubl nu doubl gsl_cdf_fdist_pinv doubl p doubl nu doubl nu doubl gsl_cdf_fdist_qinv doubl q doubl nu doubl nu function comput cumul distribut function mathpx mathqx invers fdistribut datanu datanu degre freedom newpag tdistribut tdistribut aris statist mathy_ normal distribut mathy_ chisquar distribut mathnu degre freedom ratio math x y_ sqrty_ nu tdistribut mathtxnu mathnu degre freedom index singl tdistribut singl student tdistribut function doubl gsl_ran_tdist const gsl_rng r doubl nu function return random variat tdistribut distribut function math px dx gammanu sqrtpi nu gammanu xnunu dx mathinfti x infti function doubl gsl_ran_tdist_pdf doubl x doubl nu function comput probabl densiti mathpx datax tdistribut datanu degre freedom use formula given imag imagesrandtdistpng function doubl gsl_cdf_tdist_p doubl x doubl nu doubl gsl_cdf_tdist_q doubl x doubl nu doubl gsl_cdf_tdist_pinv doubl p doubl nu doubl gsl_cdf_tdist_qinv doubl q doubl nu function comput cumul distribut function mathpx mathqx invers tdistribut datanu degre freedom newpag beta distribut index beta distribut function doubl gsl_ran_beta const gsl_rng r doubl doubl b function return random variat beta distribut distribut function math px dx gammaab gammaa gammab xa xb dx math le x le function doubl gsl_ran_beta_pdf doubl x doubl doubl b function comput probabl densiti mathpx datax beta distribut paramet dataa datab use formula given imag imagesrandbetapng function doubl gsl_cdf_beta_p doubl x doubl doubl b doubl gsl_cdf_beta_q doubl x doubl doubl b doubl gsl_cdf_beta_pinv doubl p doubl doubl b doubl gsl_cdf_beta_qinv doubl q doubl doubl b function comput cumul distribut function mathpx mathqx invers beta distribut paramet dataa datab newpag logist distribut index logist distribut function doubl gsl_ran_logist const gsl_rng r doubl function return random variat logist distribut distribut function math px dx expxa expxa dx mathinfti x infti function doubl gsl_ran_logistic_pdf doubl x doubl function comput probabl densiti mathpx datax logist distribut scale paramet dataa use formula given imag imagesrandlogisticpng function doubl gsl_cdf_logistic_p doubl x doubl doubl gsl_cdf_logistic_q doubl x doubl doubl gsl_cdf_logistic_pinv doubl p doubl doubl gsl_cdf_logistic_qinv doubl q doubl function comput cumul distribut function mathpx mathqx invers logist distribut scale paramet dataa newpag pareto distribut index pareto distribut function doubl gsl_ran_pareto const gsl_rng r doubl doubl b function return random variat pareto distribut order dataa distribut function math px dx ab xba dx mathx ge b function doubl gsl_ran_pareto_pdf doubl x doubl doubl b function comput probabl densiti mathpx datax pareto distribut expon dataa scale datab use formula given imag imagesrandparetopng function doubl gsl_cdf_pareto_p doubl x doubl doubl b doubl gsl_cdf_pareto_q doubl x doubl doubl b doubl gsl_cdf_pareto_pinv doubl p doubl doubl b doubl gsl_cdf_pareto_qinv doubl q doubl doubl b function comput cumul distribut function mathpx mathqx invers pareto distribut expon dataa scale datab newpag spheric vector distribut spheric distribut gener random vector locat spheric surfac use random direct exampl step random walk index singl random direct vector singl direct vector random singl spheric random variat function void gsl_ran_dir_d const gsl_rng r doubl x doubl void gsl_ran_dir_d_trig_method const gsl_rng r doubl x doubl function return random direct vector mathv datax datay two dimens vector normal mathv x obviou way take uniform random number mathpi let datax datay sine cosin respect two trig function would expens old day modern hardwar implement sometim fastest way go case pentium case sun sparcstat one avoid trig evalu choos datax datay interior unit circl choos random interior enclos squar reject outsid unit circl divid mathsqrtx much clever approach attribut von neumann see knuth v rd ed p exercis requir neither trig squar root approach datau datav chosen random interior unit circl mathxuvuv mathyuvuv index singl random direct vector singl direct vector random singl spheric random variat function void gsl_ran_dir_d const gsl_rng r doubl x doubl doubl z function return random direct vector mathv datax datay dataz three dimens vector normal mathv x z method employ due robert e knop cacm explain knuth v rd ed p use surpris fact distribut project along axi actual uniform true dimens index singl ndimension random direct vector singl direct vector random ndimension singl spheric random variat ndimension function void gsl_ran_dir_nd const gsl_rng r size_t n doubl x function return random direct vector mathv x_x_ldotsx_n datan dimens vector normal mathv x_ x_ cdot x_n method use fact multivari gaussian distribut spheric symmetr compon gener gaussian distribut compon normal method describ knuth v rd ed p attribut g w brown modern mathemat engin newpag weibul distribut index weibul distribut function doubl gsl_ran_weibul const gsl_rng r doubl doubl b function return random variat weibul distribut distribut function math px dx b ab xb expxab dx mathx ge function doubl gsl_ran_weibull_pdf doubl x doubl doubl b function comput probabl densiti mathpx datax weibul distribut scale dataa expon datab use formula given imag imagesrandweibullpng function doubl gsl_cdf_weibull_p doubl x doubl doubl b doubl gsl_cdf_weibull_q doubl x doubl doubl b doubl gsl_cdf_weibull_pinv doubl p doubl doubl b doubl gsl_cdf_weibull_qinv doubl q doubl doubl b function comput cumul distribut function mathpx mathqx invers weibul distribut scale dataa expon datab newpag type gumbel distribut index singl gumbel distribut type singl type gumbel distribut random variat function doubl gsl_ran_gumbel const gsl_rng r doubl doubl b function return random variat type gumbel distribut type gumbel distribut function math px dx b expb expax ax dx mathinfti x infti function doubl gsl_ran_gumbel_pdf doubl x doubl doubl b function comput probabl densiti mathpx datax type gumbel distribut paramet dataa datab use formula given imag imagesrandgumbelpng function doubl gsl_cdf_gumbel_p doubl x doubl doubl b doubl gsl_cdf_gumbel_q doubl x doubl doubl b doubl gsl_cdf_gumbel_pinv doubl p doubl doubl b doubl gsl_cdf_gumbel_qinv doubl q doubl doubl b function comput cumul distribut function mathpx mathqx invers type gumbel distribut paramet dataa datab newpag type gumbel distribut index singl gumbel distribut type singl type gumbel distribut function doubl gsl_ran_gumbel const gsl_rng r doubl doubl b function return random variat type gumbel distribut type gumbel distribut function math px dx b xa expb xa dx math x infti function doubl gsl_ran_gumbel_pdf doubl x doubl doubl b function comput probabl densiti mathpx datax type gumbel distribut paramet dataa datab use formula given imag imagesrandgumbelpng function doubl gsl_cdf_gumbel_p doubl x doubl doubl b doubl gsl_cdf_gumbel_q doubl x doubl doubl b doubl gsl_cdf_gumbel_pinv doubl p doubl doubl b doubl gsl_cdf_gumbel_qinv doubl q doubl doubl b function comput cumul distribut function mathpx mathqx invers type gumbel distribut paramet dataa datab newpag dirichlet distribut index dirichlet distribut function void gsl_ran_dirichlet const gsl_rng r size_t k const doubl alpha doubl theta function return array datak random variat dirichlet distribut order datak distribut function texinfo math ptheta_ldotstheta_k dtheta_ cdot dtheta_k z prod_ik theta_ialpha_i delta sum_ik theta_i dtheta_ cdot dtheta_k texinfo ptheta_ theta_k dtheta_ dtheta_k z prod_ik theta_ialpha_i delta sum_ik theta_i dtheta_ dtheta_k maththeta_i ge mathalpha_i delta function ensur mathsum theta_i normal factor mathz math z prod_ik gammaalpha_i gamma sum_ik alpha_i random variat gener sampl datak valu gamma distribut paramet mathaalpha_i b renorm see law wd kelton simul model analysi function doubl gsl_ran_dirichlet_pdf size_t k const doubl alpha const doubl theta function comput probabl densiti mathptheta_ ldot theta_k codethetak dirichlet distribut paramet codealphak use formula given function doubl gsl_ran_dirichlet_lnpdf size_t k const doubl alpha const doubl theta function comput logarithm probabl densiti mathptheta_ ldot theta_k dirichlet distribut paramet codealphak newpag gener discret distribut given mathk discret event differ probabl mathpk produc random valu mathk consist probabl obviou way preprocess probabl list gener cumul probabl array mathk element texinfo math c ck ck pk texinfo c ck ck pk note construct produc mathck choos uniform deviat mathu find valu mathk mathck le u ck although principl requir order mathlog k step per random number gener fast step use someth like mathlfloor uk rfloor start point often pretti well faster method devis idea preprocess probabl list save result form lookup tabl individu call random discret event go rapidli approach invent g marsaglia gener discret random variabl comput comm acm clever reader interest exampl good algorithm design direct short wellwritten paper unfortun larg mathk marsaglia lookup tabl quit larg much better approach due alastair j walker effici method gener discret random variabl gener distribut acm tran mathemat softwar see also knuth v rd ed p requir two lookup tabl one float point one integ size mathk preprocess random number gener time even larg mathk preprocess suggest walker requir mathok effort actual necessari implement provid take mathok effort gener preprocess lead faster gener individu random number diminish return reach pretti earli knuth point optim preprocess combinatori difficult larg mathk method use speed discret random number gener binomi distribut use someth like poisson distribut modif would made sinc take finit set mathk outcom index singl discret random number singl discret random number preprocess type gsl_ran_discrete_t structur contain lookup tabl discret random number gener function gsl_ran_discrete_t gsl_ran_discrete_preproc size_t k const doubl p function return pointer structur contain lookup tabl discret random number gener array datap contain probabl discret event array element must posit neednt add one think gener weightsth preprocessor normal appropri return valu use argument funcgsl_ran_discret function index discret random number function size_t gsl_ran_discret const gsl_rng r const gsl_ran_discrete_t g preprocessor call use function get discret random number index discret random number function doubl gsl_ran_discrete_pdf size_t k const gsl_ran_discrete_t g return probabl mathpk observ variabl datak sinc mathpk store part lookup tabl must recomput comput take mathok datak larg care origin array mathpk use creat lookup tabl keep origin array mathpk around index discret random number function void gsl_ran_discrete_fre gsl_ran_discrete_t g dealloc lookup tabl point datag newpag poisson distribut index poisson random number function unsign int gsl_ran_poisson const gsl_rng r doubl mu function return random integ poisson distribut mean datamu probabl distribut poisson variat math pk muk k expmu mathk ge function doubl gsl_ran_poisson_pdf unsign int k doubl mu function comput probabl mathpk obtain datak poisson distribut mean datamu use formula given imag imagesrandpoissonpng function doubl gsl_cdf_poisson_p unsign int k doubl mu doubl gsl_cdf_poisson_q unsign int k doubl mu function comput cumul distribut function mathpk mathqk poisson distribut paramet datamu newpag bernoulli distribut index singl bernoulli trial random variat function unsign int gsl_ran_bernoulli const gsl_rng r doubl p function return either result bernoulli trial probabl datap probabl distribut bernoulli trial texinfo math p p p p texinfo p p p p function doubl gsl_ran_bernoulli_pdf unsign int k doubl p function comput probabl mathpk obtain datak bernoulli distribut probabl paramet datap use formula given imag imagesrandbernoullipng newpag binomi distribut index binomi random variat function unsign int gsl_ran_binomi const gsl_rng r doubl p unsign int n function return random integ binomi distribut number success datan independ trial probabl datap probabl distribut binomi variat math pk n k nk pk pnk math le k le n function doubl gsl_ran_binomial_pdf unsign int k doubl p unsign int n function comput probabl mathpk obtain datak binomi distribut paramet datap datan use formula given imag imagesrandbinomialpng function doubl gsl_cdf_binomial_p unsign int k doubl p unsign int n doubl gsl_cdf_binomial_q unsign int k doubl p unsign int n function comput cumul distribut function mathpk mathqk binomi distribut paramet datap datan newpag multinomi distribut index multinomi distribut function void gsl_ran_multinomi const gsl_rng r size_t k unsign int n const doubl p unsign int n function comput random sampl datan multinomi distribut form datan trial underli distribut datapk distribut function datan texinfo math pn_ n_cdot n_k novern_ n_ cdot n_k p_n_ p_n_ cdot p_kn_k texinfo pn_ n_ n_k nn_ n_ n_k p_n_ p_n_ p_kn_k mathn_ n_ ldot n_k nonneg integ mathsum_kk n_k n mathp_ p_ ldot p_k probabl distribut mathsum p_i array codepk normal entri treat weight normal appropri array datan datap must length datak random variat gener use condit binomi method see cs davi comput gener multinomi random variat comp stat data anal detail function doubl gsl_ran_multinomial_pdf size_t k const doubl p const unsign int n function comput probabl mathpn_ n_ ldot n_k sampl codenk multinomi distribut paramet codepk use formula given function doubl gsl_ran_multinomial_lnpdf size_t k const doubl p const unsign int n function return logarithm probabl multinomi distribut mathpn_ n_ ldot n_k paramet codepk newpag neg binomi distribut index singl neg binomi distribut random variat function unsign int gsl_ran_negative_binomi const gsl_rng r doubl p doubl n function return random integ neg binomi distribut number failur occur datan success independ trial probabl datap success probabl distribut neg binomi variat math pk gamman k gammak gamman pn pk note mathn requir integ function doubl gsl_ran_negative_binomial_pdf unsign int k doubl p doubl n function comput probabl mathpk obtain datak neg binomi distribut paramet datap datan use formula given imag imagesrandnbinomialpng function doubl gsl_cdf_negative_binomial_p unsign int k doubl p doubl n doubl gsl_cdf_negative_binomial_q unsign int k doubl p doubl n function comput cumul distribut function mathpk mathqk neg binomi distribut paramet datap datan newpag pascal distribut function unsign int gsl_ran_pasc const gsl_rng r doubl p unsign int n function return random integ pascal distribut pascal distribut simpli neg binomi distribut integ valu mathn math pk n k k n pn pk mathk ge function doubl gsl_ran_pascal_pdf unsign int k doubl p unsign int n function comput probabl mathpk obtain datak pascal distribut paramet datap datan use formula given imag imagesrandpascalpng function doubl gsl_cdf_pascal_p unsign int k doubl p unsign int n doubl gsl_cdf_pascal_q unsign int k doubl p unsign int n function comput cumul distribut function mathpk mathqk pascal distribut paramet datap datan newpag geometr distribut index geometr random variat function unsign int gsl_ran_geometr const gsl_rng r doubl p function return random integ geometr distribut number independ trial probabl datap first success probabl distribut geometr variat math pk p pk mathk ge note distribut begin mathk definit anoth convent expon mathk replac mathk function doubl gsl_ran_geometric_pdf unsign int k doubl p function comput probabl mathpk obtain datak geometr distribut probabl paramet datap use formula given imag imagesrandgeometricpng function doubl gsl_cdf_geometric_p unsign int k doubl p doubl gsl_cdf_geometric_q unsign int k doubl p function comput cumul distribut function mathpk mathqk geometr distribut paramet datap newpag hypergeometr distribut index singl hypergeometr random variat singl geometr random variat function unsign int gsl_ran_hypergeometr const gsl_rng r unsign int n unsign int n unsign int function return random integ hypergeometr distribut probabl distribut hypergeometr random variat math pk cn_ k cn_ k cn_ n_ mathcab abab matht leq n_ n_ domain mathk mathmax n_ ldot mint n_ popul contain mathn_ element type mathn_ element type hypergeometr distribut give probabl obtain mathk element type matht sampl popul without replac function doubl gsl_ran_hypergeometric_pdf unsign int k unsign int n unsign int n unsign int function comput probabl mathpk obtain datak hypergeometr distribut paramet datan datan datat use formula given imag imagesrandhypergeometricpng function doubl gsl_cdf_hypergeometric_p unsign int k unsign int n unsign int n unsign int doubl gsl_cdf_hypergeometric_q unsign int k unsign int n unsign int n unsign int function comput cumul distribut function mathpk mathqk hypergeometr distribut paramet datan datan datat newpag index logarithm random variat logarithm distribut function unsign int gsl_ran_logarithm const gsl_rng r doubl p function return random integ logarithm distribut probabl distribut logarithm random variat texinfo math pk logp left pk k right texinfo pk logp pk k mathk ge function doubl gsl_ran_logarithmic_pdf unsign int k doubl p function comput probabl mathpk obtain datak logarithm distribut probabl paramet datap use formula given imag imagesrandlogarithmicpng newpag index wishart random variat wishart distribut function int gsl_ran_wishart const gsl_rng r const doubl n const gsl_matrix l gsl_matrix result gsl_matrix work function comput random symmetr mathpbymathp matrix wishart distribut probabl distribut wishart random variat texinfo math px fracxnp etextrmtrleft v xrightfracnp left v rightn gamma_pfracn texinfo math px fracxnp etr v xnp vn gamma_pn mathn p number degre freedom mathv symmetr posit definit mathpbymathp scale matrix whose choleski factor specifi datal datawork mathpbymathp workspac mathpbymathp wishart distribut matrix mathx store dataresult output function int gsl_ran_wishart_pdf const gsl_matrix x const gsl_matrix l_x const doubl n const gsl_matrix l doubl result gsl_matrix work int gsl_ran_wishart_log_pdf const gsl_matrix x const gsl_matrix l_x const doubl n const gsl_matrix l doubl result gsl_matrix work function comput mathpx mathlogpx mathpbymathp matrix datax whose choleski factor specifi datal_x degre freedom given datan choleski factor scale matrix mathv specifi datal datawork mathpbymathp workspac probabl densiti valu return dataresult newpag shuffl sampl follow function allow shuffl sampl set object algorithm reli random number gener sourc random poor qualiti gener lead correl output particular import avoid gener short period inform see knuth v rd ed section random sampl shuffl function void gsl_ran_shuffl const gsl_rng r void base size_t n size_t size function randomli shuffl order datan object size datas store array codebasen output random number gener datar use produc permut algorithm gener possibl mathn permut equal probabl assum perfect sourc random number follow code show shuffl number int ai gsl_ran_shuffl r sizeof int function int gsl_ran_choos const gsl_rng r void dest size_t k void src size_t n size_t size function fill array codedestk datak object taken randomli datan element array codesrcn object size datas output random number gener datar use make select algorithm ensur possibl sampl equal like assum perfect sourc random object sampl without replac thu object appear datadest requir datak less equal datan object datadest rel order datasrc need call codegsl_ran_shuffl dest n size want random order follow code show select random sampl three uniqu number set doubl b bi doubl gsl_ran_choos r b sizeof doubl function void gsl_ran_sampl const gsl_rng r void dest size_t k void src size_t n size_t size function like funcgsl_ran_choos sampl datak item origin array datan item datasrc replac object appear output sequenc datadest requir datak less datan case exampl follow program demonstr use random number gener produc variat distribut print sampl poisson distribut mean includ examplesrandpoissonc code librari header file instal fileusrloc default locat program compil option gcc wall democ lgsl lgslcbla lm output program includ examplesrandpoissontxt code variat depend seed use gener seed default gener type typegsl_rng_default chang macrogsl_rng_se environ variabl produc differ stream variat gsl_rng_seed aout give output includ examplesrandpoissontxt code follow program gener random walk two dimens includ examplesrandwalkc code numreffig_randwalk show output program _fig_randwalk figur imagesrandomwalkpng scale four step random walk origin follow program comput upper lower cumul distribut function standard normal distribut mathx includ examplescdfc code output program includ examplescdftxt code refer read encyclopaed coverag subject reader advis consult book nonuniform random variat gener luc devroy cover everi imagin distribut provid hundr algorithm luc devroy nonuniform random variat gener springerverlag isbn avail onlin httpcgscscarletoncalucrnbookindexhtml subject random variat gener also review knuth describ algorithm major distribut donald e knuth art comput program seminumer algorithm vol rd ed addisonwesley isbn particl data group provid short review techniqu gener distribut random number mont carlo section annual review particl physic review particl properti rm barnett et al physic review httppdglblgov review particl physic avail onlin postscript pdf format overview method use comput cumul distribut function found statist comput wj kennedi je gentl anoth gener refer element statist comput ra thist william e kennedi jame e gentl statist comput marcel dekker isbn ronald thist element statist comput chapman hall isbn cumul distribut function gaussian distribut base follow paper ration chebyshev approxim use linear equat wj codi w fraser jf hart numerisch mathematik ration chebyshev approxim error function wj codi mathemat comput n juli index dawson function dawson integr defin math expx int_x dt expt tabl dawson integr found abramowitz stegun tabl dawson function declar header file filegsl_sf_dawsonh function doubl gsl_sf_dawson doubl x int gsl_sf_dawson_ doubl x gsl_sf_result result routin comput valu dawson integr datax except return valu gsl_eundrflw index singl discret hankel transform singl hankel transform discret singl transform hankel discret hankel transform chapter describ function perform discret hankel transform dht function declar header file filegsl_dhth definit discret hankel transform act vector sampl data sampl assum taken point relat zero bessel function fix order compar case discret fourier transform sampl taken point relat zero sine cosin function start definit hankel transform bessel transform order mathnu function mathf mathnu defin see johnson lemoin math f_nuu int_infti ft j_nuu dt integr exist mathf_nu call hankel transform mathf revers transform given math ft int_infti f_nuu j_nuu u du mathint_infti ft dt must exist absolut converg mathft satisfi dirichlet condit limit total fluctuat interv mathinfti discret hankel transform work discret function mathf sampl point mathnm locat posit matht_nj_nunj_num x real space mathu_nj_nunx reciproc space mathj_num mth zero bessel function mathj_nux arrang ascend order moreov discret function assum band limit mathft_n mathfu_n mathnm accordingli function mathf defin interv mathx follow work johnson lemoin discret hankel transform given texinfo math f_nuu_m xoverj_num sum_km fleftj_nuk xoverj_numright j_nuj_num j_nuk j_numoverj_nuj_nuk texinfo f_nuu_m x j_num sum_km fj_nuk xj_num j_nuj_num j_nuk j_num j_nuj_nuk discret express defin discret hankel transform calcul gsl gsl forward backward transform defin equal calcul mathf_nuu_m follow johnson backward transform read texinfo math ft_k overx sum_mm fleftj_numoverxright j_nuj_num j_nuk j_numoverj_nuj_num texinfo ft_k x sum_mm fj_numx j_nuj_num j_nuk j_num j_nuj_num obvious use forward transform instead backward transform give addit factor mathxj_numt_mu_m kernel summat defin matrix mathnuhankel transform size mathm coeffici matrix depend mathnu mathm must precomput store typegsl_dht object encapsul data alloc function funcgsl_dht_alloc return typegsl_dht object must properli initi funcgsl_dht_init use perform transform data sampl vector fix mathnu mathm use funcgsl_dht_appli function implement allow defin length mathx fundament interv conveni discret hankel transform often defin unit interv instead mathx notic assumpt mathft vanish endpoint interv consist invers formula sampl formula given therefor transform correspond orthogon expans eigenfunct dirichlet problem bessel differenti equat function type gsl_dht workspac comput discret hankel transform function gsl_dht gsl_dht_alloc size_t size function alloc discret hankel transform object size datas function int gsl_dht_init gsl_dht doubl nu doubl xmax function initi transform datat given valu datanu dataxmax function gsl_dht gsl_dht_new size_t size doubl nu doubl xmax function alloc discret hankel transform object size datas initi given valu datanu dataxmax function void gsl_dht_free gsl_dht function free transform datat function int gsl_dht_appli const gsl_dht doubl f_in doubl f_out function appli transform datat array dataf_in whose size equal size transform result store array dataf_out must length appli function output give origin data multipli mathxj_num numer error function doubl gsl_dht_x_sampl const gsl_dht int n function return valu datanth sampl point unit interv mathj_nun j_num x point function mathft assum sampl function doubl gsl_dht_k_sampl const gsl_dht int n function return valu datanth sampl point kspace mathj_nun x refer read algorithm use function describ follow paper h fisk johnson comp phi comm lemoin j chem phi vector matric includ includerst function describ chapter provid simpl vector matrix interfac ordinari c array memori manag array implement use singl underli type known block write function term vector matric pass singl structur contain data dimens argument without need addit function paramet structur compat vector matrix format use bla routin data type function avail standard datatyp version codedoubl prefix codegsl_block codegsl_vector codegsl_matrix similarli version singleprecis codefloat array prefix codegsl_block_float codegsl_vector_float codegsl_matrix_float full list avail type given prefix type gsl_block doubl gsl_block_float float gsl_block_long_doubl long doubl gsl_block_int int gsl_block_uint unsign int gsl_block_long long gsl_block_ulong unsign long gsl_block_short short gsl_block_ushort unsign short gsl_block_char char gsl_block_uchar unsign char gsl_block_complex complex doubl gsl_block_complex_float complex float gsl_block_complex_long_doubl complex long doubl correspond type exist codegsl_vector codegsl_matrix function index block block consist memori alloc codegsl_block structur structur contain two compon size area memori pointer memori codegsl_block structur look like type gsl_block typedef struct size_t size doubl data gsl_block vector matric made slice underli block slice set element form initi offset combin indic stepsiz case matrix stepsiz column index repres rowlength stepsiz vector known stride function alloc dealloc block defin filegsl_blockh block alloc function alloc memori block follow style codemalloc codefre addit also perform error check insuffici memori avail alloc block function call gsl error handler error number macrogsl_enomem addit return null pointer thu use librari error handler abort program isnt necessari check everi codealloc function gsl_block gsl_block_alloc size_t n function alloc memori block datan doubleprecis element return pointer block struct block initi valu element undefin use function funcgsl_block_calloc want ensur element initi zero zeros request valid return nonnul result null pointer return insuffici memori avail creat block function gsl_block gsl_block_calloc size_t n function alloc memori block initi element block zero function void gsl_block_fre gsl_block b function free memori use block datab previous alloc funcgsl_block_alloc funcgsl_block_calloc read write block librari provid function read write block file binari data format text function int gsl_block_fwrit file stream const gsl_block b function write element block datab stream datastream binari format return valu success macrogsl_efail problem write file sinc data written nativ binari format may portabl differ architectur function int gsl_block_fread file stream gsl_block b function read block datab open stream datastream binari format block datab must prealloc correct length sinc function use size datab determin mani byte read return valu success macrogsl_efail problem read file data assum written nativ binari format architectur function int gsl_block_fprintf file stream const gsl_block b const char format function write element block datab linebylin stream datastream use format specifi dataformat one codeg code codef format float point number code integ function return success macrogsl_efail problem write file function int gsl_block_fscanf file stream gsl_block b function read format data stream datastream block datab block datab must prealloc correct length sinc function use size datab determin mani number read function return success macrogsl_efail problem read file exampl program block follow program show alloc block includ examplesblockc code output program includ examplesblocktxt code index singl vector singl stride vector index vector vector defin typegsl_vector structur describ slice block differ vector creat point block vector slice set equallyspac element area memori typegsl_vector structur contain five compon size stride pointer memori element store datadata pointer block own vector datablock ownership flag dataown structur simpl look like type gsl_vector typedef struct size_t size size_t stride doubl data gsl_block block int owner gsl_vector datas simpli number vector element rang valid indic run codes datastrid stepsiz one element next physic memori measur unit appropri datatyp pointer datadata give locat first element vector memori pointer datablock store locat memori block vector element locat vector own block dataown field set one block dealloc vector freed vector point block own anoth object dataown field zero underli block dealloc vector function alloc access vector defin filegsl_vectorh vector alloc function alloc memori vector follow style codemalloc codefre addit also perform error check insuffici memori avail alloc vector function call gsl error handler error number macrogsl_enomem addit return null pointer thu use librari error handler abort program isnt necessari check everi codealloc function gsl_vector gsl_vector_alloc size_t n function creat vector length n return pointer newli initi vector struct new block alloc element vector store datablock compon vector struct block own vector dealloc vector dealloc zeros request valid return nonnul result function gsl_vector gsl_vector_calloc size_t n function alloc memori vector length datan initi element vector zero function void gsl_vector_fre gsl_vector v function free previous alloc vector datav vector creat use funcgsl_vector_alloc block underli vector also dealloc vector creat anoth object memori still own object dealloc index singl vector rangecheck singl rangecheck vector singl bound check extens gcc singl gcc extens rangecheck singl fortran rang check equival gcc access vector element unlik fortran compil c compil usual provid support rang check vector matric f_ function funcgsl_vector_get funcgsl_vector_set perform portabl rang check report error attempt access element outsid allow rang function access element vector matrix defin filegsl_vectorh declar codeextern inlin elimin functioncal overhead must compil program preprocessor macro macrohave_inlin defin use function macro gsl_range_check_off necessari turn rang check complet without modifi sourc file recompil program preprocessor definit macrogsl_range_check_off provid compil support inlin function effect turn rang check replac call codegsl_vector_getvi codevdataivstrid call codegsl_vector_setvix codevdataivstridex thu perform penalti use rang check function rang check turn macro gsl_c_inlin use c compil requir inlin function header file declar codeinlin instead codeextern inlin defin macro macrogsl_c_inlin see refsec_inlinefunct gcc select automat compil c mode codestdc var gsl_check_rang inlin function use call function funcgsl_vector_get funcgsl_vector_set link compil version function librari rang check function control global integ variabl codegsl_check_rang enabl defaultto disabl set codegsl_check_rang zero due functioncal overhead less benefit disabl rang check inlin function function doubl gsl_vector_get const gsl_vector v const size_t function return dataith element vector datav datai lie outsid allow rang codes error handler invok return inlinefn function void gsl_vector_set gsl_vector v const size_t doubl x function set valu dataith element vector datav datax datai lie outsid allow rang codes error handler invok inlinefn function doubl gsl_vector_ptr gsl_vector v size_t const doubl gsl_vector_const_ptr const gsl_vector v size_t function return pointer dataith element vector datav datai lie outsid allow rang codes error handler invok null pointer return inlinefn index singl vector initi singl initi vector initi vector element function void gsl_vector_set_al gsl_vector v doubl x function set element vector datav valu datax function void gsl_vector_set_zero gsl_vector v function set element vector datav zero function int gsl_vector_set_basi gsl_vector v size_t function make basi vector set element vector datav zero except dataith element set one read write vector librari provid function read write vector file binari data format text function int gsl_vector_fwrit file stream const gsl_vector v function write element vector datav stream datastream binari format return valu success macrogsl_efail problem write file sinc data written nativ binari format may portabl differ architectur function int gsl_vector_fread file stream gsl_vector v function read vector datav open stream datastream binari format vector datav must prealloc correct length sinc function use size datav determin mani byte read return valu success macrogsl_efail problem read file data assum written nativ binari format architectur function int gsl_vector_fprintf file stream const gsl_vector v const char format function write element vector datav linebylin stream datastream use format specifi dataformat one codeg code codef format float point number code integ function return success macrogsl_efail problem write file function int gsl_vector_fscanf file stream gsl_vector v function read format data stream datastream vector datav vector datav must prealloc correct length sinc function use size datav determin mani number read function return success macrogsl_efail problem read file vector view addit creat vector slice block also possibl slice vector creat vector view exampl subvector anoth vector describ view two view made provid access even odd element vector type gsl_vector_view gsl_vector_const_view vector view temporari object store stack use oper subset vector element vector view defin constant nonconst vector use separ type preserv const vector view type typegsl_vector_view constant vector view type typegsl_vector_const_view case element view access typegsl_vector use codevector compon view object pointer vector type codegsl_vector codeconst gsl_vector obtain take address compon code oper use pointer import ensur view remain scopeth simplest way alway write pointer codeviewvector never store valu anoth variabl function gsl_vector_view gsl_vector_subvector gsl_vector v size_t offset size_t n gsl_vector_const_view gsl_vector_const_subvector const gsl_vector v size_t offset size_t n function return vector view subvector anoth vector datav start new vector offset dataoffset element start origin vector new vector datan element mathemat dataith element new vector datav given vi vdataoffset ivstrid index datai run coden codedata pointer return vector struct set null combin paramet dataoffset datan overrun end origin vector new vector view block underli origin vector datav block contain element datav own new vector view goe scope origin vector datav block continu exist origin memori dealloc free origin vector cours origin vector dealloc view still use function funcgsl_vector_const_subvector equival funcgsl_vector_subvector use vector declar codeconst function gsl_vector_view gsl_vector_subvector_with_strid gsl_vector v size_t offset size_t stride size_t n gsl_vector_const_view gsl_vector_const_subvector_with_strid const gsl_vector v size_t offset size_t stride size_t n function return vector view subvector anoth vector datav addit stride argument subvector form way funcgsl_vector_subvector new vector datan element stepsiz datastrid one element next origin vector mathemat dataith element new vector datav given vi vdataoffset istridevstrid index datai run coden note subvector view give direct access underli element origin vector exampl follow code zero even element vector datav length coden leav odd element untouch gsl_vector_view v_even gsl_vector_subvector_with_strid v n gsl_vector_set_zero v_evenvector vector view pass subroutin take vector argument directli alloc vector would use codeviewvector exampl follow code comput norm odd element datav use bla routin codednrm gsl_vector_view v_odd gsl_vector_subvector_with_strid v n doubl r gsl_blas_dnrm v_oddvector function funcgsl_vector_const_subvector_with_strid equival funcgsl_vector_subvector_with_strid use vector declar codeconst function gsl_vector_view gsl_vector_complex_r gsl_vector_complex v gsl_vector_const_view gsl_vector_complex_const_r const gsl_vector_complex v function return vector view real part complex vector datav function funcgsl_vector_complex_const_r equival funcgsl_vector_complex_r use vector declar codeconst function gsl_vector_view gsl_vector_complex_imag gsl_vector_complex v gsl_vector_const_view gsl_vector_complex_const_imag const gsl_vector_complex v function return vector view imaginari part complex vector datav function funcgsl_vector_complex_const_imag equival funcgsl_vector_complex_imag use vector declar codeconst function gsl_vector_view gsl_vector_view_array doubl base size_t n gsl_vector_const_view gsl_vector_const_view_array const doubl base size_t n function return vector view array start new vector given databas datan element mathemat dataith element new vector datav given vi basei index datai run coden array contain element datav own new vector view view goe scope origin array continu exist origin memori dealloc free origin pointer databas cours origin array dealloc view still use function funcgsl_vector_const_view_array equival funcgsl_vector_view_array use array declar codeconst function gsl_vector_view gsl_vector_view_array_with_strid doubl base size_t stride size_t n gsl_vector_const_view gsl_vector_const_view_array_with_strid const doubl base size_t stride size_t n function return vector view array databas addit stride argument subvector form way funcgsl_vector_view_array new vector datan element stepsiz datastrid one element next origin array mathemat dataith element new vector datav given vi baseistrid index datai run coden note view give direct access underli element origin array vector view pass subroutin take vector argument directli alloc vector would use codeviewvector function funcgsl_vector_const_view_array_with_strid equival funcgsl_vector_view_array_with_strid use array declar codeconst node modifi subvector view subsect modifi subvector view deftypefun int gsl_vector_view_from_vector gsl_vector v gsl_vector base size_t offset size_t n size_t stride function modifi exist vector view datav form new view vector databas start element dataoffset vector datan element separ stride datastrid exist view datav lost result function end deftypefun deftypefun int gsl_vector_view_from_array gsl_vector v doubl base size_t offset size_t n size_t stride function modifi exist vector view datav form new view array databas start element dataoffset vector datan element separ stride datastrid exist view datav lost result function end deftypefun deftypefun gsl_vector gsl_vector_alloc_from_block gsl_block b size_t offset size_t n size_t stride function creat vector slice exist block datab return pointer newli initi vector struct start vector offset dataoffset element start block vector datan element stepsiz datastrid one element next mathemat dataith element vector given exampl vi bdataoffset istrid end exampl noindent index datai run coden null pointer return combin paramet dataoffset datan datastrid overrun end block insuffici memori avail store vector vector view block datab block own vector vector dealloc block datab continu exist memori dealloc free block cours block dealloc vector still use end deftypefun deftypefun gsl_vector gsl_vector_alloc_from_vector gsl_vector datav size_t offset size_t n size_t stride function creat vector slice anoth vector datav return pointer newli initi vector struct start new vector offset dataoffset element start origin vector new vector datan element stepsiz datastrid one element next origin vector mathemat dataith element new vector datav given exampl vi vdataoffset istridevstrid end exampl noindent index datai run coden null pointer return combin paramet dataoffset datan datastrid overrun end origin vector insuffici memori avail store new vector new vector view block underli origin vector datav block own new vector new vector dealloc origin vector datav block continu exist origin memori dealloc free origin vector cours origin vector dealloc new vector still use end deftypefun copi vector common oper vector addit multipl avail bla part librari see refchap_blassupport howev use small number util function requir full bla code follow function fall categori function int gsl_vector_memcpi gsl_vector dest const gsl_vector src function copi element vector datasrc vector datadest two vector must length function int gsl_vector_swap gsl_vector v gsl_vector w function exchang element vector datav dataw copi two vector must length exchang element follow function use exchang permut element vector function int gsl_vector_swap_el gsl_vector v size_t size_t j function exchang dataith datajth element vector datav inplac function int gsl_vector_revers gsl_vector v function revers order element vector datav vector oper function int gsl_vector_add gsl_vector const gsl_vector b function add element vector datab element vector dataa result matha_i leftarrow a_i b_i store dataa datab remain unchang two vector must length function int gsl_vector_sub gsl_vector const gsl_vector b function subtract element vector datab element vector dataa result matha_i leftarrow a_i b_i store dataa datab remain unchang two vector must length function int gsl_vector_mul gsl_vector const gsl_vector b function multipli element vector dataa element vector datab result matha_i leftarrow a_i b_i store dataa datab remain unchang two vector must length function int gsl_vector_div gsl_vector const gsl_vector b function divid element vector dataa element vector datab result matha_i leftarrow a_i b_i store dataa datab remain unchang two vector must length function int gsl_vector_scal gsl_vector const doubl x function multipli element vector dataa constant factor datax result matha_i leftarrow x a_i store dataa function int gsl_vector_add_const gsl_vector const doubl x function add constant valu datax element vector dataa result matha_i leftarrow a_i x store dataa find maximum minimum element vector follow oper defin real vector function doubl gsl_vector_max const gsl_vector v function return maximum valu vector datav function doubl gsl_vector_min const gsl_vector v function return minimum valu vector datav function void gsl_vector_minmax const gsl_vector v doubl min_out doubl max_out function return minimum maximum valu vector datav store datamin_out datamax_out function size_t gsl_vector_max_index const gsl_vector v function return index maximum valu vector datav sever equal maximum element lowest index return function size_t gsl_vector_min_index const gsl_vector v function return index minimum valu vector datav sever equal minimum element lowest index return function void gsl_vector_minmax_index const gsl_vector v size_t imin size_t imax function return indic minimum maximum valu vector datav store dataimin dataimax sever equal minimum maximum element lowest indic return vector properti follow function defin real complex vector complex vector real imaginari part must satisfi condit function int gsl_vector_isnul const gsl_vector v int gsl_vector_ispo const gsl_vector v int gsl_vector_isneg const gsl_vector v int gsl_vector_isnonneg const gsl_vector v function return element vector datav zero strictli posit strictli neg nonneg respect otherwis function int gsl_vector_equ const gsl_vector u const gsl_vector v function return vector datau datav equal comparison element valu otherwis exampl program vector program show alloc initi read vector use function funcgsl_vector_alloc funcgsl_vector_set funcgsl_vector_get includ examplesvectorc code output program final loop attempt read outsid rang vector codev error trap rangecheck code funcgsl_vector_get aout v_ v_ v_ gsl vector_sourcec error index rang default gsl error handler invok abort core dump next program show write vector file includ examplesvectorwc code run program file filetestdat contain element codev written use format specifi codeg vector could read back use function codegsl_vector_fscanf f v follow includ examplesvectorrc code index singl matric singl physic dimens matric singl trail dimens matric singl lead dimens matric singl order matrix element matric matric defin typegsl_matrix structur describ gener slice block like vector repres set element area memori use two indic instead one type gsl_matrix typegsl_matrix structur contain six compon two dimens matrix physic dimens pointer memori element matrix store datadata pointer block own matrix datablock ownership flag dataown physic dimens determin memori layout differ matrix dimens allow use submatric typegsl_matrix structur simpl look like typedef struct size_t size size_t size size_t tda doubl data gsl_block block int owner gsl_matrix matric store rowmajor order mean row element form contigu block memori standard clanguag order twodimension array note fortran store array columnmajor order number row datas rang valid row indic run codes similarli datas number column rang valid column indic run codes physic row dimens datatda trail dimens specifi size row matrix laid memori exampl follow matrix datas datas datatda physic memori layout matrix begin top left handcorn proce left right along row turn xx xx xx xx xx xx xx xx xx xx xx xx unus memori locat repres codexx pointer datadata give locat first element matrix memori pointer datablock store locat memori block element matrix locat matrix own block dataown field set one block dealloc matrix freed matrix slice block own anoth object dataown field zero underli block freed function alloc access matric defin filegsl_matrixh matrix alloc function alloc memori matrix follow style codemalloc codefre also perform error check insuffici memori avail alloc matrix function call gsl error handler error number macrogsl_enomem addit return null pointer thu use librari error handler abort program isnt necessari check everi codealloc function gsl_matrix gsl_matrix_alloc size_t n size_t n function creat matrix size datan row datan column return pointer newli initi matrix struct new block alloc element matrix store datablock compon matrix struct block own matrix dealloc matrix dealloc request zero datan datan valid return nonnul result function gsl_matrix gsl_matrix_calloc size_t n size_t n function alloc memori matrix size datan row datan column initi element matrix zero function void gsl_matrix_fre gsl_matrix function free previous alloc matrix datam matrix creat use funcgsl_matrix_alloc block underli matrix also dealloc matrix creat anoth object memori still own object dealloc index singl matric rangecheck singl rangecheck matric access matrix element function access element matrix use rang check system vector turn rang check recompil program preprocessor definit macrogsl_range_check_off element matrix store corder second index move continu memori precis element access function codegsl_matrix_getmij codegsl_matrix_setmijx mdatai mtda j datatda physic rowlength matrix function doubl gsl_matrix_get const gsl_matrix const size_t const size_t j function return mathijth element matrix datam datai dataj lie outsid allow rang coden coden error handler invok return inlinefn function void gsl_matrix_set gsl_matrix const size_t const size_t j doubl x function set valu mathijth element matrix datam datax datai dataj lie outsid allow rang coden coden error handler invok inlinefn function doubl gsl_matrix_ptr gsl_matrix size_t size_t j const doubl gsl_matrix_const_ptr const gsl_matrix size_t size_t j function return pointer mathijth element matrix datam datai dataj lie outsid allow rang coden coden error handler invok null pointer return inlinefn index singl matric initi singl initi matric singl ident matrix singl matrix ident singl zero matrix singl matrix zero singl constant matrix singl matrix constant initi matrix element function void gsl_matrix_set_al gsl_matrix doubl x function set element matrix datam valu datax function void gsl_matrix_set_zero gsl_matrix function set element matrix datam zero function void gsl_matrix_set_ident gsl_matrix function set element matrix datam correspond element ident matrix mathmij deltaij ie unit diagon offdiagon element zero appli squar rectangular matric read write matric librari provid function read write matric file binari data format text function int gsl_matrix_fwrit file stream const gsl_matrix function write element matrix datam stream datastream binari format return valu success macrogsl_efail problem write file sinc data written nativ binari format may portabl differ architectur function int gsl_matrix_fread file stream gsl_matrix function read matrix datam open stream datastream binari format matrix datam must prealloc correct dimens sinc function use size datam determin mani byte read return valu success macrogsl_efail problem read file data assum written nativ binari format architectur function int gsl_matrix_fprintf file stream const gsl_matrix const char format function write element matrix datam linebylin stream datastream use format specifi dataformat one codeg code codef format float point number code integ function return success macrogsl_efail problem write file function int gsl_matrix_fscanf file stream gsl_matrix function read format data stream datastream matrix datam matrix datam must prealloc correct dimens sinc function use size datam determin mani number read function return success macrogsl_efail problem read file matrix view type gsl_matrix_view gsl_matrix_const_view matrix view temporari object store stack use oper subset matrix element matrix view defin constant nonconst matric use separ type preserv const matrix view type typegsl_matrix_view constant matrix view type typegsl_matrix_const_view case element view access use codematrix compon view object pointer codegsl_matrix codeconst gsl_matrix obtain take address codematrix compon code oper addit matrix view also possibl creat vector view matrix row column view function gsl_matrix_view gsl_matrix_submatrix gsl_matrix size_t k size_t k size_t n size_t n gsl_matrix_const_view gsl_matrix_const_submatrix const gsl_matrix size_t k size_t k size_t n size_t n function return matrix view submatrix matrix datam upperleft element submatrix element datak datak origin matrix submatrix datan row datan column physic number column memori given datatda unchang mathemat mathijth element new matrix given mij mdatakmtda k imtda j index datai run coden index dataj run coden codedata pointer return matrix struct set null combin paramet datai dataj datan datan datatda overrun end origin matrix new matrix view view block underli exist matrix datam block contain element datam own new matrix view view goe scope origin matrix datam block continu exist origin memori dealloc free origin matrix cours origin matrix dealloc view still use function funcgsl_matrix_const_submatrix equival funcgsl_matrix_submatrix use matric declar codeconst function gsl_matrix_view gsl_matrix_view_array doubl base size_t n size_t n gsl_matrix_const_view gsl_matrix_const_view_array const doubl base size_t n size_t n function return matrix view array databas matrix datan row datan column physic number column memori also given datan mathemat mathijth element new matrix given mij basein j index datai run coden index dataj run coden new matrix view array databas view goe scope origin array databas continu exist origin memori dealloc free origin array cours origin array dealloc view still use function funcgsl_matrix_const_view_array equival funcgsl_matrix_view_array use matric declar codeconst function gsl_matrix_view gsl_matrix_view_array_with_tda doubl base size_t n size_t n size_t tda gsl_matrix_const_view gsl_matrix_const_view_array_with_tda const doubl base size_t n size_t n size_t tda function return matrix view array databas physic number column datatda may differ correspond dimens matrix matrix datan row datan column physic number column memori given datatda mathemat mathijth element new matrix given mij baseitda j index datai run coden index dataj run coden new matrix view array databas view goe scope origin array databas continu exist origin memori dealloc free origin array cours origin array dealloc view still use function funcgsl_matrix_const_view_array_with_tda equival funcgsl_matrix_view_array_with_tda use matric declar codeconst function gsl_matrix_view gsl_matrix_view_vector gsl_vector v size_t n size_t n gsl_matrix_const_view gsl_matrix_const_view_vector const gsl_vector v size_t n size_t n function return matrix view vector datav matrix datan row datan column vector must unit stride physic number column memori also given datan mathemat mathijth element new matrix given mij vdatain j index datai run coden index dataj run coden new matrix view vector datav view goe scope origin vector datav continu exist origin memori dealloc free origin vector cours origin vector dealloc view still use function funcgsl_matrix_const_view_vector equival funcgsl_matrix_view_vector use matric declar codeconst function gsl_matrix_view gsl_matrix_view_vector_with_tda gsl_vector v size_t n size_t n size_t tda gsl_matrix_const_view gsl_matrix_const_view_vector_with_tda const gsl_vector v size_t n size_t n size_t tda function return matrix view vector datav physic number column datatda may differ correspond matrix dimens vector must unit stride matrix datan row datan column physic number column memori given datatda mathemat mathijth element new matrix given mij vdataitda j index datai run coden index dataj run coden new matrix view vector datav view goe scope origin vector datav continu exist origin memori dealloc free origin vector cours origin vector dealloc view still use function funcgsl_matrix_const_view_vector_with_tda equival funcgsl_matrix_view_vector_with_tda use matric declar codeconst node modifi matrix view subsect modifi matrix view deftypefun int gsl_matrix_view_from_matrix gsl_matrix gsl_matrix mm const size_t k const size_t k const size_t n const size_t n function modifi exist matrix view datam form new view matrix datamm start element datak datak matrix view datan row datan column exist view datam lost result function end deftypefun deftypefun int gsl_matrix_view_from_vector gsl_matrix gsl_vector v const size_t offset const size_t n const size_t n function modifi exist matrix view datam form new view vector datav start element dataoffset vector datan row datan column exist view datam lost result function end deftypefun deftypefun int gsl_matrix_view_from_array gsl_matrix doubl base const size_t offset const size_t n const size_t n function modifi exist matrix view datam form new view array databas start element dataoffset matrix datan row datan column exist view datam lost result function end deftypefun deftypefun gsl_matrix gsl_matrix_alloc_from_block gsl_block b size_t offset size_t n size_t n size_t tda function creat matrix slice block datab return pointer newli initi matrix struct start matrix offset dataoffset element start block matrix datan row datan column physic number column memori given datatda mathemat datai datajth element matrix given exampl mij bdataoffset itda j end exampl noindent index datai run coden index dataj run coden null pointer return combin paramet dataoffset datan datan datatda overrun end block insuffici memori avail store matrix matrix view block datab block own matrix matrix dealloc block datab continu exist memori dealloc free block cours block dealloc matrix still use end deftypefun deftypefun gsl_matrix gsl_matrix_alloc_from_matrix gsl_matrix size_t k size_t k size_t n size_t n function creat matrix submatrix matrix datam return pointer newli initi matrix struct upperleft element submatrix element datak datak origin matrix submatrix datan row datan column physic number column memori given datatda unchang mathemat datai datajth element new matrix given exampl mij mdatakmtda k imtda j end exampl noindent index datai run coden index dataj run coden null pointer return combin paramet datak datak datan datan datatda overrun end origin matrix insuffici memori avail store matrix new matrix view block underli exist matrix datam block own new matrix new matrix dealloc origin matrix datam block continu exist origin memori dealloc free origin matrix cours origin matrix dealloc new matrix still use end deftypefun creat row column view gener two way access object refer copi function describ section creat vector view allow access row column matrix refer modifi element view equival modifi matrix sinc vector view matrix point memori block function gsl_vector_view gsl_matrix_row gsl_matrix size_t gsl_vector_const_view gsl_matrix_const_row const gsl_matrix size_t function return vector view dataith row matrix datam codedata pointer new vector set null datai rang function funcgsl_matrix_const_row equival funcgsl_matrix_row use matric declar codeconst function gsl_vector_view gsl_matrix_column gsl_matrix size_t j gsl_vector_const_view gsl_matrix_const_column const gsl_matrix size_t j function return vector view datajth column matrix datam codedata pointer new vector set null dataj rang function funcgsl_matrix_const_column equival funcgsl_matrix_column use matric declar codeconst function gsl_vector_view gsl_matrix_subrow gsl_matrix size_t size_t offset size_t n gsl_vector_const_view gsl_matrix_const_subrow const gsl_matrix size_t size_t offset size_t n function return vector view dataith row matrix datam begin dataoffset element past first column contain datan element codedata pointer new vector set null datai dataoffset datan rang function funcgsl_matrix_const_subrow equival funcgsl_matrix_subrow use matric declar codeconst function gsl_vector_view gsl_matrix_subcolumn gsl_matrix size_t j size_t offset size_t n gsl_vector_const_view gsl_matrix_const_subcolumn const gsl_matrix size_t j size_t offset size_t n function return vector view datajth column matrix datam begin dataoffset element past first row contain datan element codedata pointer new vector set null dataj dataoffset datan rang function funcgsl_matrix_const_subcolumn equival funcgsl_matrix_subcolumn use matric declar codeconst index singl matrix diagon singl diagon matrix function gsl_vector_view gsl_matrix_diagon gsl_matrix gsl_vector_const_view gsl_matrix_const_diagon const gsl_matrix function return vector view diagon matrix datam matrix datam requir squar rectangular matrix length diagon smaller dimens matrix function funcgsl_matrix_const_diagon equival funcgsl_matrix_diagon use matric declar codeconst index singl matrix subdiagon singl subdiagon matrix function gsl_vector_view gsl_matrix_subdiagon gsl_matrix size_t k gsl_vector_const_view gsl_matrix_const_subdiagon const gsl_matrix size_t k function return vector view datakth subdiagon matrix datam matrix datam requir squar diagon matrix correspond mathk function funcgsl_matrix_const_subdiagon equival funcgsl_matrix_subdiagon use matric declar codeconst index singl matrix superdiagon singl superdiagon matrix function gsl_vector_view gsl_matrix_superdiagon gsl_matrix size_t k gsl_vector_const_view gsl_matrix_const_superdiagon const gsl_matrix size_t k function return vector view datakth superdiagon matrix datam matrix datam requir squar diagon matrix correspond mathk function funcgsl_matrix_const_superdiagon equival funcgsl_matrix_superdiagon use matric declar codeconst deftypefun gsl_vector gsl_vector_alloc_row_from_matrix gsl_matrix size_t function alloc new typegsl_vector struct point dataith row matrix datam end deftypefun deftypefun gsl_vector gsl_vector_alloc_col_from_matrix gsl_matrix size_t j function alloc new typegsl_vector struct point datajth column matrix datam end deftypefun copi matric function int gsl_matrix_memcpi gsl_matrix dest const gsl_matrix src function copi element matrix datasrc matrix datadest two matric must size function int gsl_matrix_swap gsl_matrix gsl_matrix function exchang element matric datam datam copi two matric must size copi row column function describ section copi row column matrix vector allow element vector matrix modifi independ note matrix vector point overlap region memori result undefin effect achiev gener use funcgsl_vector_memcpi vector view row column function int gsl_matrix_get_row gsl_vector v const gsl_matrix size_t function copi element dataith row matrix datam vector datav length vector must length row function int gsl_matrix_get_col gsl_vector v const gsl_matrix size_t j function copi element datajth column matrix datam vector datav length vector must length column function int gsl_matrix_set_row gsl_matrix size_t const gsl_vector v function copi element vector datav dataith row matrix datam length vector must length row function int gsl_matrix_set_col gsl_matrix size_t j const gsl_vector v function copi element vector datav datajth column matrix datam length vector must length column exchang row column follow function use exchang row column matrix function int gsl_matrix_swap_row gsl_matrix size_t size_t j function exchang dataith datajth row matrix datam inplac function int gsl_matrix_swap_column gsl_matrix size_t size_t j function exchang dataith datajth column matrix datam inplac function int gsl_matrix_swap_rowcol gsl_matrix size_t size_t j function exchang dataith row datajth column matrix datam inplac matrix must squar oper possibl function int gsl_matrix_transpose_memcpi gsl_matrix dest const gsl_matrix src function make matrix datadest transpos matrix datasrc copi element datasrc datadest function work matric provid dimens matrix datadest match transpos dimens matrix datasrc function int gsl_matrix_transpos gsl_matrix function replac matrix datam transpos copi element matrix inplac matrix must squar oper possibl matrix oper follow oper defin real complex matric function int gsl_matrix_add gsl_matrix const gsl_matrix b function add element matrix datab element matrix dataa result mathaij leftarrow aij bij store dataa datab remain unchang two matric must dimens function int gsl_matrix_sub gsl_matrix const gsl_matrix b function subtract element matrix datab element matrix dataa result mathaij leftarrow aij bij store dataa datab remain unchang two matric must dimens function int gsl_matrix_mul_el gsl_matrix const gsl_matrix b function multipli element matrix dataa element matrix datab result mathaij leftarrow aij bij store dataa datab remain unchang two matric must dimens function int gsl_matrix_div_el gsl_matrix const gsl_matrix b function divid element matrix dataa element matrix datab result mathaij leftarrow aij bij store dataa datab remain unchang two matric must dimens function int gsl_matrix_scal gsl_matrix const doubl x function multipli element matrix dataa constant factor datax result mathaij leftarrow x aij store dataa function int gsl_matrix_add_const gsl_matrix const doubl x function add constant valu datax element matrix dataa result mathaij leftarrow aij x store dataa find maximum minimum element matric follow oper defin real matric function doubl gsl_matrix_max const gsl_matrix function return maximum valu matrix datam function doubl gsl_matrix_min const gsl_matrix function return minimum valu matrix datam function void gsl_matrix_minmax const gsl_matrix doubl min_out doubl max_out function return minimum maximum valu matrix datam store datamin_out datamax_out function void gsl_matrix_max_index const gsl_matrix size_t imax size_t jmax function return indic maximum valu matrix datam store dataimax datajmax sever equal maximum element first element found return search rowmajor order function void gsl_matrix_min_index const gsl_matrix size_t imin size_t jmin function return indic minimum valu matrix datam store dataimin datajmin sever equal minimum element first element found return search rowmajor order function void gsl_matrix_minmax_index const gsl_matrix size_t imin size_t jmin size_t imax size_t jmax function return indic minimum maximum valu matrix datam store dataimin datajmin dataimax datajmax sever equal minimum maximum element first element found return search rowmajor order matrix properti follow function defin real complex matric complex matric real imaginari part must satisfi condit function int gsl_matrix_isnul const gsl_matrix int gsl_matrix_ispo const gsl_matrix int gsl_matrix_isneg const gsl_matrix int gsl_matrix_isnonneg const gsl_matrix function return element matrix datam zero strictli posit strictli neg nonneg respect otherwis test whether matrix positivedefinit use refcholeski decomposit sec_choleskydecomposit function int gsl_matrix_equ const gsl_matrix const gsl_matrix b function return matric dataa datab equal comparison element valu otherwis exampl program matric program show alloc initi read matrix use function funcgsl_matrix_alloc funcgsl_matrix_set funcgsl_matrix_get includ examplesmatrixc code output program final loop attempt read outsid rang matrix codem error trap rangecheck code funcgsl_matrix_get aout gsl matrix_sourcec error first index rang default gsl error handler invok abort core dump next program show write matrix file includ examplesmatrixwc code run program file filetestdat contain element codem written binari format matrix read back use function funcgsl_matrix_fread exactli equal origin matrix follow program demonstr use vector view program comput column norm matrix includ examplesvectorviewc code output program includ examplesvectorviewtxt code result confirm use octav octav gnu octav version octav sin one one co octav sqrtsumm an refer read block vector matrix object gsl follow codevalarray model c descript model found follow refer b stroustrup c program languag rd ed section vector arithmet addisonwesley isbn rubric footnot f rang check avail gnu c compil boundscheck extens part default instal gcc memori access also check valgrind codegcc fmudflap memori protect option index singl w function singl lambert function lambert w function mathwx defin solut equat mathwx expwx x function multipl branch mathx howev two realvalu branch defin mathw_x princip branch mathw mathx mathw_x real branch mathw mathx lambert function declar header file filegsl_sf_lamberth function doubl gsl_sf_lambert_w doubl x int gsl_sf_lambert_w_ doubl x gsl_sf_result result comput princip branch lambert w function mathw_x except gsl_edom gsl_emaxit function doubl gsl_sf_lambert_wm doubl x int gsl_sf_lambert_wm_ doubl x gsl_sf_result result comput secondari realvalu branch lambert w function mathw_x except gsl_edom gsl_emaxit index singl lowlevel cbla singl cbla lowlevel interfac singl bla lowlevel c interfac singl basic linear algebra subroutin bla _chap_cbla gsl cbla librari includ includerst prototyp lowlevel cbla function declar file filegsl_cblash definit function consult document avail netlib refse bla refer read sec_blasrefer level function float cblas_sdsdot const int n const float alpha const float x const int incx const float const int inci function doubl cblas_dsdot const int n const float x const int incx const float const int inci function float cblas_sdot const int n const float x const int incx const float const int inci function doubl cblas_ddot const int n const doubl x const int incx const doubl const int inci function void cblas_cdotu_sub const int n const void x const int incx const void const int inci void dotu function void cblas_cdotc_sub const int n const void x const int incx const void const int inci void dotc function void cblas_zdotu_sub const int n const void x const int incx const void const int inci void dotu function void cblas_zdotc_sub const int n const void x const int incx const void const int inci void dotc function float cblas_snrm const int n const float x const int incx function float cblas_sasum const int n const float x const int incx function doubl cblas_dnrm const int n const doubl x const int incx function doubl cblas_dasum const int n const doubl x const int incx function float cblas_scnrm const int n const void x const int incx function float cblas_scasum const int n const void x const int incx function doubl cblas_dznrm const int n const void x const int incx function doubl cblas_dzasum const int n const void x const int incx function cblas_index cblas_isamax const int n const float x const int incx function cblas_index cblas_idamax const int n const doubl x const int incx function cblas_index cblas_icamax const int n const void x const int incx function cblas_index cblas_izamax const int n const void x const int incx function void cblas_sswap const int n float x const int incx float const int inci function void cblas_scopi const int n const float x const int incx float const int inci function void cblas_saxpi const int n const float alpha const float x const int incx float const int inci function void cblas_dswap const int n doubl x const int incx doubl const int inci function void cblas_dcopi const int n const doubl x const int incx doubl const int inci function void cblas_daxpi const int n const doubl alpha const doubl x const int incx doubl const int inci function void cblas_cswap const int n void x const int incx void const int inci function void cblas_ccopi const int n const void x const int incx void const int inci function void cblas_caxpi const int n const void alpha const void x const int incx void const int inci function void cblas_zswap const int n void x const int incx void const int inci function void cblas_zcopi const int n const void x const int incx void const int inci function void cblas_zaxpi const int n const void alpha const void x const int incx void const int inci function void cblas_srotg float float b float c float function void cblas_srotmg float float float b const float b float p function void cblas_srot const int n float x const int incx float const int inci const float c const float function void cblas_srotm const int n float x const int incx float const int inci const float p function void cblas_drotg doubl doubl b doubl c doubl function void cblas_drotmg doubl doubl doubl b const doubl b doubl p function void cblas_drot const int n doubl x const int incx doubl const int inci const doubl c const doubl function void cblas_drotm const int n doubl x const int incx doubl const int inci const doubl p function void cblas_sscal const int n const float alpha float x const int incx function void cblas_dscal const int n const doubl alpha doubl x const int incx function void cblas_cscal const int n const void alpha void x const int incx function void cblas_zscal const int n const void alpha void x const int incx function void cblas_csscal const int n const float alpha void x const int incx function void cblas_zdscal const int n const doubl alpha void x const int incx level function void cblas_sgemv const enum cblas_ord order const enum cblas_transpos transa const int const int n const float alpha const float const int lda const float x const int incx const float beta float const int inci function void cblas_sgbmv const enum cblas_ord order const enum cblas_transpos transa const int const int n const int kl const int ku const float alpha const float const int lda const float x const int incx const float beta float const int inci function void cblas_strmv const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int n const float const int lda float x const int incx function void cblas_stbmv const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int n const int k const float const int lda float x const int incx function void cblas_stpmv const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int n const float ap float x const int incx function void cblas_strsv const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int n const float const int lda float x const int incx function void cblas_stbsv const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int n const int k const float const int lda float x const int incx function void cblas_stpsv const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int n const float ap float x const int incx function void cblas_dgemv const enum cblas_ord order const enum cblas_transpos transa const int const int n const doubl alpha const doubl const int lda const doubl x const int incx const doubl beta doubl const int inci function void cblas_dgbmv const enum cblas_ord order const enum cblas_transpos transa const int const int n const int kl const int ku const doubl alpha const doubl const int lda const doubl x const int incx const doubl beta doubl const int inci function void cblas_dtrmv const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int n const doubl const int lda doubl x const int incx function void cblas_dtbmv const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int n const int k const doubl const int lda doubl x const int incx function void cblas_dtpmv const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int n const doubl ap doubl x const int incx function void cblas_dtrsv const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int n const doubl const int lda doubl x const int incx function void cblas_dtbsv const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int n const int k const doubl const int lda doubl x const int incx function void cblas_dtpsv const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int n const doubl ap doubl x const int incx function void cblas_cgemv const enum cblas_ord order const enum cblas_transpos transa const int const int n const void alpha const void const int lda const void x const int incx const void beta void const int inci function void cblas_cgbmv const enum cblas_ord order const enum cblas_transpos transa const int const int n const int kl const int ku const void alpha const void const int lda const void x const int incx const void beta void const int inci function void cblas_ctrmv const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int n const void const int lda void x const int incx function void cblas_ctbmv const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int n const int k const void const int lda void x const int incx function void cblas_ctpmv const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int n const void ap void x const int incx function void cblas_ctrsv const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int n const void const int lda void x const int incx function void cblas_ctbsv const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int n const int k const void const int lda void x const int incx function void cblas_ctpsv const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int n const void ap void x const int incx function void cblas_zgemv const enum cblas_ord order const enum cblas_transpos transa const int const int n const void alpha const void const int lda const void x const int incx const void beta void const int inci function void cblas_zgbmv const enum cblas_ord order const enum cblas_transpos transa const int const int n const int kl const int ku const void alpha const void const int lda const void x const int incx const void beta void const int inci function void cblas_ztrmv const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int n const void const int lda void x const int incx function void cblas_ztbmv const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int n const int k const void const int lda void x const int incx function void cblas_ztpmv const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int n const void ap void x const int incx function void cblas_ztrsv const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int n const void const int lda void x const int incx function void cblas_ztbsv const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int n const int k const void const int lda void x const int incx function void cblas_ztpsv const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int n const void ap void x const int incx function void cblas_ssymv const enum cblas_ord order const enum cblas_uplo uplo const int n const float alpha const float const int lda const float x const int incx const float beta float const int inci function void cblas_ssbmv const enum cblas_ord order const enum cblas_uplo uplo const int n const int k const float alpha const float const int lda const float x const int incx const float beta float const int inci function void cblas_sspmv const enum cblas_ord order const enum cblas_uplo uplo const int n const float alpha const float ap const float x const int incx const float beta float const int inci function void cblas_sger const enum cblas_ord order const int const int n const float alpha const float x const int incx const float const int inci float const int lda function void cblas_ssyr const enum cblas_ord order const enum cblas_uplo uplo const int n const float alpha const float x const int incx float const int lda function void cblas_sspr const enum cblas_ord order const enum cblas_uplo uplo const int n const float alpha const float x const int incx float ap function void cblas_ssyr const enum cblas_ord order const enum cblas_uplo uplo const int n const float alpha const float x const int incx const float const int inci float const int lda function void cblas_sspr const enum cblas_ord order const enum cblas_uplo uplo const int n const float alpha const float x const int incx const float const int inci float function void cblas_dsymv const enum cblas_ord order const enum cblas_uplo uplo const int n const doubl alpha const doubl const int lda const doubl x const int incx const doubl beta doubl const int inci function void cblas_dsbmv const enum cblas_ord order const enum cblas_uplo uplo const int n const int k const doubl alpha const doubl const int lda const doubl x const int incx const doubl beta doubl const int inci function void cblas_dspmv const enum cblas_ord order const enum cblas_uplo uplo const int n const doubl alpha const doubl ap const doubl x const int incx const doubl beta doubl const int inci function void cblas_dger const enum cblas_ord order const int const int n const doubl alpha const doubl x const int incx const doubl const int inci doubl const int lda function void cblas_dsyr const enum cblas_ord order const enum cblas_uplo uplo const int n const doubl alpha const doubl x const int incx doubl const int lda function void cblas_dspr const enum cblas_ord order const enum cblas_uplo uplo const int n const doubl alpha const doubl x const int incx doubl ap function void cblas_dsyr const enum cblas_ord order const enum cblas_uplo uplo const int n const doubl alpha const doubl x const int incx const doubl const int inci doubl const int lda function void cblas_dspr const enum cblas_ord order const enum cblas_uplo uplo const int n const doubl alpha const doubl x const int incx const doubl const int inci doubl function void cblas_chemv const enum cblas_ord order const enum cblas_uplo uplo const int n const void alpha const void const int lda const void x const int incx const void beta void const int inci function void cblas_chbmv const enum cblas_ord order const enum cblas_uplo uplo const int n const int k const void alpha const void const int lda const void x const int incx const void beta void const int inci function void cblas_chpmv const enum cblas_ord order const enum cblas_uplo uplo const int n const void alpha const void ap const void x const int incx const void beta void const int inci function void cblas_cgeru const enum cblas_ord order const int const int n const void alpha const void x const int incx const void const int inci void const int lda function void cblas_cgerc const enum cblas_ord order const int const int n const void alpha const void x const int incx const void const int inci void const int lda function void cblas_cher const enum cblas_ord order const enum cblas_uplo uplo const int n const float alpha const void x const int incx void const int lda function void cblas_chpr const enum cblas_ord order const enum cblas_uplo uplo const int n const float alpha const void x const int incx void function void cblas_cher const enum cblas_ord order const enum cblas_uplo uplo const int n const void alpha const void x const int incx const void const int inci void const int lda function void cblas_chpr const enum cblas_ord order const enum cblas_uplo uplo const int n const void alpha const void x const int incx const void const int inci void ap function void cblas_zhemv const enum cblas_ord order const enum cblas_uplo uplo const int n const void alpha const void const int lda const void x const int incx const void beta void const int inci function void cblas_zhbmv const enum cblas_ord order const enum cblas_uplo uplo const int n const int k const void alpha const void const int lda const void x const int incx const void beta void const int inci function void cblas_zhpmv const enum cblas_ord order const enum cblas_uplo uplo const int n const void alpha const void ap const void x const int incx const void beta void const int inci function void cblas_zgeru const enum cblas_ord order const int const int n const void alpha const void x const int incx const void const int inci void const int lda function void cblas_zgerc const enum cblas_ord order const int const int n const void alpha const void x const int incx const void const int inci void const int lda function void cblas_zher const enum cblas_ord order const enum cblas_uplo uplo const int n const doubl alpha const void x const int incx void const int lda function void cblas_zhpr const enum cblas_ord order const enum cblas_uplo uplo const int n const doubl alpha const void x const int incx void function void cblas_zher const enum cblas_ord order const enum cblas_uplo uplo const int n const void alpha const void x const int incx const void const int inci void const int lda function void cblas_zhpr const enum cblas_ord order const enum cblas_uplo uplo const int n const void alpha const void x const int incx const void const int inci void ap level function void cblas_sgemm const enum cblas_ord order const enum cblas_transpos transa const enum cblas_transpos transb const int const int n const int k const float alpha const float const int lda const float b const int ldb const float beta float c const int ldc function void cblas_ssymm const enum cblas_ord order const enum cblas_sid side const enum cblas_uplo uplo const int const int n const float alpha const float const int lda const float b const int ldb const float beta float c const int ldc function void cblas_ssyrk const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos tran const int n const int k const float alpha const float const int lda const float beta float c const int ldc function void cblas_ssyrk const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos tran const int n const int k const float alpha const float const int lda const float b const int ldb const float beta float c const int ldc function void cblas_strmm const enum cblas_ord order const enum cblas_sid side const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int const int n const float alpha const float const int lda float b const int ldb function void cblas_strsm const enum cblas_ord order const enum cblas_sid side const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int const int n const float alpha const float const int lda float b const int ldb function void cblas_dgemm const enum cblas_ord order const enum cblas_transpos transa const enum cblas_transpos transb const int const int n const int k const doubl alpha const doubl const int lda const doubl b const int ldb const doubl beta doubl c const int ldc function void cblas_dsymm const enum cblas_ord order const enum cblas_sid side const enum cblas_uplo uplo const int const int n const doubl alpha const doubl const int lda const doubl b const int ldb const doubl beta doubl c const int ldc function void cblas_dsyrk const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos tran const int n const int k const doubl alpha const doubl const int lda const doubl beta doubl c const int ldc function void cblas_dsyrk const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos tran const int n const int k const doubl alpha const doubl const int lda const doubl b const int ldb const doubl beta doubl c const int ldc function void cblas_dtrmm const enum cblas_ord order const enum cblas_sid side const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int const int n const doubl alpha const doubl const int lda doubl b const int ldb function void cblas_dtrsm const enum cblas_ord order const enum cblas_sid side const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int const int n const doubl alpha const doubl const int lda doubl b const int ldb function void cblas_cgemm const enum cblas_ord order const enum cblas_transpos transa const enum cblas_transpos transb const int const int n const int k const void alpha const void const int lda const void b const int ldb const void beta void c const int ldc function void cblas_csymm const enum cblas_ord order const enum cblas_sid side const enum cblas_uplo uplo const int const int n const void alpha const void const int lda const void b const int ldb const void beta void c const int ldc function void cblas_csyrk const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos tran const int n const int k const void alpha const void const int lda const void beta void c const int ldc function void cblas_csyrk const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos tran const int n const int k const void alpha const void const int lda const void b const int ldb const void beta void c const int ldc function void cblas_ctrmm const enum cblas_ord order const enum cblas_sid side const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int const int n const void alpha const void const int lda void b const int ldb function void cblas_ctrsm const enum cblas_ord order const enum cblas_sid side const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int const int n const void alpha const void const int lda void b const int ldb function void cblas_zgemm const enum cblas_ord order const enum cblas_transpos transa const enum cblas_transpos transb const int const int n const int k const void alpha const void const int lda const void b const int ldb const void beta void c const int ldc function void cblas_zsymm const enum cblas_ord order const enum cblas_sid side const enum cblas_uplo uplo const int const int n const void alpha const void const int lda const void b const int ldb const void beta void c const int ldc function void cblas_zsyrk const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos tran const int n const int k const void alpha const void const int lda const void beta void c const int ldc function void cblas_zsyrk const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos tran const int n const int k const void alpha const void const int lda const void b const int ldb const void beta void c const int ldc function void cblas_ztrmm const enum cblas_ord order const enum cblas_sid side const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int const int n const void alpha const void const int lda void b const int ldb function void cblas_ztrsm const enum cblas_ord order const enum cblas_sid side const enum cblas_uplo uplo const enum cblas_transpos transa const enum cblas_diag diag const int const int n const void alpha const void const int lda void b const int ldb function void cblas_chemm const enum cblas_ord order const enum cblas_sid side const enum cblas_uplo uplo const int const int n const void alpha const void const int lda const void b const int ldb const void beta void c const int ldc function void cblas_cherk const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos tran const int n const int k const float alpha const void const int lda const float beta void c const int ldc function void cblas_cherk const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos tran const int n const int k const void alpha const void const int lda const void b const int ldb const float beta void c const int ldc function void cblas_zhemm const enum cblas_ord order const enum cblas_sid side const enum cblas_uplo uplo const int const int n const void alpha const void const int lda const void b const int ldb const void beta void c const int ldc function void cblas_zherk const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos tran const int n const int k const doubl alpha const void const int lda const doubl beta void c const int ldc function void cblas_zherk const enum cblas_ord order const enum cblas_uplo uplo const enum cblas_transpos tran const int n const int k const void alpha const void const int lda const void b const int ldb const doubl beta void c const int ldc function void cblas_xerbla int p const char rout const char form exampl follow program comput product two matric use level bla function sgemm texinfo math left beginarrayccc endarray right left beginarraycc endarray right left beginarraycc endarray right texinfo matric store row major order could store column major order first argument call funccblas_sgemm chang codecblascolmajor includ examplescblasc code compil program use follow command line gcc wall democ lgslcbla need link main librari codelgsl case cbla librari independ unit output program includ examplescblastxt code index logarithm relat function inform properti logarithm function found abramowitz stegun chapter function describ section declar header file filegsl_sf_logh function doubl gsl_sf_log doubl x int gsl_sf_log_ doubl x gsl_sf_result result routin comput logarithm datax mathlogx mathx except return valu gsl_edom function doubl gsl_sf_log_ab doubl x int gsl_sf_log_abs_ doubl x gsl_sf_result result routin comput logarithm magnitud datax mathlogx mathx ne except return valu gsl_edom function int gsl_sf_complex_log_ doubl zr doubl zi gsl_sf_result lnr gsl_sf_result theta routin comput complex logarithm mathz z_r z_i result return datalnr datatheta mathexplnr theta z_r z_i maththeta lie rang mathpipi except return valu gsl_edom function doubl gsl_sf_log_plusx doubl x int gsl_sf_log_plusx_ doubl x gsl_sf_result result routin comput mathlog x mathx use algorithm accur small datax domain x except return valu gsl_edom function doubl gsl_sf_log_plusx_mx doubl x int gsl_sf_log_plusx_mx_ doubl x gsl_sf_result result routin comput mathlog x x mathx use algorithm accur small datax domain x except return valu gsl_edom index singl dwt see wavelet transform singl wavelet transform singl transform wavelet wavelet transform chapter describ function perform discret wavelet transform dwt librari includ wavelet real data one two dimens wavelet function declar header file filegsl_waveleth filegsl_waveletdh index singl dwt mathemat definit definit continu wavelet transform invers defin relat math ws tau int_inftyinfti ft psi_staut dt math ft int_infti ds int_inftyinfti ws tau psi_staut dtau basi function mathpsi_stau obtain scale translat singl function refer mother wavelet discret version wavelet transform act equallyspac sampl fix scale translat step math mathtau frequenc time axe sampl dyadic scale mathj level paramet mathj wavelet mathpsi express term scale function mathvarphi tex beforedisplay psijt sum_kj g_jk barvarphij tk afterdisplay end tex ifinfo exampl psijt sum_kj g_jk barvarphij tk end exampl end ifinfo noindent tex beforedisplay varphijt sum_kj h_jk barvarphij tk afterdisplay end tex ifinfo exampl varphijt sum_kj h_jk barvarphij tk end exampl end ifinfo noindent function mathpsi mathvarphi relat coeffici cg_n n h_ln mathg_n n h_ln cn dot l mathn l mathl total number coeffici two set coeffici mathh_j mathg_i defin scale function wavelet result famili function mathpsi_jn constitut orthonorm basi squareintegr signal discret wavelet transform mathon algorithm also refer fast wavelet transform index dwt initi initi type gsl_wavelet structur contain filter coeffici defin wavelet associ offset paramet function gsl_wavelet gsl_wavelet_alloc const gsl_wavelet_typ size_t k function alloc initi wavelet object type datat paramet datak select specif member wavelet famili null pointer return insuffici memori avail unsupport member select follow wavelet type implement type gsl_wavelet_typ index singl daubechi wavelet singl maxim phase daubechi wavelet var gsl_wavelet_daubechi gsl_wavelet_daubechies_cent daubechi wavelet famili maximum phase mathk vanish moment implement wavelet mathk dot datak even index haar wavelet var gsl_wavelet_haar gsl_wavelet_haar_cent haar wavelet valid choic mathk haar wavelet mathk index singl biorthogon wavelet singl bspline wavelet var gsl_wavelet_bsplin gsl_wavelet_bspline_cent biorthogon bspline wavelet famili order mathij implement valu mathk j center form wavelet align coeffici variou subband edg thu result visual coeffici wavelet transform phase plane easier understand function const char gsl_wavelet_nam const gsl_wavelet w function return pointer name wavelet famili dataw deftypefun void gsl_wavelet_print const gsl_wavelet w function print filter coeffici codeh codeg codeh codeg wavelet object dataw end deftypefun function void gsl_wavelet_fre gsl_wavelet w function free wavelet object dataw type gsl_wavelet_workspac structur contain scratch space size input data use hold intermedi result transform function gsl_wavelet_workspac gsl_wavelet_workspace_alloc size_t n function alloc workspac discret wavelet transform perform onedimension transform datan element workspac size datan must provid twodimension transform datanbydatan matric suffici alloc workspac size datan sinc transform oper individu row column null pointer return insuffici memori avail function void gsl_wavelet_workspace_fre gsl_wavelet_workspac work function free alloc workspac datawork transform function section describ actual function perform discret wavelet transform note transform use period boundari condit signal period sampl length spuriou coeffici appear begin end level transform index singl dwt one dimension wavelet transform one dimens function int gsl_wavelet_transform const gsl_wavelet w doubl data size_t stride size_t n gsl_wavelet_direct dir gsl_wavelet_workspac work int gsl_wavelet_transform_forward const gsl_wavelet w doubl data size_t stride size_t n gsl_wavelet_workspac work int gsl_wavelet_transform_invers const gsl_wavelet w doubl data size_t stride size_t n gsl_wavelet_workspac work function comput inplac forward invers discret wavelet transform length datan stride datastrid array datadata length transform datan restrict power two codetransform version function argument datadir either codeforward math codebackward math workspac datawork length datan must provid forward transform element origin array replac discret wavelet transform mathf_i rightarrow w_jk pack triangular storag layout dataj index level mathj dot j datak index coeffici within level mathk dot j total number level mathj log_n output data follow form math s_ d_ d_ d_ d_cdot d_jkcdot d_jj first element smooth coeffici maths_ follow detail coeffici mathd_jk level mathj backward transform invert coeffici obtain origin data function return statu macrogsl_success upon success complet macrogsl_einv return datan integ power insuffici workspac provid index singl dwt two dimension wavelet transform two dimens librari provid function perform twodimension discret wavelet transform squar matric matrix dimens must integ power two two possibl order row column twodimension wavelet transform refer standard nonstandard form standard transform perform complet discret wavelet transform row matrix follow separ complet discret wavelet transform column result rowtransform matrix procedur use order twodimension fourier transform nonstandard transform perform interleav pass row column matrix level transform first level transform appli matrix row matrix column procedur repeat across row column data subsequ level transform full discret wavelet transform complet nonstandard form discret wavelet transform typic use imag analysi function describ section declar header file filegsl_waveletdh function int gsl_waveletd_transform const gsl_wavelet w doubl data size_t tda size_t size size_t size gsl_wavelet_direct dir gsl_wavelet_workspac work int gsl_waveletd_transform_forward const gsl_wavelet w doubl data size_t tda size_t size size_t size gsl_wavelet_workspac work int gsl_waveletd_transform_invers const gsl_wavelet w doubl data size_t tda size_t size size_t size gsl_wavelet_workspac work function comput twodimension inplac forward invers discret wavelet transform standard form array datadata store rowmajor form dimens datas datas physic row length datatda dimens must equal squar matrix restrict power two codetransform version function argument datadir either codeforward math codebackward math workspac datawork appropri size must provid exit appropri element array datadata replac twodimension wavelet transform function return statu macrogsl_success upon success complet macrogsl_einv return datas datas equal integ power insuffici workspac provid function int gsl_waveletd_transform_matrix const gsl_wavelet w gsl_matrix gsl_wavelet_direct dir gsl_wavelet_workspac work int gsl_waveletd_transform_matrix_forward const gsl_wavelet w gsl_matrix gsl_wavelet_workspac work int gsl_waveletd_transform_matrix_invers const gsl_wavelet w gsl_matrix gsl_wavelet_workspac work function comput twodimension inplac wavelet transform matrix datam function int gsl_waveletd_nstransform const gsl_wavelet w doubl data size_t tda size_t size size_t size gsl_wavelet_direct dir gsl_wavelet_workspac work int gsl_waveletd_nstransform_forward const gsl_wavelet w doubl data size_t tda size_t size size_t size gsl_wavelet_workspac work int gsl_waveletd_nstransform_invers const gsl_wavelet w doubl data size_t tda size_t size size_t size gsl_wavelet_workspac work function comput twodimension wavelet transform nonstandard form function int gsl_waveletd_nstransform_matrix const gsl_wavelet w gsl_matrix gsl_wavelet_direct dir gsl_wavelet_workspac work int gsl_waveletd_nstransform_matrix_forward const gsl_wavelet w gsl_matrix gsl_wavelet_workspac work int gsl_waveletd_nstransform_matrix_invers const gsl_wavelet w gsl_matrix gsl_wavelet_workspac work function comput nonstandard form twodimension inplac wavelet transform matrix datam exampl follow program demonstr use onedimension wavelet transform function comput approxim input signal length use largest compon wavelet transform set other zero includ examplesdwtc code output use gnu plotutil codegraph program aout ecgdat dwttxt graph ps x h dwttxt dwtp numreffig_dwt show origin compress version sampl ecg record mitbih arrhythmia databas part physionet archiv publicdomain medic dataset _fig_dwt figur imagesdwtpng scale origin upper waveletcompress lower ecg signal use largest compon daubechi discret wavelet transform refer read mathemat background wavelet transform cover origin lectur daubechi ingrid daubechi ten lectur wavelet cbmsnsf region confer seri appli mathemat siam isbn easi read introduct subject emphasi applic wavelet transform variou branch scienc paul addison illustr wavelet transform handbook institut physic publish isbn extens coverag signal analysi wavelet wavelet packet local cosin base see g mallat wavelet tour signal process second edit academ press isbn x concept multiresolut analysi underli wavelet transform describ g mallat multiresolut approxim wavelet orthonorm base lr transact american mathemat societi g mallat theori multiresolut signal decompositionth wavelet represent ieee transact pattern analysi machin intellig coeffici individu wavelet famili implement librari found follow paper daubechi orthonorm base compactli support wavelet commun pure appli mathemat cohen daubechi jc feauveau biorthogon base compactli support wavelet commun pure appli mathemat physionet archiv physiolog dataset found onlin httpwwwphysionetorg describ follow paper goldberg et al physiobank physiotoolkit physionet compon new research resourc complex physiolog signal circul ee index singl root find singl zero find singl find root singl find zero singl root singl solv nonlinear equat singl nonlinear equat solut one dimension rootfind chapter describ routin find root arbitrari onedimension function librari provid low level compon varieti iter solver converg test combin user achiev desir solut full access intermedi step iter class method use framework switch solver runtim without need recompil program instanc solver keep track state allow solver use multithread program header file filegsl_rootsh contain prototyp root find function relat declar index singl root find overview overview onedimension root find algorithm divid two class root bracket root polish algorithm proceed bracket root guarante converg bracket algorithm begin bound region known contain root size bound region reduc iter enclos root desir toler provid rigor error estim locat root techniqu root polish attempt improv initi guess root algorithm converg start close enough root sacrific rigor error bound speed approxim behavior function vicin root attempt find higher order improv initi guess behavior function compat algorithm good initi guess avail polish algorithm provid rapid converg gsl type algorithm avail similar framework user provid highlevel driver algorithm librari provid individu function necessari step three main phase iter step initi solver state data algorithm datat updat data use iter datat test data converg repeat iter necessari state bracket solver held typegsl_root_fsolv struct updat procedur use function evalu deriv state root polish solver held typegsl_root_fdfsolv struct updat requir function deriv henc name codefdf suppli user index singl root find caveat caveat note root find function search one root time sever root search area first root found return howev difficult predict root case error report tri find root area one care must taken function may multipl root mathfx xx_ mathfx xx_ possibl use rootbracket algorithm evenmultipl root algorithm initi interv must contain zerocross function neg one end interv posit end root evenmultipl cross zero touch instantan algorithm base root bracket still work oddmultipl root eg cubic quintic root polish algorithm gener work higher multipl root reduc rate converg case steffenson algorithm use acceler converg multipl root absolut requir mathf root within search region numer root find function use haphazardli check exist root better way easi creat situat numer root finder fail bad idea throw root finder function know much gener best examin function visual plot search root initi solver type gsl_root_fsolv workspac find root use method requir deriv type gsl_root_fdfsolv workspac find root use method requir deriv function gsl_root_fsolv gsl_root_fsolver_alloc const gsl_root_fsolver_typ function return pointer newli alloc instanc solver type datat exampl follow code creat instanc bisect solver const gsl_root_fsolver_typ gsl_root_fsolver_bisect gsl_root_fsolv gsl_root_fsolver_alloc insuffici memori creat solver function return null pointer error handler invok error code macrogsl_enomem function gsl_root_fdfsolv gsl_root_fdfsolver_alloc const gsl_root_fdfsolver_typ function return pointer newli alloc instanc derivativebas solver type datat exampl follow code creat instanc newtonraphson solver const gsl_root_fdfsolver_typ gsl_root_fdfsolver_newton gsl_root_fdfsolv gsl_root_fdfsolver_alloc insuffici memori creat solver function return null pointer error handler invok error code macrogsl_enomem function int gsl_root_fsolver_set gsl_root_fsolv gsl_function f doubl x_lower doubl x_upper function initi reiniti exist solver data use function dataf initi search interv datax_low datax_upp function int gsl_root_fdfsolver_set gsl_root_fdfsolv gsl_function_fdf fdf doubl root function initi reiniti exist solver data use function deriv datafdf initi guess dataroot function void gsl_root_fsolver_fre gsl_root_fsolv void gsl_root_fdfsolver_fre gsl_root_fdfsolv function free memori associ solver data function const char gsl_root_fsolver_nam const gsl_root_fsolv const char gsl_root_fdfsolver_nam const gsl_root_fdfsolv function return pointer name solver exampl printf solvern gsl_root_fsolver_nam would print someth like code bisect solver index singl root find provid function solv _providingfunctiontosolv provid function solv must provid continu function one variabl root finder oper sometim first deriv order allow gener paramet function defin follow data type type gsl_function data type defin gener function paramet codedoubl function doubl x void param function return valu mathfxparam argument datax paramet dataparam codevoid param pointer paramet function exampl gener quadrat function math fx x b x c matha mathb mathc follow code defin typegsl_funct codef could pass root finder function pointer struct my_f_param doubl doubl b doubl c doubl my_f doubl x void p struct my_f_param param struct my_f_param p doubl paramsa doubl b paramsb doubl c paramsc return x b x c gsl_function f struct my_f_param param ffunction my_f fparam param function mathfx evalu use macro codegsl_fn_evalfx defin filegsl_mathh type gsl_function_fdf data type defin gener function paramet first deriv codedoubl f doubl x void param function return valu mathfxparam argument datax paramet dataparam codedoubl df doubl x void param function return valu deriv dataf respect datax mathfxparam argument datax paramet dataparam codevoid fdf doubl x void param doubl f doubl df function set valu function dataf mathfxparam deriv datadf mathfxparam argument datax paramet dataparam function provid optim separ function mathfx mathfxit alway faster comput function deriv time codevoid param pointer paramet function exampl mathfx expx doubl my_f doubl x void param return exp x doubl my_df doubl x void param return exp x void my_fdf doubl x void param doubl f doubl df doubl exp x f df use exist valu gsl_function_fdf fdf fdff my_f fdfdf my_df fdffdf my_fdf fdfparam function mathfx evalu use macro codegsl_fn_fdf_eval_ffdfx deriv mathfx evalu use macro codegsl_fn_fdf_eval_dffdfx function mathi fx deriv mathdi fx evalu time use macro codegsl_fn_fdf_eval_f_dffdfxydi macro store mathfx datay argument mathfx datadi argumentboth pointer codedoubl index singl root find search bound singl root find initi guess search bound guess provid either search bound initi guess section explain search bound guess work function argument control guess simpli mathx valu iter within desir precis root take form codedoubl search bound endpoint interv iter length interv smaller request precis interv defin two valu lower limit upper limit whether endpoint intend includ interv depend context interv use iter follow function drive iter algorithm function perform one iter updat state solver correspond type function work solver differ method substitut runtim without modif code function int gsl_root_fsolver_iter gsl_root_fsolv int gsl_root_fdfsolver_iter gsl_root_fdfsolv function perform singl iter solver data iter encount unexpect problem error code return codegsl_ebadfunc iter encount singular point function deriv evalu codeinf codenan codegsl_ezerodiv deriv function vanish iter point prevent algorithm continu without divis zero solver maintain current best estim root time bracket solver also keep track current best interv bound root inform access follow auxiliari function function doubl gsl_root_fsolver_root const gsl_root_fsolv doubl gsl_root_fdfsolver_root const gsl_root_fdfsolv function return current estim root solver data function doubl gsl_root_fsolver_x_low const gsl_root_fsolv doubl gsl_root_fsolver_x_upp const gsl_root_fsolv function return current bracket interv solver data index singl root find stop paramet search stop paramet root find procedur stop one follow condit true root found within userspecifi precis userspecifi maximum number iter reach error occur handl condit user control function allow user test precis current result sever standard way function int gsl_root_test_interv doubl x_lower doubl x_upper doubl epsab doubl epsrel function test converg interv datax_low datax_upp absolut error dataepsab rel error dataepsrel test return macrogsl_success follow condit achiev texinfo math b hboxit epsab hboxit epsrel minab texinfo b epsab epsrel minab interv mathx ab includ origin interv includ origin mathminab replac zero minimum valu mathx interv ensur rel error accur estim root close origin condit interv also impli estim root mathr interv satisfi condit respect true root mathr texinfo math r r hboxit epsab hboxit epsrel r texinfo r r epsab epsrel r assum true root mathr contain within interv function int gsl_root_test_delta doubl x doubl x doubl epsab doubl epsrel function test converg sequenc datax datax absolut error dataepsab rel error dataepsrel test return macrogsl_success follow condit achiev texinfo math x_ x_ hboxit epsab hboxit epsrel x_ texinfo x_ x_ epsab epsrel x_ return macrogsl_continu otherwis function int gsl_root_test_residu doubl f doubl epsab function test residu valu dataf absolut error bound dataepsab test return macrogsl_success follow condit achiev texinfo math f hboxit epsab texinfo f epsab return macrogsl_continu otherwis criterion suitabl situat precis locat root mathx unimport provid valu found residu mathfx small enough root bracket algorithm root bracket algorithm describ section requir initi interv guarante contain rootif matha mathb endpoint interv mathfa must differ sign mathfb ensur function cross zero least interv valid initi interv use algorithm fail provid function wellbehav note bracket algorithm find root even degre sinc cross mathxaxi type gsl_root_fsolver_typ index singl bisect algorithm find root singl root find bisect algorithm var gsl_root_fsolver_bisect bisect algorithm simplest method bracket root function slowest algorithm provid librari linear converg iter interv bisect valu function midpoint calcul sign valu use determin half interv contain root half discard give new smaller interv contain root procedur continu indefinit interv suffici small time current estim root taken midpoint interv ep file rootsbisectionep iftex sp center imagerootsbisectionin quotat four iter bisect matha_n mathnth posit begin interv mathb_n mathnth posit end midpoint interv also indic end quotat end iftex index singl fals posit algorithm find root singl root find fals posit algorithm var gsl_root_fsolver_falsepo fals posit algorithm method find root base linear interpol converg linear usual faster bisect iter line drawn endpoint mathafa mathbfb point line cross mathxaxi taken midpoint valu function point calcul sign use determin side interv contain root side discard give new smaller interv contain root procedur continu indefinit interv suffici small best estim root taken linear interpol interv current iter ep file rootsfalsepositionep iftex imagerootsfalsepositionin quotat sever iter fals posit matha_n mathnth posit begin interv mathb_n mathnth posit end end quotat end iftex index singl brent method find root singl root find brent method var gsl_root_fsolver_br brentdekk method refer brent method combin interpol strategi bisect algorithm produc fast algorithm still robust iter brent method approxim function use interpol curv first iter linear interpol two endpoint subsequ iter algorithm use invers quadrat fit last three point higher accuraci intercept interpol curv mathxaxi taken guess root lie within bound current interv interpol point accept use gener smaller interv interpol point accept algorithm fall back ordinari bisect step best estim root taken recent interpol bisect root find algorithm use deriv root polish algorithm describ section requir initi guess locat root absolut guarante convergenceth function must suitabl techniqu initi guess must suffici close root work condit satisfi converg quadrat algorithm make use function deriv type gsl_root_fdfsolver_typ index singl newton method find root singl root find newton method var gsl_root_fdfsolver_newton newton method standard rootpolish algorithm algorithm begin initi guess locat root iter line tangent function mathf drawn posit point line cross mathxaxi becom new guess iter defin follow sequenc texinfo math x_i x_i fx_i fx_i texinfo x_i x_i fx_ifx_i newton method converg quadrat singl root linearli multipl root ep file rootsnewtonsmethodep iftex sp center imagerootsnewtonsmethodin quotat sever iter newton method mathg_n mathnth guess end quotat end iftex index singl secant method find root singl root find secant method var gsl_root_fdfsolver_sec secant method simplifi version newton method requir comput deriv everi step first iter algorithm begin newton method use deriv comput first step texinfo math x_ x_ fx_ fx_ texinfo x_ x_ fx_fx_ subsequ iter avoid evalu deriv replac numer estim slope line previou two point texinfo math x_i x_i fx_i f_est hboxwher f_est fx_i fx_i x_i x_i texinfo x_i x_i fx_i f_est f_est fx_i fx_ix_i x_i deriv chang significantli vicin root secant method give use save asymptot secant method faster newton method whenev cost evalu deriv time cost evalu function method comput numer deriv estim suffer cancel error separ point becom small singl root method converg order math sqrt approxim math converg linearli multipl root ep file rootssecantmethodep iftex tex input epsf medskip centerlineepsfxsizeinepsfboxrootssecantmethodep end tex quotat sever iter secant method mathg_n mathnth guess end quotat end iftex index singl steffenson method find root singl root find steffenson method var gsl_root_fdfsolver_steffenson steffenson method f_ provid fastest converg routin combin basic newton algorithm aitken deltasquar acceler newton iter mathx_i acceler procedur gener new sequenc mathr_i texinfo math r_i x_i x_i x_i x_i x_i x_i texinfo r_i x_i x_i x_i x_i x_i x_i converg faster origin sequenc reason condit new sequenc requir three term produc first valu method return acceler valu second subsequ iter first iter return ordinari newton estim newton iter also return denomin acceler term ever becom zero acceler procedur method becom unstabl function wellbehav exampl root find algorithm need prepar function solv exampl use gener quadrat equat describ earlier first need header file filedemo_fnh defin function paramet includ examplesdemo_fnh code place function definit separ file filedemo_fnc includ examplesdemo_fnc code first program use function solver datagsl_root_fsolver_br brent method gener quadrat defin solv follow equat math x solut mathx sqrt includ examplesrootsc code result iter aout use brent method iter lower upper root err errest converg program modifi use bisect solver instead brent method chang datagsl_root_fsolver_br datagsl_root_fsolver_bisect slower converg bisect method observ aout use bisect method iter lower upper root err errest converg next program solv function use deriv solver instead includ examplesrootnewtc code result newton method aout use newton method iter root err errest converg note error estim accur take differ current iter next iter rather previou iter deriv solver investig chang datagsl_root_fdfsolver_newton datagsl_root_fdfsolver_sec datagsl_root_fdfsolver_steffenson refer read inform brentdekk algorithm see follow two paper r p brent algorithm guarante converg find zero function comput journal j c p bu j dekker two effici algorithm guarante converg find zero function acm transact mathemat softwar vol rubric footnot f jf steffensen spell use name function slightli incorrect preserv avoid incompat gnu gener public licens literalinclud _staticgpltxt index singl jacobi ellipt function singl ellipt function jacobi jacobian ellipt function defin abramowitz stegun chapter function declar header file filegsl_sf_elljach function int gsl_sf_elljac_ doubl u doubl doubl sn doubl cn doubl dn function comput jacobian ellipt function mathsnum mathcnum mathdnum descend landen transform except return valu gsl_edom index singl spars matric singl matric spars spars matric chapter describ function construct manipul spars matric matric popul primarili zero contain nonzero element spars matric often appear solut partial differenti equat benefici use special data structur algorithm store work spars matric sinc dens matrix algorithm structur slow use huge amount memori appli spars matric header file filegsl_spmatrixh contain prototyp spars matrix function relat declar index singl spars matric overview overview routin provid support construct manipul spars matric gsl use api similar typegsl_matrix basic structur call typegsl_spmatrix three support storag format spars matric triplet compress column storag cc compress row storag cr format triplet format store triplet mathijx nonzero element matrix notat mean mathij element matrix matha matha_ij x compress column storag store column nonzero valu spars matrix continu memori block keep pointer begin column memori block store row indic nonzero element compress row storag store row nonzero valu continu memori block keep pointer begin row block store column indic nonzero element triplet format ideal ad element spars matrix structur construct compress storag format better suit matrixmatrix multipl linear solver type gsl_spmatrix structur defin typedef struct size_t size size_t size size_t doubl data size_t p size_t nzmax size_t nz gsl_spmatrix_tre tree_data void work size_t sptype gsl_spmatrix defin datasizebydatas spars matrix number nonzero element current matrix given datanz triplet represent datai datap datadata array size datanz contain row indic column indic element valu respect mathdatak aij mathi ik mathj pk compress column storag datai datadata array size datanz contain row indic element valu ident triplet case datap array size datas codepj point index datadata start column dataj thu mathdatak aij mathi ik mathpj k pj compress row storag datai datadata array size datanz contain column indic element valu ident triplet case datap array size datas codepi point index datadata start row datai thu mathdatak aij mathj ik mathpi k pi paramet datatree_data binari tree structur use triplet represent specif balanc avl tree speed element search duplic detect matrix assembl process paramet datawork addit workspac need variou oper like convert triplet compress storag datasptyp indic type storag format use triplet cc cr compress storag format defin make simpl interfac sophist extern linear solver librari accept compress storag input user simpli pass array datai datap datadata input extern librari index singl spars matric alloc alloc function alloc memori spars matrix follow style funcmalloc funcfre also perform error check insuffici memori avail alloc matrix function call gsl error handler error code macrogsl_enomem addit return null pointer function gsl_spmatrix gsl_spmatrix_alloc const size_t n const size_t n function alloc spars matrix size datanbydatan initi zero size matrix known alloc time datan datan may set automat grow element ad matrix function set matrix triplet represent easiest ad access matrix element function tri make reason guess number nonzero element datanzmax ad matrix assum spars densiti math function funcgsl_spmatrix_alloc_nzmax use number known accur workspac size mathonzmax function gsl_spmatrix gsl_spmatrix_alloc_nzmax const size_t n const size_t n const size_t nzmax const size_t sptype function alloc spars matrix size datanbydatan initi zero size matrix known alloc time datan datan may set automat grow element ad matrix paramet datanzmax specifi maximum number nonzero element ad matrix need precis known advanc sinc storag space automat grow use funcgsl_spmatrix_realloc datanzmax larg enough accur knowledg paramet reduc number realloc call requir paramet datasptyp specifi storag format spars matrix possibl valu macro gsl_spmatrix_triplet flag specifi triplet storag macro gsl_spmatrix_cc flag specifi compress column storag macro gsl_spmatrix_cr flag specifi compress row storag alloc typegsl_spmatrix structur size mathonzmax function int gsl_spmatrix_realloc const size_t nzmax gsl_spmatrix function realloc storag space datam accomod datanzmax nonzero element typic call intern funcgsl_spmatrix_set user want add element spars matrix previous specifi datanzmax function void gsl_spmatrix_fre gsl_spmatrix function free memori associ spars matrix datam index singl spars matric access element access matrix element function doubl gsl_spmatrix_get const gsl_spmatrix const size_t const size_t j function return element datai dataj matrix datam matrix may triplet compress format function int gsl_spmatrix_set gsl_spmatrix const size_t const size_t j const doubl x function set element datai dataj matrix datam valu datax matrix must triplet represent function doubl gsl_spmatrix_ptr gsl_spmatrix const size_t const size_t j function return pointer datai dataj element matrix datam datai dataj element explicitli store matrix null pointer return index singl spars matric initi element initi matrix element sinc spars matrix format store nonzero element automat initi zero upon alloc function funcgsl_spmatrix_set_zero may use reiniti matrix zero element ad function int gsl_spmatrix_set_zero gsl_spmatrix function set reset element matrix datam zero index singl spars matric read singl spars matric write read write matric function int gsl_spmatrix_fwrit file stream const gsl_spmatrix function write element matrix datam stream datastream binari format return valu success macrogsl_efail problem write file sinc data written nativ binari format may portabl differ architectur function int gsl_spmatrix_fread file stream gsl_spmatrix function read matrix datam open stream datastream binari format matrix datam must prealloc correct storag format dimens suffici larg datanzmax order read matrix element otherwis macrogsl_ebadlen return return valu success macrogsl_efail problem read file data assum written nativ binari format architectur function int gsl_spmatrix_fprintf file stream const gsl_spmatrix const char format function write element matrix datam linebylin stream datastream use format specifi dataformat one codeg code codef format float point number function return success macrogsl_efail problem write file input matrix datam may storag format output file written matrixmarket format function gsl_spmatrix gsl_spmatrix_fscanf file stream function read spars matrix data matrixmarket format stream datastream store newli alloc matrix return triplet format function return success macrogsl_efail problem read file user free return matrix longer need index singl spars matric copi copi matric function int gsl_spmatrix_memcpi gsl_spmatrix dest const gsl_spmatrix src function copi element spars matrix datasrc datadest two matric must dimens storag format index singl spars matric exchang row column exchang row column function int gsl_spmatrix_transpose_memcpi gsl_spmatrix dest const gsl_spmatrix src function copi transpos spars matrix datasrc datadest dimens datadest must match transpos matrix datasrc also matric must use spars storag format function int gsl_spmatrix_transpos gsl_spmatrix function replac matrix datam transpos preserv storag format input matrix current triplet matrix input support function int gsl_spmatrix_transpos gsl_spmatrix function replac matrix datam transpos chang storag format compress matrix input sinc compress column storag transpos compress row storag function simpli convert cc matrix cr vice versa effici way transpos compress storag matrix user note storag format compress matrix chang output triplet matric output matrix also triplet storag index singl spars matric oper matrix oper function int gsl_spmatrix_add gsl_spmatrix c const gsl_spmatrix const gsl_spmatrix b function comput sum mathc b three matric must dimens store compress format function int gsl_spmatrix_scal gsl_spmatrix const doubl x function scale element matrix datam constant factor datax result mathmij leftarrow x mij store datam index singl spars matric properti matrix properti function size_t gsl_spmatrix_nnz const gsl_spmatrix function return number nonzero element datam function int gsl_spmatrix_equ const gsl_spmatrix const gsl_spmatrix b function return matric dataa datab equal comparison element valu otherwis matric dataa datab must spars storag format comparison index singl spars matric minmax element find maximum minimum element function int gsl_spmatrix_minmax const gsl_spmatrix doubl min_out doubl max_out function return minimum maximum element matrix datam store datamin_out datamax_out search nonzero valu index singl spars matric compress compress format gsl support compress column storag cc compress row storag cr format function gsl_spmatrix gsl_spmatrix_cc const gsl_spmatrix function creat spars matrix compress column format input spars matrix datat must triplet format pointer newli alloc matrix return call function free newli alloc matrix longer need function gsl_spmatrix gsl_spmatrix_cr const gsl_spmatrix function creat spars matrix compress row format input spars matrix datat must triplet format pointer newli alloc matrix return call function free newli alloc matrix longer need index singl spars matric convers convers spars dens matric typegsl_spmatrix structur convert dens typegsl_matrix format vice versa follow routin function int gsl_spmatrix_dsp gsl_spmatrix const gsl_matrix function convert dens matrix dataa spars triplet format store result data function int gsl_spmatrix_spd gsl_matrix const gsl_spmatrix function convert spars matrix data dens matrix store result dataa data must triplet format index singl spars matric exampl exampl follow exampl program build spars matrix print triplet compress column compress row format matrix construct texinfo math left beginarraycccc endarray right texinfo output program print matrix element matrix triplet format ijaij matrix compress column format p matrix compress row format p see compress column output data array store column contigu array mathi store row index correspond data element array mathp store index start column data array similarli compress row output data array store row contigu array mathi store column index correspond data element mathp array store index start row data array includ examplesspmatrixc code index singl spars matric refer refer read algorithm use function describ follow sourc davi direct method spars linear system siam cspars softwar librari httpswwwciseufleduresearchsparsecspars index singl basi spline bspline singl spline basi _chap_basissplin basi spline chapter describ function comput smooth basi spline bspline smooth spline differ interpol spline result curv requir pass datapoint inform interpol spline see refsec_interpol header file filegsl_bsplineh contain prototyp bspline function relat declar index singl basi spline overview overview bspline commonli use basi function fit smooth curv larg data set abscissa axi broken number interv endpoint interv call breakpoint breakpoint convert knot impos variou continu smooth condit interfac given nondecreas knot vector math t_ t_ dot t_nk mathn basi spline order mathk defin texinfo math b_ix left beginarraycc t_i le x t_i els endarray right b_ikx x t_i t_ik t_i b_ikx t_ik x t_ik t_i b_ikx texinfo b_ix t_i x t_i els b_ikx x t_it_ik t_i b_ikx t_ik xt_ik t_i b_ikx mathi ldot n common case cubic bspline given mathk recurr relat evalu numer stabl way de boor algorithm defin appropri knot interv mathab bspline basi function form complet set interv therefor expand smooth function math fx sum_in c_i b_ikx given enough mathx_j fx_j data pair coeffici mathc_i readili obtain leastsquar fit index singl basi spline initi initi bspline solver type gsl_bspline_workspac comput bspline function requir prealloc workspac function gsl_bspline_workspac gsl_bspline_alloc const size_t k const size_t nbreak function alloc workspac comput bspline order datak number breakpoint given datanbreak lead mathn nbreak k basi function cubic bspline specifi mathk size workspac mathok k nbreak function void gsl_bspline_fre gsl_bspline_workspac w function free memori associ workspac dataw index singl knot basi spline construct knot vector function int gsl_bspline_knot const gsl_vector breakpt gsl_bspline_workspac w function comput knot associ given breakpoint store intern codewknot function int gsl_bspline_knots_uniform const doubl const doubl b gsl_bspline_workspac w function assum uniformli space breakpoint mathab construct correspond knot vector use previous specifi datanbreak paramet knot store codewknot index singl basi spline evalu evalu bspline function int gsl_bspline_ev const doubl x gsl_vector b gsl_bspline_workspac w function evalu bspline basi function posit datax store vector datab mathith element mathb_ix vector datab must length mathn nbreak k valu may also obtain call funcgsl_bspline_ncoeff comput basi function effici comput individu due natur defin recurr relat function int gsl_bspline_eval_nonzero const doubl x gsl_vector bk size_t istart size_t iend gsl_bspline_workspac w function evalu potenti nonzero bspline basi function posit datax store vector databk mathith element mathb_istartix last element databk mathb_iendx vector databk must length mathk return nonzero basi function function allow quantiti involv linear combin mathb_ix comput without unnecessari term linear combin occur exampl evalu interpol function function size_t gsl_bspline_ncoeff gsl_bspline_workspac w function return number bspline coeffici given mathn nbreak k index singl basi spline deriv evalu bspline deriv function int gsl_bspline_deriv_ev const doubl x const size_t nderiv gsl_matrix db gsl_bspline_workspac w function evalu bspline basi function deriv order math datanderiv inclus posit datax store matrix datadb mathijth element datadb mathdjb_ixdxj matrix datadb must size mathn nbreak k mathnderiv valu mathn may also obtain call funcgsl_bspline_ncoeff note function evalu includ zeroth order deriv datadb comput basi function deriv effici comput individu due natur defin recurr relat function int gsl_bspline_deriv_eval_nonzero const doubl x const size_t nderiv gsl_matrix db size_t istart size_t iend gsl_bspline_workspac w function evalu potenti nonzero bspline basi function deriv order math datanderiv inclus posit datax store matrix datadb mathijth element datadb mathdjb_istartixdxj last row datadb contain mathdjb_iendxdxj matrix datadb must size mathk least mathnderiv note function evalu includ zeroth order deriv datadb return nonzero basi function function allow quantiti involv linear combin mathb_ix deriv comput without unnecessari term index singl basi spline grevil abscissa singl basi spline marsdenschoenberg point work grevil abscissa grevil abscissa defin mean locat mathk consecut knot knot vector basi spline function order mathk first last knot typegsl_bspline_workspac knot vector exclud funcgsl_bspline_ncoeff grevil abscissa given bspline basi valu often use bspline colloc applic may also call marsdenschoenberg point function doubl gsl_bspline_greville_abscissa size_t gsl_bspline_workspac w return locat mathith grevil abscissa given bspline basi illdefin case mathk implement choos return breakpoint interv midpoint see httpssavannahgnuorgbugsindexphp deftypefun int gsl_bspline_knots_grevil const gsl_vector abscissa gsl_bspline_workspac w doubl abserr given target grevil abscissa valu dataabscissa workspac dataw codeabscissaes gsl_bspline_ncoeffsw function comput store knot requir workspac best approxim target abscissa approxim optim first last valu dataabscissa preserv exactli norm error abscissa minim notcodenul sum absolut approxim error abscissa return dataabserr workspac order must satisfi mathk dataabscissa monoton increas bewar codewnbreak small rel codewk best approxim may still poor qualiti nonuniformli space dataabscissa function memori runtim overhead scale like qrbase linear least squar solut codeabscissaes codewnbreak problem end deftypefun index singl basi spline exampl exampl follow program comput linear least squar fit data use cubic bspline basi function uniform breakpoint data gener curv mathyx cosx expx interv math gaussian nois ad includ examplesbsplinec code output shown aout bsplinetxt chisqdof e rsq data fit model shown numreffig_bsplin _fig_bsplin figur imagesbsplinepng scale data black fit model red refer read inform algorithm describ section found follow book c de boor practic guid spline springerverlag isbn inform grevil abscissa bspline colloc found follow paper richard w johnson higher order bspline colloc grevil abscissa appli numer mathemat vol larg collect bspline routin avail pppack librari avail httpwwwnetliborgpppack also part slatec index singl differenti equat initi valu problem singl initi valu problem differenti equat singl ordinari differenti equat initi valu problem singl ode initi valu problem ordinari differenti equat chapter describ function solv ordinari differenti equat ode initi valu problem librari provid varieti lowlevel method rungekutta bulirschsto routin higherlevel compon adapt stepsiz control compon combin user achiev desir solut full access intermedi step driver object use high level wrapper easi use low level function function declar header file filegsl_odeivh new interfac version use prefix codegsl_odeiv function recommend previou codegsl_odeiv implement defin filegsl_odeivh old interfac retain origin name backward compat defin ode system routin solv gener mathndimension firstord system texinfo math dy_it dt f_i y_t dot y_nt texinfo dy_itdt f_it y_t y_nt mathi dot n step function reli vector deriv mathf_i jacobian matrix texinfo math j_ij partial f_it yt partial y_j texinfo j_ij df_ityt dy_j system equat defin use typegsl_odeiv_system datatyp type gsl_odeiv_system data type defin gener ode system arbitrari paramet codeint function doubl const doubl doubl dydt void param function store vector element mathf_ityparam array datadydt argument datat datay paramet dataparam function return macrogsl_success calcul complet success return valu indic error special return valu macrogsl_ebadfunc caus codegsl_odeiv routin immedi stop return codefunct modifi exampl content dataparam user must call appropri reset function funcgsl_odeiv_driver_reset funcgsl_odeiv_evolve_reset funcgsl_odeiv_step_reset continu use return valu distinct standard gsl error code distinguish function sourc error index singl jacobian matrix ode codeint jacobian doubl const doubl doubl dfdi doubl dfdt void param function store vector deriv element texinfo math partial f_ityparam partial texinfo df_ityparamsdt array datadfdt jacobian matrix mathj_ij array datadfdi regard roword matrix codejij dfdyi dimens j codedimens dimens system stepper algorithm codegsl_odeiv make use jacobian matrix may necessari provid function codejacobian element struct replac null pointer algorithm function return macrogsl_success calcul complet success return valu indic error special return valu macrogsl_ebadfunc caus codegsl_odeiv routin immedi stop return codejacobian modifi exampl content dataparam user must call appropri reset function funcgsl_odeiv_driver_reset funcgsl_odeiv_evolve_reset funcgsl_odeiv_step_reset continu use return valu distinct standard gsl error code distinguish function sourc error codesize_t dimens dimens system equat codevoid param pointer arbitrari paramet system step function lowest level compon step function advanc solut time matht mathth fix stepsiz mathh estim result local error type gsl_odeiv_step contain intern paramet step function function gsl_odeiv_step gsl_odeiv_step_alloc const gsl_odeiv_step_typ size_t dim function return pointer newli alloc instanc step function type datat system datadim dimens pleas note use stepper method requir access driver object advis use driver alloc method automat alloc stepper function int gsl_odeiv_step_reset gsl_odeiv_step function reset step function data use whenev next use data continu previou step function void gsl_odeiv_step_fre gsl_odeiv_step function free memori associ step function data function const char gsl_odeiv_step_nam const gsl_odeiv_step function return pointer name step function exampl printf step method sn gsl_odeiv_step_nam would print someth like codestep method rkf function unsign int gsl_odeiv_step_ord const gsl_odeiv_step function return order step function previou step order vari step function adapt function int gsl_odeiv_step_set_driv gsl_odeiv_step const gsl_odeiv_driv function set pointer driver object datad stepper data allow stepper access control evolv object driver object requir stepper get desir error level intern iter stepper alloc driver object call function automat function int gsl_odeiv_step_appli gsl_odeiv_step doubl doubl h doubl doubl yerr const doubl dydt_in doubl dydt_out const gsl_odeiv_system sy function appli step function data system equat defin datasi use stepsiz datah advanc system time datat state datay time datat datah new state system store datay output estim absolut error compon store datayerr argument datadydt_in null point array contain deriv system time datat input option deriv comput intern provid allow reus exist deriv inform output new deriv system time datat datah store datadydt_out null step function return macrogsl_failur unabl comput request step also usersuppli function defin system datasi return statu macrogsl_success step abort case element datay restor prestep valu error code usersuppli function return failur may due singular system larg stepsiz datah case step attempt smaller stepsiz eg datah driver object appropri set via funcgsl_odeiv_step_set_driv stepper need step function return macrogsl_efault usersuppli function defin system datasi return macrogsl_ebadfunc function return immedi return code case user must call funcgsl_odeiv_step_reset call function follow algorithm avail type gsl_odeiv_step_typ index singl rk rungekutta method singl rungekutta method ordinari differenti equat var gsl_odeiv_step_rk explicit embed rungekutta method index singl rk rungekutta method var gsl_odeiv_step_rk explicit th order classic rungekutta error estim carri step doubl method effici estim error use embed method describ index singl fehlberg method differenti equat singl rkf rungekuttafehlberg method var gsl_odeiv_step_rkf explicit embed rungekuttafehlberg method method good generalpurpos integr index singl rungekutta cashkarp method singl cashkarp rungekutta method var gsl_odeiv_step_rkck explicit embed rungekutta cashkarp method index singl rungekutta princedormand method singl princedormand rungekutta method var gsl_odeiv_step_rkpd explicit embed rungekutta princedormand method index implicit euler method var gsl_odeiv_step_rkimp implicit gaussian first order rungekutta also known implicit euler backward euler method error estim carri step doubl method algorithm requir jacobian access driver object via funcgsl_odeiv_step_set_driv index implicit rungekutta method var gsl_odeiv_step_rkimp implicit gaussian second order rungekutta also known implicit midpoint rule error estim carri step doubl method stepper requir jacobian access driver object via funcgsl_odeiv_step_set_driv var gsl_odeiv_step_rkimp implicit gaussian th order rungekutta error estim carri step doubl method algorithm requir jacobian access driver object via funcgsl_odeiv_step_set_driv index singl bulirschsto method singl bader deuflhard bulirschsto method singl deuflhard bader bulirschsto method var gsl_odeiv_step_bsimp implicit bulirschsto method bader deuflhard method gener suitabl stiff problem stepper requir jacobian index singl adam method singl multistep method ode singl predictorcorrector method ode singl nordsieck form var gsl_odeiv_step_msadam variablecoeffici linear multistep adam method nordsieck form stepper use explicit adamsbashforth predictor implicit adamsmoulton corrector method mathpecm function iter mode method order vari dynam stepper requir access driver object via funcgsl_odeiv_step_set_driv index bdf method var gsl_odeiv_step_msbdf variablecoeffici linear multistep backward differenti formula bdf method nordsieck form stepper use explicit bdf formula predictor implicit bdf formula corrector modifi newton iter method use solv system nonlinear equat method order vari dynam method gener suitabl stiff problem stepper requir jacobian access driver object via funcgsl_odeiv_step_set_driv index singl adapt stepsiz control differenti equat adapt stepsiz control control function examin propos chang solut produc step function attempt determin optim stepsiz userspecifi level error type gsl_odeiv_control workspac control step size type gsl_odeiv_control_typ specifi control type function gsl_odeiv_control gsl_odeiv_control_standard_new doubl eps_ab doubl eps_rel doubl a_i doubl a_dydt standard control object four paramet heurist base absolut rel error dataeps_ab dataeps_rel scale factor dataa_i dataa_dydt system state mathyt deriv mathyt respect stepsiz adjust procedur method begin comput desir error level mathd_i compon texinfo math d_i epsilon_ab epsilon_rel a_i y_i a_dydt h yprime_i texinfo d_i eps_ab eps_rel a_i y_i a_dydt h yprime_i compar observ error mathe_i yerr_i observ error data exce desir error level datad compon method reduc stepsiz appropri factor math h_new h_old edq mathq consist order method eg mathq embed rk math safeti factor ratio math taken maximum ratio mathe_id_i observ error math less desir error level datad maximum ratio mathe_id_i algorithm take opportun increas stepsiz bring error line desir level math h_new h_old edq encompass standard error scale method avoid uncontrol chang stepsiz overal scale factor limit rang math function gsl_odeiv_control gsl_odeiv_control_y_new doubl eps_ab doubl eps_rel function creat new control object keep local error step within absolut error dataeps_ab rel error dataeps_rel respect solut mathy_it equival standard control object dataa_i dataa_dydt function gsl_odeiv_control gsl_odeiv_control_yp_new doubl eps_ab doubl eps_rel function creat new control object keep local error step within absolut error dataeps_ab rel error dataeps_rel respect deriv solut mathy_it equival standard control object dataa_i dataa_dydt function gsl_odeiv_control gsl_odeiv_control_scaled_new doubl eps_ab doubl eps_rel doubl a_i doubl a_dydt const doubl scale_ab size_t dim function creat new control object use algorithm funcgsl_odeiv_control_standard_new absolut error scale compon array datascale_ab formula mathd_i control object texinfo math d_i epsilon_ab s_i epsilon_rel a_i y_i a_dydt h yprime_i texinfo d_i eps_ab s_i eps_rel a_i y_i a_dydt h yprime_i maths_i mathith compon array datascale_ab error control heurist use matlab ode suit function gsl_odeiv_control gsl_odeiv_control_alloc const gsl_odeiv_control_typ function return pointer newli alloc instanc control function type datat function need defin new type control function purpos standard control function describ suffici function int gsl_odeiv_control_init gsl_odeiv_control c doubl eps_ab doubl eps_rel doubl a_i doubl a_dydt function initi control function datac paramet dataeps_ab absolut error dataeps_rel rel error dataa_i scale factor dataa_dydt scale factor deriv function void gsl_odeiv_control_fre gsl_odeiv_control c function free memori associ control function datac function int gsl_odeiv_control_hadjust gsl_odeiv_control c gsl_odeiv_step const doubl const doubl yerr const doubl dydt doubl h function adjust stepsiz datah use control function datac current valu datay datayerr datadydt step function datastep also need determin order method error yvalu datayerr found larg stepsiz datah reduc function return macrogsl_odeiv_hadj_dec error suffici small datah may increas macrogsl_odeiv_hadj_inc return function return macrogsl_odeiv_hadj_nil stepsiz unchang goal function estim largest stepsiz satisfi userspecifi accuraci requir current point function const char gsl_odeiv_control_nam const gsl_odeiv_control c function return pointer name control function exampl printf control method sn gsl_odeiv_control_nam c would print someth like codecontrol method standard function int gsl_odeiv_control_errlevel gsl_odeiv_control c const doubl const doubl dydt const doubl h const size_t ind doubl errlev function calcul desir error level dataindth compon dataerrlev requir valu datay valu deriv datadydt compon current step size datah function int gsl_odeiv_control_set_driv gsl_odeiv_control c const gsl_odeiv_driv function set pointer driver object datad control object datac evolut evolut function combin result step function control function reliabl advanc solut forward one step use accept stepsiz type gsl_odeiv_evolv workspac contain paramet control evolut function function gsl_odeiv_evolv gsl_odeiv_evolve_alloc size_t dim function return pointer newli alloc instanc evolut function system datadim dimens function int gsl_odeiv_evolve_appli gsl_odeiv_evolv e gsl_odeiv_control con gsl_odeiv_step step const gsl_odeiv_system sy doubl doubl doubl h doubl function advanc system data datasi time datat posit datay use step function datastep new time posit store datat datay output initi stepsiz taken datah control function datacon appli check whether local error estim step function datastep use stepsiz datah exce requir error toler error high step retri call datastep decreas stepsiz process continu accept stepsiz found estim local error step obtain compon array codeeyerr usersuppli function defin system datasi return macrogsl_ebadfunc function return immedi return code case user must call funcgsl_odeiv_step_reset funcgsl_odeiv_evolve_reset call function otherwis usersuppli function defin system datasi step function datastep return statu macrogsl_success step retri decreas stepsiz stepsiz decreas machin precis statu macrogsl_failur return user function return macrogsl_success otherwis valu return user function return accept step made datat datay restor prestep valu datah contain final attempt stepsiz step success function return suggest stepsiz next step datah maximum time datat guarante exceed timestep final timestep valu datat set datat exactli function int gsl_odeiv_evolve_apply_fixed_step gsl_odeiv_evolv e gsl_odeiv_control con gsl_odeiv_step step const gsl_odeiv_system sy doubl const doubl h doubl function advanc odesystem data datasi datacon time datat posit datay use step function datastep specifi step size datah local error estim step function exce desir error level step taken function return macrogsl_failur otherwis valu return user function return function int gsl_odeiv_evolve_reset gsl_odeiv_evolv e function reset evolut function data use whenev next use data continu previou step function void gsl_odeiv_evolve_fre gsl_odeiv_evolv e function free memori associ evolut function data function int gsl_odeiv_evolve_set_driv gsl_odeiv_evolv e const gsl_odeiv_driv function set pointer driver object datad evolv object data index singl discontinu ode system system discontinu chang deriv known point advis evolv system discontinu sequenc exampl stepchang extern drive forc occur time matht_a t_b matht_c evolut carri rang matht_t_a matht_at_b matht_bt_c matht_ct_ separ directli rang matht_t_ driver driver object high level wrapper combin evolut control stepper object easi use function gsl_odeiv_driv gsl_odeiv_driver_alloc_y_new const gsl_odeiv_system sy const gsl_odeiv_step_typ const doubl hstart const doubl epsab const doubl epsrel gsl_odeiv_driv gsl_odeiv_driver_alloc_yp_new const gsl_odeiv_system sy const gsl_odeiv_step_typ const doubl hstart const doubl epsab const doubl epsrel gsl_odeiv_driv gsl_odeiv_driver_alloc_standard_new const gsl_odeiv_system sy const gsl_odeiv_step_typ const doubl hstart const doubl epsab const doubl epsrel const doubl a_i const doubl a_dydt gsl_odeiv_driv gsl_odeiv_driver_alloc_scaled_new const gsl_odeiv_system sy const gsl_odeiv_step_typ const doubl hstart const doubl epsab const doubl epsrel const doubl a_i const doubl a_dydt const doubl scale_ab function return pointer newli alloc instanc driver object function automat alloc initialis evolv control stepper object ode system datasi use stepper type datat initi step size given datahstart rest argument follow syntax semant control function name codegsl_odeiv_control__new function int gsl_odeiv_driver_set_hmin gsl_odeiv_driv const doubl hmin function set minimum allow step size datahmin driver datad default valu function int gsl_odeiv_driver_set_hmax gsl_odeiv_driv const doubl hmax function set maximum allow step size datahmax driver datad default valu macrogsl_dbl_max function int gsl_odeiv_driver_set_nmax gsl_odeiv_driv const unsign long int nmax function set maximum allow number step datanmax driver datad default valu set limit step function int gsl_odeiv_driver_appli gsl_odeiv_driv doubl const doubl doubl function evolv driver system datad datat datat initi vector datay contain valu depend variabl point datat function unabl complet calcul error code funcgsl_odeiv_evolve_appli return datat datay contain valu last success step maximum number step reach valu macrogsl_emaxit return step size drop minimum valu function return macrogsl_enoprog usersuppli function defin system datasi return macrogsl_ebadfunc function return immedi return code case user must call funcgsl_odeiv_driver_reset call function function int gsl_odeiv_driver_apply_fixed_step gsl_odeiv_driv doubl const doubl h const unsign long int n doubl function evolv driver system datad datat datan step size datah function unabl complet calcul error code funcgsl_odeiv_evolve_apply_fixed_step return datat datay contain valu last success step function int gsl_odeiv_driver_reset gsl_odeiv_driv function reset evolut stepper object function int gsl_odeiv_driver_reset_hstart gsl_odeiv_driv const doubl hstart routin reset evolut stepper object set new initi step size datahstart function use eg chang direct integr function int gsl_odeiv_driver_fre gsl_odeiv_driv function free driver object relat evolut stepper control object exampl index singl van der pol oscil exampl follow program solv secondord nonlinear van der pol oscil equat math ut mu ut ut ut convert first order system suitabl use routin describ chapter introduc separ variabl veloc mathv ut texinfo math u v v u mu v u texinfo u v v u mu v u program begin defin function deriv jacobian main function use driver level function solv problem program evolv solut mathu v matht matht stepsiz mathh automat adjust control maintain absolut accuraci math function valu mathu v loop exampl print solut point matht_i dot includ examplesodeinitvalc code user work lower level function directli follow exampl case intermedi result print success step instead equidist time point includ examplesodeinitvallowlevelc code function multipl paramet appropri inform pass dataparam argument typegsl_odeiv_system definit datamu exampl use pointer struct figur imagesodevdppng numer solut van der pol oscil equat use princedormand th order rungekutta also possibl work nonadapt integr use step function funcgsl_odeiv_driver_apply_fixed_step funcgsl_odeiv_evolve_apply_fixed_step follow program use driver level function fourthord rungekutta step function fix stepsiz includ examplesodefixedc code refer read ascher um petzold lr comput method ordinari differenti differentialalgebra equat siam philadelphia hairer e norsett p wanner g solv ordinari differenti equat nonstiff problem springer berlin hairer e wanner g solv ordinari differenti equat ii stiff differentialalgebra problem springer berlin mani basic rungekutta formula found handbook mathemat function abramowitz stegun ed handbook mathemat function section implicit bulirschsto algorithm codebsimp describ follow paper g bader p deuflhard semiimplicit midpoint rule stiff system ordinari differenti equat numer math adam bdf multistep method codemsadam codemsbdf base follow articl g byrn c hindmarsh polyalgorithm numer solut ordinari differenti equat acm tran math softwar p n brown g byrn c hindmarsh vode variablecoeffici ode solver siam j sci stat comput c hindmarsh p n brown k e grant l lee r serban e shumak c woodward sundial suit nonlinear differentialalgebra equat solver acm tran math softwar index airi function index aix index bix airi function mathaix mathbix defin integr represent texinfo math aix overpi int_infti cost xt dt bix overpi int_infti et xt sint xt dt texinfo aix pi int_infti co xt dt bix pi int_infti e xt sin xt dt inform see abramowitz stegun section airi function defin header file filegsl_sf_airyh airi function function doubl gsl_sf_airy_ai doubl x gsl_mode_t mode int gsl_sf_airy_ai_ doubl x gsl_mode_t mode gsl_sf_result result routin comput airi function mathaix accuraci specifi datamod function doubl gsl_sf_airy_bi doubl x gsl_mode_t mode int gsl_sf_airy_bi_ doubl x gsl_mode_t mode gsl_sf_result result routin comput airi function mathbix accuraci specifi datamod function doubl gsl_sf_airy_ai_sc doubl x gsl_mode_t mode int gsl_sf_airy_ai_scaled_ doubl x gsl_mode_t mode gsl_sf_result result routin comput scale version airi function maths_ax aix mathx scale factor maths_ax mathexp x mathx function doubl gsl_sf_airy_bi_sc doubl x gsl_mode_t mode int gsl_sf_airy_bi_scaled_ doubl x gsl_mode_t mode gsl_sf_result result routin comput scale version airi function maths_bx bix mathx scale factor maths_bx mathexp x mathx deriv airi function function doubl gsl_sf_airy_ai_deriv doubl x gsl_mode_t mode int gsl_sf_airy_ai_deriv_ doubl x gsl_mode_t mode gsl_sf_result result routin comput airi function deriv mathaix accuraci specifi datamod function doubl gsl_sf_airy_bi_deriv doubl x gsl_mode_t mode int gsl_sf_airy_bi_deriv_ doubl x gsl_mode_t mode gsl_sf_result result routin comput airi function deriv mathbix accuraci specifi datamod function doubl gsl_sf_airy_ai_deriv_sc doubl x gsl_mode_t mode int gsl_sf_airy_ai_deriv_scaled_ doubl x gsl_mode_t mode gsl_sf_result result routin comput scale airi function deriv maths_ax aix mathx scale factor maths_ax mathexp x mathx function doubl gsl_sf_airy_bi_deriv_sc doubl x gsl_mode_t mode int gsl_sf_airy_bi_deriv_scaled_ doubl x gsl_mode_t mode gsl_sf_result result routin comput scale airi function deriv maths_bx bix mathx scale factor maths_bx mathexp x mathx zero airi function function doubl gsl_sf_airy_zero_ai unsign int int gsl_sf_airy_zero_ai_ unsign int gsl_sf_result result routin comput locat datasth zero airi function mathaix function doubl gsl_sf_airy_zero_bi unsign int int gsl_sf_airy_zero_bi_ unsign int gsl_sf_result result routin comput locat datasth zero airi function mathbix zero deriv airi function function doubl gsl_sf_airy_zero_ai_deriv unsign int int gsl_sf_airy_zero_ai_deriv_ unsign int gsl_sf_result result routin comput locat datasth zero airi function deriv mathaix function doubl gsl_sf_airy_zero_bi_deriv unsign int int gsl_sf_airy_zero_bi_deriv_ unsign int gsl_sf_result result routin comput locat datasth zero airi function deriv mathbix index singl linear algebra bla singl matrix oper singl vector oper singl bla singl cbla singl basic linear algebra subroutin bla _chap_blassupport bla support basic linear algebra subprogram bla defin set fundament oper vector matric use creat optim higherlevel linear algebra function librari provid lowlevel layer correspond directli clanguag bla standard refer cbla higherlevel interfac oper gsl vector matric user interest simpl oper gsl vector matrix object use highlevel layer describ chapter function declar file filegsl_blash satisfi need user note gsl matric implement use densestorag interfac includ correspond densestorag bla function full bla function bandformat packedformat matric avail lowlevel cbla interfac similarli gsl vector restrict posit stride wherea lowlevel cbla interfac support neg stride specifi bla standard f_ interfac codegsl_cbla layer specifi file filegsl_cblash interfac correspond bla technic forum standard c interfac legaci bla implement user access conform cbla implement use place version provid librari note user fortran bla librari use cbla conform wrapper convert cbla librari refer cbla wrapper legaci fortran implement exist part cbla standard obtain netlib complet set cbla function list refappendix chap_cbla three level bla oper level vector oper eg mathi alpha x level matrixvector oper eg mathi alpha x beta level matrixmatrix oper eg mathc alpha b c routin name specifi oper type matric involv precis common oper name given dot scalar product mathxt axpi vector sum mathalpha x mv matrixvector product matha x sv matrixvector solv mathinva x mm matrixmatrix product matha b sm matrixmatrix solv mathinva b type matric ge gener gb gener band sy symmetr sb symmetr band sp symmetr pack hermitian hb hermitian band hp hermitian pack tr triangular tb triangular band tp triangular pack oper defin four precis singl real doubl real c singl complex z doubl complex thu exampl name sgemm stand singleprecis gener matrixmatrix multipli zgemm stand doubleprecis complex matrixmatrix multipli note vector matrix argument bla function must alias result undefin underli array overlap refaliasingofarray gsl bla interfac gsl provid dens vector matrix object base relev builtin type librari provid interfac bla oper appli object interfac function given file filegsl_blash cblasnotran cblastran cblasconjtran cblasupp cblaslow cblasnonunit cblasunit cblasleft cblasright level index singl dot level bla function int gsl_blas_sdsdot float alpha const gsl_vector_float x const gsl_vector_float float result function comput sum mathalpha xt vector datax datay return result dataresult function int gsl_blas_sdot const gsl_vector_float x const gsl_vector_float float result int gsl_blas_dsdot const gsl_vector_float x const gsl_vector_float doubl result int gsl_blas_ddot const gsl_vector x const gsl_vector doubl result function comput scalar product mathxt vector datax datay return result dataresult function int gsl_blas_cdotu const gsl_vector_complex_float x const gsl_vector_complex_float gsl_complex_float dotu int gsl_blas_zdotu const gsl_vector_complex x const gsl_vector_complex gsl_complex dotu function comput complex scalar product mathxt vector datax datay return result datadotu function int gsl_blas_cdotc const gsl_vector_complex_float x const gsl_vector_complex_float gsl_complex_float dotc int gsl_blas_zdotc const gsl_vector_complex x const gsl_vector_complex gsl_complex dotc function comput complex conjug scalar product mathxh vector datax datay return result datadotc index singl nrm level bla function float gsl_blas_snrm const gsl_vector_float x doubl gsl_blas_dnrm const gsl_vector x function comput euclidean norm mathx_ sqrtsum x_i vector datax function float gsl_blas_scnrm const gsl_vector_complex_float x doubl gsl_blas_dznrm const gsl_vector_complex x function comput euclidean norm complex vector datax math x_ sqrtsum rex_i imx_i index singl asum level bla function float gsl_blas_sasum const gsl_vector_float x doubl gsl_blas_dasum const gsl_vector x function comput absolut sum mathsum x_i element vector datax function float gsl_blas_scasum const gsl_vector_complex_float x doubl gsl_blas_dzasum const gsl_vector_complex x function comput sum magnitud real imaginari part complex vector datax mathsum left rex_i imx_i right index singl amax level bla function cblas_index_t gsl_blas_isamax const gsl_vector_float x cblas_index_t gsl_blas_idamax const gsl_vector x cblas_index_t gsl_blas_icamax const gsl_vector_complex_float x cblas_index_t gsl_blas_izamax const gsl_vector_complex x function return index largest element vector datax largest element determin absolut magnitud real vector sum magnitud real imaginari part mathrex_i imx_i complex vector largest valu occur sever time index first occurr return index singl swap level bla function int gsl_blas_sswap gsl_vector_float x gsl_vector_float int gsl_blas_dswap gsl_vector x gsl_vector int gsl_blas_cswap gsl_vector_complex_float x gsl_vector_complex_float int gsl_blas_zswap gsl_vector_complex x gsl_vector_complex function exchang element vector datax datay index singl copi level bla function int gsl_blas_scopi const gsl_vector_float x gsl_vector_float int gsl_blas_dcopi const gsl_vector x gsl_vector int gsl_blas_ccopi const gsl_vector_complex_float x gsl_vector_complex_float int gsl_blas_zcopi const gsl_vector_complex x gsl_vector_complex function copi element vector datax vector datay index singl axpi level bla singl daxpi level bla singl saxpi level bla function int gsl_blas_saxpi float alpha const gsl_vector_float x gsl_vector_float int gsl_blas_daxpi doubl alpha const gsl_vector x gsl_vector int gsl_blas_caxpi const gsl_complex_float alpha const gsl_vector_complex_float x gsl_vector_complex_float int gsl_blas_zaxpi const gsl_complex alpha const gsl_vector_complex x gsl_vector_complex function comput sum mathi alpha x vector datax datay index singl scal level bla function void gsl_blas_sscal float alpha gsl_vector_float x void gsl_blas_dscal doubl alpha gsl_vector x void gsl_blas_cscal const gsl_complex_float alpha gsl_vector_complex_float x void gsl_blas_zscal const gsl_complex alpha gsl_vector_complex x void gsl_blas_csscal float alpha gsl_vector_complex_float x void gsl_blas_zdscal doubl alpha gsl_vector_complex x function rescal vector datax multipl factor dataalpha index singl rotg level bla singl given rotat bla function int gsl_blas_srotg float float b float c float int gsl_blas_drotg doubl doubl b doubl c doubl function comput given rotat mathc zero vector mathab texinfo math left beginmatrix c c endmatrix right left beginmatrix b endmatrix right left beginmatrix r endmatrix right texinfo c r c b variabl dataa datab overwritten routin function int gsl_blas_srot gsl_vector_float x gsl_vector_float float c float int gsl_blas_drot gsl_vector x gsl_vector const doubl c const doubl function appli given rotat mathx c x x c vector datax datay index singl modifi given rotat bla singl given rotat modifi bla function int gsl_blas_srotmg float float float b float b float p int gsl_blas_drotmg doubl doubl doubl b doubl b doubl p function comput modifi given transform modifi given transform defin origin level bla specif given refer function int gsl_blas_srotm gsl_vector_float x gsl_vector_float const float p int gsl_blas_drotm gsl_vector x gsl_vector const doubl p function appli modifi given transform level index singl gemv level bla function int gsl_blas_sgemv cblas_transpose_t transa float alpha const gsl_matrix_float const gsl_vector_float x float beta gsl_vector_float int gsl_blas_dgemv cblas_transpose_t transa doubl alpha const gsl_matrix const gsl_vector x doubl beta gsl_vector int gsl_blas_cgemv cblas_transpose_t transa const gsl_complex_float alpha const gsl_matrix_complex_float const gsl_vector_complex_float x const gsl_complex_float beta gsl_vector_complex_float int gsl_blas_zgemv cblas_transpose_t transa const gsl_complex alpha const gsl_matrix_complex const gsl_vector_complex x const gsl_complex beta gsl_vector_complex function comput matrixvector product sum mathi alpha opa x beta mathopa mathat mathah datatransa codecblasnotran codecblastran codecblasconjtran index singl trmv level bla function int gsl_blas_strmv cblas_uplo_t uplo cblas_transpose_t transa cblas_diag_t diag const gsl_matrix_float gsl_vector_float x int gsl_blas_dtrmv cblas_uplo_t uplo cblas_transpose_t transa cblas_diag_t diag const gsl_matrix gsl_vector x int gsl_blas_ctrmv cblas_uplo_t uplo cblas_transpose_t transa cblas_diag_t diag const gsl_matrix_complex_float gsl_vector_complex_float x int gsl_blas_ztrmv cblas_uplo_t uplo cblas_transpose_t transa cblas_diag_t diag const gsl_matrix_complex gsl_vector_complex x function comput matrixvector product mathx opa x triangular matrix dataa mathopa mathat mathah datatransa codecblasnotran codecblastran codecblasconjtran datauplo codecblasupp upper triangl dataa use datauplo codecblaslow lower triangl dataa use datadiag codecblasnonunit diagon matrix use datadiag codecblasunit diagon element matrix dataa taken uniti referenc index singl trsv level bla function int gsl_blas_strsv cblas_uplo_t uplo cblas_transpose_t transa cblas_diag_t diag const gsl_matrix_float gsl_vector_float x int gsl_blas_dtrsv cblas_uplo_t uplo cblas_transpose_t transa cblas_diag_t diag const gsl_matrix gsl_vector x int gsl_blas_ctrsv cblas_uplo_t uplo cblas_transpose_t transa cblas_diag_t diag const gsl_matrix_complex_float gsl_vector_complex_float x int gsl_blas_ztrsv cblas_uplo_t uplo cblas_transpose_t transa cblas_diag_t diag const gsl_matrix_complex gsl_vector_complex x function comput mathinvopa x datax mathopa mathat mathah datatransa codecblasnotran codecblastran codecblasconjtran datauplo codecblasupp upper triangl dataa use datauplo codecblaslow lower triangl dataa use datadiag codecblasnonunit diagon matrix use datadiag codecblasunit diagon element matrix dataa taken uniti referenc index singl symv level bla function int gsl_blas_ssymv cblas_uplo_t uplo float alpha const gsl_matrix_float const gsl_vector_float x float beta gsl_vector_float int gsl_blas_dsymv cblas_uplo_t uplo doubl alpha const gsl_matrix const gsl_vector x doubl beta gsl_vector function comput matrixvector product sum mathi alpha x beta symmetr matrix dataa sinc matrix dataa symmetr upper half lower half need store datauplo codecblasupp upper triangl diagon dataa use datauplo codecblaslow lower triangl diagon dataa use index singl hemv level bla function int gsl_blas_chemv cblas_uplo_t uplo const gsl_complex_float alpha const gsl_matrix_complex_float const gsl_vector_complex_float x const gsl_complex_float beta gsl_vector_complex_float int gsl_blas_zhemv cblas_uplo_t uplo const gsl_complex alpha const gsl_matrix_complex const gsl_vector_complex x const gsl_complex beta gsl_vector_complex function comput matrixvector product sum mathi alpha x beta hermitian matrix dataa sinc matrix dataa hermitian upper half lower half need store datauplo codecblasupp upper triangl diagon dataa use datauplo codecblaslow lower triangl diagon dataa use imaginari element diagon automat assum zero referenc index singl ger level bla singl geru level bla function int gsl_blas_sger float alpha const gsl_vector_float x const gsl_vector_float gsl_matrix_float int gsl_blas_dger doubl alpha const gsl_vector x const gsl_vector gsl_matrix int gsl_blas_cgeru const gsl_complex_float alpha const gsl_vector_complex_float x const gsl_vector_complex_float gsl_matrix_complex_float int gsl_blas_zgeru const gsl_complex alpha const gsl_vector_complex x const gsl_vector_complex gsl_matrix_complex function comput rank updat matha alpha x yt matrix dataa index singl gerc level bla function int gsl_blas_cgerc const gsl_complex_float alpha const gsl_vector_complex_float x const gsl_vector_complex_float gsl_matrix_complex_float int gsl_blas_zgerc const gsl_complex alpha const gsl_vector_complex x const gsl_vector_complex gsl_matrix_complex function comput conjug rank updat matha alpha x yh matrix dataa index singl syr level bla function int gsl_blas_ssyr cblas_uplo_t uplo float alpha const gsl_vector_float x gsl_matrix_float int gsl_blas_dsyr cblas_uplo_t uplo doubl alpha const gsl_vector x gsl_matrix function comput symmetr rank updat matha alpha x xt symmetr matrix dataa sinc matrix dataa symmetr upper half lower half need store datauplo codecblasupp upper triangl diagon dataa use datauplo codecblaslow lower triangl diagon dataa use index singl level bla function int gsl_blas_cher cblas_uplo_t uplo float alpha const gsl_vector_complex_float x gsl_matrix_complex_float int gsl_blas_zher cblas_uplo_t uplo doubl alpha const gsl_vector_complex x gsl_matrix_complex function comput hermitian rank updat matha alpha x xh hermitian matrix dataa sinc matrix dataa hermitian upper half lower half need store datauplo codecblasupp upper triangl diagon dataa use datauplo codecblaslow lower triangl diagon dataa use imaginari element diagon automat set zero index singl syr level bla function int gsl_blas_ssyr cblas_uplo_t uplo float alpha const gsl_vector_float x const gsl_vector_float gsl_matrix_float int gsl_blas_dsyr cblas_uplo_t uplo doubl alpha const gsl_vector x const gsl_vector gsl_matrix function comput symmetr rank updat matha alpha x yt alpha xt symmetr matrix dataa sinc matrix dataa symmetr upper half lower half need store datauplo codecblasupp upper triangl diagon dataa use datauplo codecblaslow lower triangl diagon dataa use index singl level bla function int gsl_blas_cher cblas_uplo_t uplo const gsl_complex_float alpha const gsl_vector_complex_float x const gsl_vector_complex_float gsl_matrix_complex_float int gsl_blas_zher cblas_uplo_t uplo const gsl_complex alpha const gsl_vector_complex x const gsl_vector_complex gsl_matrix_complex function comput hermitian rank updat matha alpha x yh alpha xh hermitian matrix dataa sinc matrix dataa hermitian upper half lower half need store datauplo codecblasupp upper triangl diagon dataa use datauplo codecblaslow lower triangl diagon dataa use imaginari element diagon automat set zero level index singl gemm level bla function int gsl_blas_sgemm cblas_transpose_t transa cblas_transpose_t transb float alpha const gsl_matrix_float const gsl_matrix_float b float beta gsl_matrix_float c int gsl_blas_dgemm cblas_transpose_t transa cblas_transpose_t transb doubl alpha const gsl_matrix const gsl_matrix b doubl beta gsl_matrix c int gsl_blas_cgemm cblas_transpose_t transa cblas_transpose_t transb const gsl_complex_float alpha const gsl_matrix_complex_float const gsl_matrix_complex_float b const gsl_complex_float beta gsl_matrix_complex_float c int gsl_blas_zgemm cblas_transpose_t transa cblas_transpose_t transb const gsl_complex alpha const gsl_matrix_complex const gsl_matrix_complex b const gsl_complex beta gsl_matrix_complex c function comput matrixmatrix product sum mathc alpha opa opb beta c mathopa mathat mathah datatransa codecblasnotran codecblastran codecblasconjtran similarli paramet datatransb index singl symm level bla function int gsl_blas_ssymm cblas_side_t side cblas_uplo_t uplo float alpha const gsl_matrix_float const gsl_matrix_float b float beta gsl_matrix_float c int gsl_blas_dsymm cblas_side_t side cblas_uplo_t uplo doubl alpha const gsl_matrix const gsl_matrix b doubl beta gsl_matrix c int gsl_blas_csymm cblas_side_t side cblas_uplo_t uplo const gsl_complex_float alpha const gsl_matrix_complex_float const gsl_matrix_complex_float b const gsl_complex_float beta gsl_matrix_complex_float c int gsl_blas_zsymm cblas_side_t side cblas_uplo_t uplo const gsl_complex alpha const gsl_matrix_complex const gsl_matrix_complex b const gsl_complex beta gsl_matrix_complex c function comput matrixmatrix product sum mathc alpha b beta c datasid codecblasleft mathc alpha b beta c datasid codecblasright matrix dataa symmetr datauplo codecblasupp upper triangl diagon dataa use datauplo codecblaslow lower triangl diagon dataa use index singl hemm level bla function int gsl_blas_chemm cblas_side_t side cblas_uplo_t uplo const gsl_complex_float alpha const gsl_matrix_complex_float const gsl_matrix_complex_float b const gsl_complex_float beta gsl_matrix_complex_float c int gsl_blas_zhemm cblas_side_t side cblas_uplo_t uplo const gsl_complex alpha const gsl_matrix_complex const gsl_matrix_complex b const gsl_complex beta gsl_matrix_complex c function comput matrixmatrix product sum mathc alpha b beta c datasid codecblasleft mathc alpha b beta c datasid codecblasright matrix dataa hermitian datauplo codecblasupp upper triangl diagon dataa use datauplo codecblaslow lower triangl diagon dataa use imaginari element diagon automat set zero index singl trmm level bla function int gsl_blas_strmm cblas_side_t side cblas_uplo_t uplo cblas_transpose_t transa cblas_diag_t diag float alpha const gsl_matrix_float gsl_matrix_float b int gsl_blas_dtrmm cblas_side_t side cblas_uplo_t uplo cblas_transpose_t transa cblas_diag_t diag doubl alpha const gsl_matrix gsl_matrix b int gsl_blas_ctrmm cblas_side_t side cblas_uplo_t uplo cblas_transpose_t transa cblas_diag_t diag const gsl_complex_float alpha const gsl_matrix_complex_float gsl_matrix_complex_float b int gsl_blas_ztrmm cblas_side_t side cblas_uplo_t uplo cblas_transpose_t transa cblas_diag_t diag const gsl_complex alpha const gsl_matrix_complex gsl_matrix_complex b function comput matrixmatrix product mathb alpha opa b datasid codecblasleft mathb alpha b opa datasid codecblasright matrix dataa triangular mathopa mathat mathah datatransa codecblasnotran codecblastran codecblasconjtran datauplo codecblasupp upper triangl dataa use datauplo codecblaslow lower triangl dataa use datadiag codecblasnonunit diagon dataa use datadiag codecblasunit diagon element matrix dataa taken uniti referenc index singl trsm level bla function int gsl_blas_strsm cblas_side_t side cblas_uplo_t uplo cblas_transpose_t transa cblas_diag_t diag float alpha const gsl_matrix_float gsl_matrix_float b int gsl_blas_dtrsm cblas_side_t side cblas_uplo_t uplo cblas_transpose_t transa cblas_diag_t diag doubl alpha const gsl_matrix gsl_matrix b int gsl_blas_ctrsm cblas_side_t side cblas_uplo_t uplo cblas_transpose_t transa cblas_diag_t diag const gsl_complex_float alpha const gsl_matrix_complex_float gsl_matrix_complex_float b int gsl_blas_ztrsm cblas_side_t side cblas_uplo_t uplo cblas_transpose_t transa cblas_diag_t diag const gsl_complex alpha const gsl_matrix_complex gsl_matrix_complex b function comput inversematrix matrix product mathb alpha opinvab datasid codecblasleft mathb alpha b opinva datasid codecblasright matrix dataa triangular mathopa mathat mathah datatransa codecblasnotran codecblastran codecblasconjtran datauplo codecblasupp upper triangl dataa use datauplo codecblaslow lower triangl dataa use datadiag codecblasnonunit diagon dataa use datadiag codecblasunit diagon element matrix dataa taken uniti referenc index singl syrk level bla function int gsl_blas_ssyrk cblas_uplo_t uplo cblas_transpose_t tran float alpha const gsl_matrix_float float beta gsl_matrix_float c int gsl_blas_dsyrk cblas_uplo_t uplo cblas_transpose_t tran doubl alpha const gsl_matrix doubl beta gsl_matrix c int gsl_blas_csyrk cblas_uplo_t uplo cblas_transpose_t tran const gsl_complex_float alpha const gsl_matrix_complex_float const gsl_complex_float beta gsl_matrix_complex_float c int gsl_blas_zsyrk cblas_uplo_t uplo cblas_transpose_t tran const gsl_complex alpha const gsl_matrix_complex const gsl_complex beta gsl_matrix_complex c function comput rankk updat symmetr matrix datac mathc alpha beta c datatran codecblasnotran mathc alpha beta c datatran codecblastran sinc matrix datac symmetr upper half lower half need store datauplo codecblasupp upper triangl diagon datac use datauplo codecblaslow lower triangl diagon datac use index singl herk level bla function int gsl_blas_cherk cblas_uplo_t uplo cblas_transpose_t tran float alpha const gsl_matrix_complex_float float beta gsl_matrix_complex_float c int gsl_blas_zherk cblas_uplo_t uplo cblas_transpose_t tran doubl alpha const gsl_matrix_complex doubl beta gsl_matrix_complex c function comput rankk updat hermitian matrix datac mathc alpha ah beta c datatran codecblasnotran mathc alpha ah beta c datatran codecblasconjtran sinc matrix datac hermitian upper half lower half need store datauplo codecblasupp upper triangl diagon datac use datauplo codecblaslow lower triangl diagon datac use imaginari element diagon automat set zero index singl syrk level bla function int gsl_blas_ssyrk cblas_uplo_t uplo cblas_transpose_t tran float alpha const gsl_matrix_float const gsl_matrix_float b float beta gsl_matrix_float c int gsl_blas_dsyrk cblas_uplo_t uplo cblas_transpose_t tran doubl alpha const gsl_matrix const gsl_matrix b doubl beta gsl_matrix c int gsl_blas_csyrk cblas_uplo_t uplo cblas_transpose_t tran const gsl_complex_float alpha const gsl_matrix_complex_float const gsl_matrix_complex_float b const gsl_complex_float beta gsl_matrix_complex_float c int gsl_blas_zsyrk cblas_uplo_t uplo cblas_transpose_t tran const gsl_complex alpha const gsl_matrix_complex const gsl_matrix_complex b const gsl_complex beta gsl_matrix_complex c function comput rankk updat symmetr matrix datac mathc alpha bt alpha b beta c datatran codecblasnotran mathc alpha b alpha bt beta c datatran codecblastran sinc matrix datac symmetr upper half lower half need store datauplo codecblasupp upper triangl diagon datac use datauplo codecblaslow lower triangl diagon datac use index singl herk level bla function int gsl_blas_cherk cblas_uplo_t uplo cblas_transpose_t tran const gsl_complex_float alpha const gsl_matrix_complex_float const gsl_matrix_complex_float b float beta gsl_matrix_complex_float c int gsl_blas_zherk cblas_uplo_t uplo cblas_transpose_t tran const gsl_complex alpha const gsl_matrix_complex const gsl_matrix_complex b doubl beta gsl_matrix_complex c function comput rankk updat hermitian matrix datac mathc alpha bh alpha b ah beta c datatran codecblasnotran mathc alpha ah b alpha bh beta c datatran codecblasconjtran sinc matrix datac hermitian upper half lower half need store datauplo codecblasupp upper triangl diagon datac use datauplo codecblaslow lower triangl diagon datac use imaginari element diagon automat set zero exampl follow program comput product two matric use level bla function dgemm texinfo math left beginmatrix endmatrix right left beginmatrix endmatrix right left beginmatrix endmatrix right texinfo matric store row major order accord c convent array includ examplesblasc code output program includ examplesblastxt code _sec_blasrefer refer read inform bla standard includ legaci updat interfac standard avail onlin bla homepag bla technic forum websit bla homepag httpwwwnetliborgbla bla technic forum httpwwwnetliborgblasblastforum follow paper contain specif level level level bla c lawson r hanson kincaid f krogh basic linear algebra subprogram fortran usag acm transact mathemat softwar vol page jj dongarra j ducroz hammarl r hanson extend set fortran basic linear algebra subprogram acm transact mathemat softwar vol page jj dongarra duff j ducroz hammarl set level basic linear algebra subprogram acm transact mathemat softwar vol page postscript version latter two paper avail httpwwwnetliborgbla cbla wrapper fortran bla librari avail locat rubric footnot f lowlevel cbla interfac neg stride access vector element revers order ie mathith element given mathniincx mathincx index singl hypergeometr function singl confluent hypergeometr function hypergeometr function describ abramowitz stegun chapter function declar header file filegsl_sf_hypergh function doubl gsl_sf_hyperg_f doubl c doubl x int gsl_sf_hyperg_f_ doubl c doubl x gsl_sf_result result routin comput hypergeometr function texinfo math _f_cx texinfo math fcx relat bessel function fcx gammac xc i_c sqrtx gammac xc j_c sqrtx except gsl_eovrflw gsl_eundrflw function doubl gsl_sf_hyperg_f_int int int n doubl x int gsl_sf_hyperg_f_int_ int int n doubl x gsl_sf_result result routin comput confluent hypergeometr function texinfo math _f_mnx mmnx texinfo math fmnx mmnx integ paramet datam datan except function doubl gsl_sf_hyperg_f doubl doubl b doubl x int gsl_sf_hyperg_f_ doubl doubl b doubl x gsl_sf_result result routin comput confluent hypergeometr function texinfo math _f_abx mabx texinfo math fabx mabx gener paramet dataa datab except function doubl gsl_sf_hyperg_u_int int int n doubl x int gsl_sf_hyperg_u_int_ int int n doubl x gsl_sf_result result routin comput confluent hypergeometr function mathumnx integ paramet datam datan except function int gsl_sf_hyperg_u_int_e_ int int n doubl x gsl_sf_result_ result routin comput confluent hypergeometr function mathumnx integ paramet datam datan use typegsl_sf_result_ type return result extend rang function doubl gsl_sf_hyperg_u doubl doubl b doubl x int gsl_sf_hyperg_u_ doubl doubl b doubl x gsl_sf_result result routin comput confluent hypergeometr function mathuabx except function int gsl_sf_hyperg_u_e_ doubl doubl b doubl x gsl_sf_result_ result routin comput confluent hypergeometr function mathuabx use typegsl_sf_result_ type return result extend rang except function doubl gsl_sf_hyperg_f doubl doubl b doubl c doubl x int gsl_sf_hyperg_f_ doubl doubl b doubl c doubl x gsl_sf_result result routin comput gauss hypergeometr function texinfo math _f_abcx fabcx texinfo math fabcx fabcx mathx argument mathabcx close singular function return error code macrogsl_emaxit seri approxim converg slowli occur region mathx mathc b integ except function doubl gsl_sf_hyperg_f_conj doubl ar doubl ai doubl c doubl x int gsl_sf_hyperg_f_conj_ doubl ar doubl ai doubl c doubl x gsl_sf_result result routin comput gauss hypergeometr function texinfo math _f_a_r a_i ar ai c x texinfo math fa_r a_i ar ai c x complex paramet mathx function doubl gsl_sf_hyperg_f_renorm doubl doubl b doubl c doubl x int gsl_sf_hyperg_f_renorm_ doubl doubl b doubl c doubl x gsl_sf_result result routin comput renorm gauss hypergeometr function texinfo math _f_abcx gammac texinfo math fabcx gammac mathx except function doubl gsl_sf_hyperg_f_conj_renorm doubl ar doubl ai doubl c doubl x int gsl_sf_hyperg_f_conj_renorm_ doubl ar doubl ai doubl c doubl x gsl_sf_result result routin comput renorm gauss hypergeometr function texinfo math _f_a_r a_i a_r a_i c x gammac texinfo math fa_r a_i a_r a_i c x gammac mathx except function doubl gsl_sf_hyperg_f doubl doubl b doubl x int gsl_sf_hyperg_f_ doubl doubl b doubl x gsl_sf_result result routin comput hypergeometr function texinfo math _f_abx texinfo math fabx seri represent diverg hypergeometr seri howev mathx texinfo math _f_abx xa uaabx texinfo math fabx xa uaabx except gsl_edom index singl chebyshev seri singl fit use chebyshev polynomi singl interpol use chebyshev polynomi chebyshev approxim chapter describ routin comput chebyshev approxim univari function chebyshev approxim truncat seri mathfx sum c_n t_nx chebyshev polynomi matht_nx cosn arcco x provid orthogon basi polynomi interv math weight function math sqrtx first chebyshev polynomi matht_x matht_x x matht_x x inform see abramowitz stegun chapter function describ chapter declar header file filegsl_chebyshevh definit type gsl_cheb_seri chebyshev seri store use follow structur typedef struct doubl c coeffici c corder int order order expans doubl lower interv point doubl b upper interv point gsl_cheb_seri approxim made rang mathab use dataord term includ coeffici mathc seri comput use follow convent texinfo math fx c_ sum_n c_n t_nx texinfo fx c_ sum_n c_n t_nx need access coeffici directli creation calcul chebyshev seri function gsl_cheb_seri gsl_cheb_alloc const size_t n function alloc space chebyshev seri order datan return pointer new typegsl_cheb_seri struct function void gsl_cheb_fre gsl_cheb_seri cs function free previous alloc chebyshev seri datac function int gsl_cheb_init gsl_cheb_seri cs const gsl_function f const doubl const doubl b function comput chebyshev approxim datac function dataf rang mathab previous specifi order comput chebyshev approxim mathon process requir mathn function evalu auxiliari function follow function provid inform exist chebyshev seri function size_t gsl_cheb_ord const gsl_cheb_seri cs function return order chebyshev seri datac function size_t gsl_cheb_siz const gsl_cheb_seri cs doubl gsl_cheb_coeff const gsl_cheb_seri cs function return size chebyshev coeffici array codec pointer locat memori chebyshev seri datac chebyshev seri evalu function doubl gsl_cheb_ev const gsl_cheb_seri cs doubl x function evalu chebyshev seri datac given point datax function int gsl_cheb_eval_err const gsl_cheb_seri cs const doubl x doubl result doubl abserr function comput chebyshev seri datac given point datax estim seri dataresult absolut error dataabserr error estim made first neglect term seri function doubl gsl_cheb_eval_n const gsl_cheb_seri cs size_t order doubl x function evalu chebyshev seri datac given point datax given order dataord function int gsl_cheb_eval_n_err const gsl_cheb_seri cs const size_t order const doubl x doubl result doubl abserr function evalu chebyshev seri datac given point datax estim seri dataresult absolut error dataabserr given order dataord error estim made first neglect term seri deftypefun doubl gsl_cheb_eval_mod const gsl_cheb_seri cs doubl x gsl_mode_t mode end deftypefun deftypefun int gsl_cheb_eval_mode_err const gsl_cheb_seri cs const doubl x gsl_mode_t mode doubl result doubl abserr evalu chebyshev seri given point use default order doubl precis mode singl precis order mode end deftypefun deriv integr follow function allow chebyshev seri differenti integr produc new chebyshev seri note error estim produc evalu deriv seri underestim due contribut higher order term neglect function int gsl_cheb_calc_deriv gsl_cheb_seri deriv const gsl_cheb_seri cs function comput deriv seri datac store deriv coeffici previous alloc dataderiv two seri datac dataderiv must alloc order function int gsl_cheb_calc_integ gsl_cheb_seri integ const gsl_cheb_seri cs function comput integr seri datac store integr coeffici previous alloc datainteg two seri datac datainteg must alloc order lower limit integr taken left hand end rang dataa exampl follow exampl program comput chebyshev approxim step function extrem difficult approxim make due discontinu chosen exampl approxim error visibl smooth function chebyshev approxim converg extrem rapidli error would visibl includ exampleschebc code numreffig_cheb show output program origin function th order approxim th order approxim sampl interv mathx _fig_cheb figur imageschebpng scale chebyshev approxim step function refer read follow paper describ use chebyshev seri r brouck ten subroutin manipul chebyshev seri c algorithm commun acm index complex number complex number function describ chapter provid support complex number algorithm take care avoid unnecessari intermedi underflow overflow allow function evalu much complex plane possibl fixm still need done cscseccotcschsechcoth function multiplevalu function branch cut chosen follow convent abramowitz stegun function return princip valu gnu calc turn common lisp languag second edit f_ hp seri calcul complex type defin header file filegsl_complexh correspond complex function arithmet oper defin filegsl_complex_mathh index singl represent complex number singl polar form complex number singl gsl_complex represent complex number complex number repres use type codegsl_complex intern represent type may vari across platform access directli function macro describ allow complex number manipul portabl way refer default form codegsl_complex type given follow struct typedef struct doubl dat gsl_complex real imaginari part store contigu element two element array elimin pad real imaginari part codedat codedat allow struct map correctli onto pack complex array function gsl_complex gsl_complex_rect doubl x doubl function use rectangular cartesian compon mathxi return complex number mathz x inlin version function use macrohave_inlin defin function gsl_complex gsl_complex_polar doubl r doubl theta function return complex number mathz r expi theta r costheta sintheta polar represent datar datatheta macro gsl_real z gsl_imag z macro return real imaginari part complex number dataz macro gsl_set_complex zp x macro use cartesian compon datax datay set real imaginari part complex number point datazp exampl gsl_set_complexz set mathz math macro gsl_set_real zpx gsl_set_imag zpi macro allow real imaginari part complex number point datazp set independ properti complex number index argument complex number function doubl gsl_complex_arg gsl_complex z function return argument complex number dataz mathargz mathpi argz pi index magnitud complex number function doubl gsl_complex_ab gsl_complex z function return magnitud complex number dataz mathz function doubl gsl_complex_ab gsl_complex z function return squar magnitud complex number dataz mathz function doubl gsl_complex_logab gsl_complex z function return natur logarithm magnitud complex number dataz mathlogz allow accur evalu mathlogz mathz close one direct evalu codeloggsl_complex_absz would lead loss precis case index complex arithmet complex arithmet oper function gsl_complex gsl_complex_add gsl_complex gsl_complex b function return sum complex number dataa datab mathzab function gsl_complex gsl_complex_sub gsl_complex gsl_complex b function return differ complex number dataa datab mathzab function gsl_complex gsl_complex_mul gsl_complex gsl_complex b function return product complex number dataa datab mathzab function gsl_complex gsl_complex_div gsl_complex gsl_complex b function return quotient complex number dataa datab mathzab function gsl_complex gsl_complex_add_r gsl_complex doubl x function return sum complex number dataa real number datax mathzax function gsl_complex gsl_complex_sub_r gsl_complex doubl x function return differ complex number dataa real number datax mathzax function gsl_complex gsl_complex_mul_r gsl_complex doubl x function return product complex number dataa real number datax mathzax function gsl_complex gsl_complex_div_r gsl_complex doubl x function return quotient complex number dataa real number datax mathzax function gsl_complex gsl_complex_add_imag gsl_complex doubl function return sum complex number dataa imaginari number mathiy mathzaiy function gsl_complex gsl_complex_sub_imag gsl_complex doubl function return differ complex number dataa imaginari number mathiy mathzaiy function gsl_complex gsl_complex_mul_imag gsl_complex doubl function return product complex number dataa imaginari number mathiy mathzaiy function gsl_complex gsl_complex_div_imag gsl_complex doubl function return quotient complex number dataa imaginari number mathiy mathzaiy index conjug complex number function gsl_complex gsl_complex_conjug gsl_complex z function return complex conjug complex number dataz mathz x function gsl_complex gsl_complex_invers gsl_complex z function return invers reciproc complex number dataz mathz x yx function gsl_complex gsl_complex_neg gsl_complex z function return neg complex number dataz mathz x iy elementari complex function index squar root complex number function gsl_complex gsl_complex_sqrt gsl_complex z function return squar root complex number dataz mathsqrt z branch cut neg real axi result alway lie right half complex plane function gsl_complex gsl_complex_sqrt_r doubl x function return complex squar root real number datax datax may neg index singl power complex number singl exponenti complex number function gsl_complex gsl_complex_pow gsl_complex z gsl_complex function return complex number dataz rais complex power dataa mathza comput mathexplogza use complex logarithm complex exponenti function gsl_complex gsl_complex_pow_r gsl_complex z doubl x function return complex number dataz rais real power datax mathzx function gsl_complex gsl_complex_exp gsl_complex z function return complex exponenti complex number dataz mathexpz index logarithm complex number function gsl_complex gsl_complex_log gsl_complex z function return complex natur logarithm base math complex number dataz mathlogz branch cut neg real axi function gsl_complex gsl_complex_log gsl_complex z function return complex base logarithm complex number dataz mathlog_ z function gsl_complex gsl_complex_log_b gsl_complex z gsl_complex b function return complex basedatab logarithm complex number dataz mathlog_bz quantiti comput ratio mathlogzlogb index trigonometr function complex number complex trigonometr function index singl sin complex number function gsl_complex gsl_complex_sin gsl_complex z function return complex sine complex number dataz mathsinz expiz expizi index cosin complex number function gsl_complex gsl_complex_co gsl_complex z function return complex cosin complex number dataz mathcosz expiz expiz index tangent complex number function gsl_complex gsl_complex_tan gsl_complex z function return complex tangent complex number dataz mathtanz sinzcosz function gsl_complex gsl_complex_sec gsl_complex z function return complex secant complex number dataz mathsecz cosz function gsl_complex gsl_complex_csc gsl_complex z function return complex cosec complex number dataz mathcscz sinz function gsl_complex gsl_complex_cot gsl_complex z function return complex cotang complex number dataz mathcotz tanz index invers complex trigonometr function invers complex trigonometr function function gsl_complex gsl_complex_arcsin gsl_complex z function return complex arcsin complex number dataz matharcsinz branch cut real axi less math greater math function gsl_complex gsl_complex_arcsin_r doubl z function return complex arcsin real number dataz matharcsinz mathz math math function return real valu rang mathpipi mathz less math result real part mathpi posit imaginari part mathz greater math result real part mathpi neg imaginari part function gsl_complex gsl_complex_arcco gsl_complex z function return complex arccosin complex number dataz matharccosz branch cut real axi less math greater math function gsl_complex gsl_complex_arccos_r doubl z function return complex arccosin real number dataz matharccosz mathz math math function return real valu rang mathpi mathz less math result real part mathpi neg imaginari part mathz greater math result pure imaginari posit function gsl_complex gsl_complex_arctan gsl_complex z function return complex arctang complex number dataz matharctanz branch cut imaginari axi mathi mathi function gsl_complex gsl_complex_arcsec gsl_complex z function return complex arcsec complex number dataz matharcsecz arccosz function gsl_complex gsl_complex_arcsec_r doubl z function return complex arcsec real number dataz matharcsecz arccosz function gsl_complex gsl_complex_arccsc gsl_complex z function return complex arccosec complex number dataz matharccscz arcsinz function gsl_complex gsl_complex_arccsc_r doubl z function return complex arccosec real number dataz matharccscz arcsinz function gsl_complex gsl_complex_arccot gsl_complex z function return complex arccotang complex number dataz matharccotz arctanz index singl hyperbol function complex number complex hyperbol function function gsl_complex gsl_complex_sinh gsl_complex z function return complex hyperbol sine complex number dataz mathsinhz expz expz function gsl_complex gsl_complex_cosh gsl_complex z function return complex hyperbol cosin complex number dataz mathcoshz expz expz function gsl_complex gsl_complex_tanh gsl_complex z function return complex hyperbol tangent complex number dataz mathtanhz sinhzcoshz function gsl_complex gsl_complex_sech gsl_complex z function return complex hyperbol secant complex number dataz mathsechz coshz function gsl_complex gsl_complex_csch gsl_complex z function return complex hyperbol cosec complex number dataz mathcschz sinhz function gsl_complex gsl_complex_coth gsl_complex z function return complex hyperbol cotang complex number dataz mathcothz tanhz index singl invers hyperbol function complex number invers complex hyperbol function function gsl_complex gsl_complex_arcsinh gsl_complex z function return complex hyperbol arcsin complex number dataz matharcsinhz branch cut imaginari axi mathi mathi function gsl_complex gsl_complex_arccosh gsl_complex z function return complex hyperbol arccosin complex number dataz matharccoshz branch cut real axi less math note case use neg squar root formula abramowitz stegun give matharccoshzlogzsqrtz function gsl_complex gsl_complex_arccosh_r doubl z function return complex hyperbol arccosin real number dataz matharccoshz function gsl_complex gsl_complex_arctanh gsl_complex z function return complex hyperbol arctang complex number dataz matharctanhz branch cut real axi less math greater math function gsl_complex gsl_complex_arctanh_r doubl z function return complex hyperbol arctang real number dataz matharctanhz function gsl_complex gsl_complex_arcsech gsl_complex z function return complex hyperbol arcsec complex number dataz matharcsechz arccoshz function gsl_complex gsl_complex_arccsch gsl_complex z function return complex hyperbol arccosec complex number dataz matharccschz arcsinhz function gsl_complex gsl_complex_arccoth gsl_complex z function return complex hyperbol arccotang complex number dataz matharccothz arctanhz refer read implement elementari trigonometr function base follow paper e hull thoma f fairgriev ping tak peter tang implement complex elementari function use except handl acm transact mathemat softwar volum pp corrigenda p e hull thoma f fairgriev ping tak peter tang implement complex arcsin arccosin function use except handl acm transact mathemat softwar volum pp gener formula detail branch cut found follow book abramowitz stegun handbook mathemat function circular function term real imaginari part formula invers circular function term real imaginari part formula hyperbol function term real imaginari part formula invers hyperbol functionsrel invers circular function formula dave gillespi calc manual free softwar foundat isbn rubric footnot f note first edit use differ definit index singl mont carlo integr singl stratifi sampl mont carlo integr singl multidimension integr mont carlo integr chapter describ routin multidimension mont carlo integr includ tradit mont carlo method adapt algorithm vega miser use import sampl stratifi sampl techniqu algorithm comput estim multidimension definit integr form math int_x_lx_u dx int_y_ly_u dy fx hypercub region mathx_lx_u mathy_ly_u use fix number function call routin also provid statist estim error result error estim taken guid rather strict error boundrandom sampl region may uncov import featur function result underestim error function defin separ header file routin filegsl_monte_plainh filegsl_monte_miserh filegsl_monte_vegash interfac mont carlo integr routin use gener form interfac alloc alloc memori control variabl workspac routin initi control variabl integr function free space done integr function requir random number gener suppli return estim integr standard deviat accuraci result determin number function call specifi user known level accuraci requir achiev call integr sever time averag individu result desir accuraci obtain random sampl point use within mont carlo routin alway chosen strictli within integr region endpoint singular automat avoid function integr datatyp defin header file filegsl_monteh type gsl_monte_funct data type defin gener function paramet mont carlo integr codedoubl f doubl x size_t dim void param function return valu mathfxparam argument datax paramet dataparam datax array size datadim give coordin point function evalu codesize_t dim number dimens datax codevoid param pointer paramet function exampl quadrat function two dimens math fxi x b x c matha mathb mathc follow code defin typegsl_monte_funct codef could pass integr struct my_f_param doubl doubl b doubl c doubl my_f doubl x size_t dim void p struct my_f_param fp struct my_f_param p dim fprintf stderr error dim abort return fpa x x fpb x x fpc x x gsl_monte_funct f struct my_f_param param ff my_f fdim fparam param function mathfx evalu use follow macro defin gsl_monte_fn_evalfx ffxfdimfparam index plain mont carlo plain mont carlo plain mont carlo algorithm sampl point randomli integr region estim integr error use algorithm estim integr mathef n mathn randomli distribut point mathx_i given texinfo math ef n v langl f rangl v n sum_in fx_i texinfo ef n v f v n sum_in fx_i mathv volum integr region error estim mathsigmaen calcul estim varianc mean texinfo math sigma e n v n sum_in fx_i langl f rangl texinfo sigma e n v n sum_in fx_i f larg mathn varianc decreas asymptot mathvarfn mathvarf true varianc function integr region error estim decreas mathsigmafsqrtn familiar law error decreas mathsqrtn appliesto reduc error factor requir fold increas number sampl point function describ section declar header file filegsl_monte_plainh type gsl_monte_plain_st workspac plain mont carlo integr function gsl_monte_plain_st gsl_monte_plain_alloc size_t dim function alloc initi workspac mont carlo integr datadim dimens function int gsl_monte_plain_init gsl_monte_plain_st function initi previous alloc integr state allow exist workspac reus differ integr function int gsl_monte_plain_integr gsl_monte_funct f const doubl xl const doubl xu size_t dim size_t call gsl_rng r gsl_monte_plain_st doubl result doubl abserr routin use plain mont carlo algorithm integr function dataf datadimdimension hypercub region defin lower upper limit array dataxl dataxu size datadim integr use fix number function call datacal obtain random sampl point use random number gener datar previous alloc workspac data must suppli result integr return dataresult estim absolut error dataabserr function void gsl_monte_plain_fre gsl_monte_plain_st function free memori associ integr state data index singl miser mont carlo integr singl recurs stratifi sampl miser miser miser algorithm press farrar base recurs stratifi sampl techniqu aim reduc overal integr error concentr integr point region highest varianc idea stratifi sampl begin observ two disjoint region matha mathb mont carlo estim integr mathe_af mathe_bf varianc mathsigma_af mathsigma_bf varianc mathvarf combin estim mathef e_af e_bf given texinfo math varf sigma_af n_a sigma_bf n_b texinfo varf sigma_af n_a sigma_bf n_b shown varianc minim distribut point texinfo math n_a n_an_b sigma_a sigma_a sigma_b texinfo n_a n_a n_b sigma_a sigma_a sigma_b henc smallest error estim obtain alloc sampl point proport standard deviat function subregion miser algorithm proce bisect integr region along one coordin axi give two subregion step direct chosen examin mathd possibl bisect select one minim combin varianc two subregion varianc subregion estim sampl fraction total number point avail current step procedur repeat recurs two halfspac best bisect remain sampl point alloc subregion use formula mathn_a mathn_b recurs alloc integr point continu userspecifi depth subregion integr use plain mont carlo estim individu valu error estim combin upward give overal result estim error function describ section declar header file filegsl_monte_miserh type gsl_monte_miser_st workspac use miser mont carlo integr function gsl_monte_miser_st gsl_monte_miser_alloc size_t dim function alloc initi workspac mont carlo integr datadim dimens workspac use maintain state integr function int gsl_monte_miser_init gsl_monte_miser_st function initi previous alloc integr state allow exist workspac reus differ integr function int gsl_monte_miser_integr gsl_monte_funct f const doubl xl const doubl xu size_t dim size_t call gsl_rng r gsl_monte_miser_st doubl result doubl abserr routin use miser mont carlo algorithm integr function dataf datadimdimension hypercub region defin lower upper limit array dataxl dataxu size datadim integr use fix number function call datacal obtain random sampl point use random number gener datar previous alloc workspac data must suppli result integr return dataresult estim absolut error dataabserr function void gsl_monte_miser_fre gsl_monte_miser_st function free memori associ integr state data miser algorithm sever configur paramet chang use follow two function f_ function void gsl_monte_miser_params_get const gsl_monte_miser_st gsl_monte_miser_param param function copi paramet integr state usersuppli dataparam structur function void gsl_monte_miser_params_set gsl_monte_miser_st const gsl_monte_miser_param param function set integr paramet base valu provid dataparam structur typic valu paramet first read use funcgsl_monte_miser_params_get necessari chang made field dataparam structur valu copi back integr state use funcgsl_monte_miser_params_set function use typegsl_monte_miser_param structur contain follow field type gsl_monte_miser_param var doubl estimate_frac paramet specifi fraction current avail number function call alloc estim varianc recurs step default valu var size_t min_cal paramet specifi minimum number function call requir estim varianc number function call alloc estim use dataestimate_frac fall datamin_cal datamin_cal use instead ensur estim maintain reason level accuraci default valu datamin_cal code dim var size_t min_calls_per_bisect paramet specifi minimum number function call requir proceed bisect step recurs step fewer call avail datamin_calls_per_bisect perform plain mont carlo estim current subregion termin branch recurs default valu paramet code min_cal var doubl alpha paramet control estim varianc two subregion bisect combin alloc point recurs sampl overal varianc scale better mathn sinc valu subregion obtain use procedur explicitli minim varianc accommod behavior miser algorithm allow total varianc depend scale paramet mathalpha texinfo math varf sigma_a n_aalpha sigma_b n_balpha texinfo varf sigma_a n_aalpha sigma_b n_balpha author origin paper describ miser recommend valu mathalpha good choic obtain numer experi use default valu implement var doubl dither paramet introduc random fraction variat size datadith bisect use break symmetri integrand concentr near exact center hypercub integr region default valu dither zero variat introduc need typic valu datadith index singl vega mont carlo integr singl import sampl vega vega vega algorithm lepag base import sampl sampl point probabl distribut describ function mathf point concentr region make largest contribut integr gener mont carlo integr mathf sampl point distribut accord probabl distribut describ function mathg obtain estim mathe_gf n math e_gf n efg n correspond varianc math var_gf n varfg n probabl distribut chosen mathg fif shown varianc mathv_gf n vanish error estim zero practic possibl sampl exact distribut mathg arbitrari function import sampl algorithm aim produc effici approxim desir distribut vega algorithm approxim exact distribut make number pass integr region histogram function mathf histogram use defin sampl distribut next pass asymptot procedur converg desir distribut order avoid number histogram bin grow like mathkd probabl distribut approxim separ function mathgx_ x_ ldot g_x_ g_x_ ldot number bin requir mathkd equival locat peak function project integrand onto coordin axe effici vega depend valid assumpt effici peak integrand wellloc integrand rewritten form approxim separ increas effici integr vega vega incorpor number addit featur combin stratifi sampl import sampl integr region divid number box box get fix number point goal box fraction number bin ratio binsperbox less two vega switch kind varianc reduct rather import sampl type gsl_monte_vegas_st workspac use vega mont carlo integr function gsl_monte_vegas_st gsl_monte_vegas_alloc size_t dim function alloc initi workspac mont carlo integr datadim dimens workspac use maintain state integr function int gsl_monte_vegas_init gsl_monte_vegas_st function initi previous alloc integr state allow exist workspac reus differ integr function int gsl_monte_vegas_integr gsl_monte_funct f doubl xl doubl xu size_t dim size_t call gsl_rng r gsl_monte_vegas_st doubl result doubl abserr routin use vega mont carlo algorithm integr function dataf datadimdimension hypercub region defin lower upper limit array dataxl dataxu size datadim integr use fix number function call datacal obtain random sampl point use random number gener datar previous alloc workspac data must suppli result integr return dataresult estim absolut error dataabserr result error estim base weight averag independ sampl chisquar per degre freedom weight averag return via state struct compon codeschisq must consist weight averag reliabl function void gsl_monte_vegas_fre gsl_monte_vegas_st function free memori associ integr state data vega algorithm comput number independ estim integr intern accord codeiter paramet describ return weight averag random sampl integrand occasion produc estim error zero particularli function constant region estim zero error caus weight averag break must handl separ origin fortran implement vega error estim made nonzero substitut small valu typic code implement gsl differ avoid use arbitrari constantit either assign valu weight averag weight preced estim discard accord follow procedur current estim zero error weight averag finit error current estim assign weight averag weight preced estim current estim finit error previou estim zero error previou estim discard weight averag procedur begin current estim current estim zero error previou estim zero error estim averag use arithmet mean error comput converg algorithm test use overal chisquar valu result avail follow function function doubl gsl_monte_vegas_chisq const gsl_monte_vegas_st function return chisquar per degre freedom weight estim integr return valu close valu differ significantli indic valu differ iter inconsist case weight error underestim iter algorithm need obtain reliabl result function void gsl_monte_vegas_runv const gsl_monte_vegas_st doubl result doubl sigma function return raw unaverag valu integr dataresult error datasigma recent iter algorithm vega algorithm highli configur sever paramet chang use follow two function function void gsl_monte_vegas_params_get const gsl_monte_vegas_st gsl_monte_vegas_param param function copi paramet integr state usersuppli dataparam structur function void gsl_monte_vegas_params_set gsl_monte_vegas_st const gsl_monte_vegas_param param function set integr paramet base valu provid dataparam structur typic valu paramet first read use funcgsl_monte_vegas_params_get necessari chang made field dataparam structur valu copi back integr state use funcgsl_monte_vegas_params_set function use typegsl_monte_vegas_param structur contain follow field type gsl_monte_vegas_param var doubl alpha paramet dataalpha control stiff rebin algorithm typic set one two valu zero prevent rebin grid default valu var size_t iter number iter perform call routin default valu iter var int stage set determin stage calcul normal codestag begin new uniform grid empti weight averag call vega codestag retain grid previou run discard weight averag one tune grid use rel small number point larg run codestag optim grid set codestag keep grid weight averag previou run may increas decreas number histogram bin grid depend number call avail choos codestag enter main loop noth chang equival perform addit iter previou call var int mode possibl choic macrogsl_vegas_mode_import macrogsl_vegas_mode_stratifi macrogsl_vegas_mode_importance_onli determin whether vega use import sampl stratifi sampl whether pick low dimens vega use strict stratifi sampl precis stratifi sampl chosen fewer bin per box var int verbos file ostream paramet set level inform print vega inform written stream dataostream default set dataverbos code turn output dataverbos valu code print summari inform weight averag final result valu code also display grid coordin valu code print inform rebin procedur iter field datachisq valu also access directli typegsl_monte_vegas_st use deprec exampl exampl program use mont carlo routin estim valu follow dimension integr theori random walk texinfo math int_pipi dk_x pi int_pipi dk_i pi int_pipi dk_z pi cosk_xcosk_ycosk_z texinfo int_pipi dk_x pi int_pipi dk_i pi int_pipi dk_z pi cosk_xcosk_ycosk_z analyt valu integr shown mathi gamma pi integr give mean time spent origin random walk bodycent cubic lattic three dimens simplic comput integr region math mathpipipi multipli obtain full result integr slowli vari middl region integr singular corner math mathpipi mathpipi mathpipi mont carlo routin select point strictli within integr region special measur need avoid singular includ examplesmontec code function call plain mont carlo algorithm achiev fraction error estim error codesigma roughli consist actual errorth comput result differ true result standard deviat plain result sigma exact error sigma miser algorithm reduc error factor four also correctli estim error miser result sigma exact error sigma case vega algorithm program use initi warmup run function call prepar warm grid follow main run five iter function call chisquar per degre freedom five iter check consist run repeat result converg case estim consist first pass vega warmup result sigma exact error sigma converg result sigma chisqdof vega final result sigma exact error sigma valu codechisq differ significantli would indic inconsist result correspondingli underestim error final estim vega use similar number function call significantli accur two algorithm refer read miser algorithm describ follow articl press farrar wh press gr farrar recurs stratifi sampl multidimension mont carlo integr comput physic v pp vega algorithm describ follow paper gp lepag new algorithm adapt multidimension integr journal comput physic gp lepag vega adapt multidimension integr program cornel preprint cln march rubric footnot f previou method access field directli typegsl_monte_miser_st struct deprec index transport function transport function mathjnx defin integr represent math jnx int_x tn et et dt declar header file filegsl_sf_transporth function doubl gsl_sf_transport_ doubl x int gsl_sf_transport__ doubl x gsl_sf_result result routin comput transport function mathjx except return valu gsl_edom function doubl gsl_sf_transport_ doubl x int gsl_sf_transport__ doubl x gsl_sf_result result routin comput transport function mathjx except return valu gsl_edom gsl_eundrflw function doubl gsl_sf_transport_ doubl x int gsl_sf_transport__ doubl x gsl_sf_result result routin comput transport function mathjx except return valu gsl_edom gsl_eundrflw function doubl gsl_sf_transport_ doubl x int gsl_sf_transport__ doubl x gsl_sf_result result routin comput transport function mathjx except return valu gsl_edom gsl_eundrflw index singl exponenti integr singl integr exponenti inform exponenti integr found abramowitz stegun chapter function declar header file filegsl_sf_expinth exponenti integr index ex ex eix function doubl gsl_sf_expint_ doubl x int gsl_sf_expint_e_ doubl x gsl_sf_result result routin comput exponenti integr mathe_x math e_x int_infti dt expxtt domain x except return valu gsl_edom gsl_eovrflw gsl_eundrflw function doubl gsl_sf_expint_ doubl x int gsl_sf_expint_e_ doubl x gsl_sf_result result routin comput secondord exponenti integr mathe_x math e_x int_infti dt expxtt domain x except return valu gsl_edom gsl_eovrflw gsl_eundrflw function doubl gsl_sf_expint_en int n doubl x int gsl_sf_expint_en_ int n doubl x gsl_sf_result result routin comput exponenti integr mathe_nx order datan math e_nx int_infti dt expxttn domain x except return valu gsl_edom gsl_eovrflw gsl_eundrflw eix function doubl gsl_sf_expint_ei doubl x int gsl_sf_expint_ei_ doubl x gsl_sf_result result routin comput exponenti integr matheix texinfo math hboxeix pv left int_xinfti dt exptt right texinfo eix pvint_xinfti dt exptt mathpv denot princip valu integr domain x except return valu gsl_edom gsl_eovrflw gsl_eundrflw hyperbol integr index singl hyperbol integr singl shix singl chix function doubl gsl_sf_shi doubl x int gsl_sf_shi_e doubl x gsl_sf_result result routin comput integr texinfo math hboxshix int_x dt sinhtt texinfo shix int_x dt sinhtt except return valu gsl_eovrflw gsl_eundrflw function doubl gsl_sf_chi doubl x int gsl_sf_chi_e doubl x gsl_sf_result result routin comput integr texinfo math hboxchix left gamma_ logx int_x dt coshtt right texinfo chix gamma_ logx int_x dt coshtt mathgamma_ euler constant avail macro macrom_eul domain x except return valu gsl_edom gsl_eovrflw gsl_eundrflw ei_x function doubl gsl_sf_expint_ doubl x int gsl_sf_expint__ doubl x gsl_sf_result result routin comput thirdord exponenti integr texinfo math rm ei_x int_x dt expt texinfo ei_x int_x dt expt mathx ge except return valu gsl_edom trigonometr integr index singl trigonometr integr singl six singl cix function doubl gsl_sf_si const doubl x int gsl_sf_si_e doubl x gsl_sf_result result routin comput sine integr texinfo math hboxsix int_x dt sintt texinfo six int_x dt sintt except return valu none function doubl gsl_sf_ci const doubl x int gsl_sf_ci_e doubl x gsl_sf_result result routin comput cosin integr texinfo math hboxcix int_xinfti dt costt texinfo cix int_xinfti dt costt mathx domain x except return valu gsl_edom arctang integr index singl arctang integr function doubl gsl_sf_atanint doubl x int gsl_sf_atanint_ doubl x gsl_sf_result result routin comput arctang integr defin texinfo math hboxatanintx int_x dt arctantt texinfo atanintx int_x dt arctantt domain except return valu index ellipt integr function describ section declar header file filegsl_sf_ellinth inform ellipt integr found abramowitz stegun chapter definit legendr form index legendr form ellipt integr legendr form ellipt integr mathfphik mathephik mathpiphikn defin texinfo math fphik int_phi dt sqrt k sint ephik int_phi dt sqrt k sint piphikn int_phi dt n sint sqrt k sint texinfo fphik int_phi dt sqrt k sint ephik int_phi dt sqrt k sint piphikn int_phi dt n sintsqrt k sint complet legendr form denot mathkk fpi k mathek epi k notat use base carlson numerisch mathematik differ slightli use abramowitz stegun function given term paramet mathm k mathn replac mathn definit carlson form index carlson form ellipt integr carlson symmetr form ellipt integr mathrcxi mathrdxyz mathrfxyz mathrjxyzp defin texinfo math rcxi int_infti dt tx ty rdxyz int_infti dt tx ty tz rfxyz int_infti dt tx ty tz rjxyzp int_infti dt tx ty tz tp texinfo rcxi int_infti dt tx ty rdxyz int_infti dt tx ty tz rfxyz int_infti dt tx ty tz rjxyzp int_infti dt tx ty tz tp legendr form complet ellipt integr function doubl gsl_sf_ellint_kcomp doubl k gsl_mode_t mode int gsl_sf_ellint_kcomp_ doubl k gsl_mode_t mode gsl_sf_result result routin comput complet ellipt integr mathkk accuraci specifi mode variabl datamod note abramowitz stegun defin function term paramet mathm k except return valu gsl_edom function doubl gsl_sf_ellint_ecomp doubl k gsl_mode_t mode int gsl_sf_ellint_ecomp_ doubl k gsl_mode_t mode gsl_sf_result result routin comput complet ellipt integr mathek accuraci specifi mode variabl datamod note abramowitz stegun defin function term paramet mathm k except return valu gsl_edom function doubl gsl_sf_ellint_pcomp doubl k doubl n gsl_mode_t mode int gsl_sf_ellint_pcomp_ doubl k doubl n gsl_mode_t mode gsl_sf_result result routin comput complet ellipt integr mathpikn accuraci specifi mode variabl datamod note abramowitz stegun defin function term paramet mathm k mathsinalpha k chang sign mathn n except return valu gsl_edom legendr form incomplet ellipt integr function doubl gsl_sf_ellint_f doubl phi doubl k gsl_mode_t mode int gsl_sf_ellint_f_ doubl phi doubl k gsl_mode_t mode gsl_sf_result result routin comput incomplet ellipt integr mathfphik accuraci specifi mode variabl datamod note abramowitz stegun defin function term paramet mathm k except return valu gsl_edom function doubl gsl_sf_ellint_ doubl phi doubl k gsl_mode_t mode int gsl_sf_ellint_e_ doubl phi doubl k gsl_mode_t mode gsl_sf_result result routin comput incomplet ellipt integr mathephik accuraci specifi mode variabl datamod note abramowitz stegun defin function term paramet mathm k except return valu gsl_edom function doubl gsl_sf_ellint_p doubl phi doubl k doubl n gsl_mode_t mode int gsl_sf_ellint_p_ doubl phi doubl k doubl n gsl_mode_t mode gsl_sf_result result routin comput incomplet ellipt integr mathpiphikn accuraci specifi mode variabl datamod note abramowitz stegun defin function term paramet mathm k mathsinalpha k chang sign mathn n except return valu gsl_edom function doubl gsl_sf_ellint_d doubl phi doubl k gsl_mode_t mode int gsl_sf_ellint_d_ doubl phi doubl k gsl_mode_t mode gsl_sf_result result function comput incomplet ellipt integr mathdphik defin carlson form mathrdxyz follow relat texinfo math dphik sin phi rd sinphi k sinphi texinfo dphik sinphi rd sinphi k sinphi except return valu gsl_edom carlson form function doubl gsl_sf_ellint_rc doubl x doubl gsl_mode_t mode int gsl_sf_ellint_rc_ doubl x doubl gsl_mode_t mode gsl_sf_result result routin comput incomplet ellipt integr mathrcxi accuraci specifi mode variabl datamod except return valu gsl_edom function doubl gsl_sf_ellint_rd doubl x doubl doubl z gsl_mode_t mode int gsl_sf_ellint_rd_ doubl x doubl doubl z gsl_mode_t mode gsl_sf_result result routin comput incomplet ellipt integr mathrdxyz accuraci specifi mode variabl datamod except return valu gsl_edom function doubl gsl_sf_ellint_rf doubl x doubl doubl z gsl_mode_t mode int gsl_sf_ellint_rf_ doubl x doubl doubl z gsl_mode_t mode gsl_sf_result result routin comput incomplet ellipt integr mathrfxyz accuraci specifi mode variabl datamod except return valu gsl_edom function doubl gsl_sf_ellint_rj doubl x doubl doubl z doubl p gsl_mode_t mode int gsl_sf_ellint_rj_ doubl x doubl doubl z doubl p gsl_mode_t mode gsl_sf_result result routin comput incomplet ellipt integr mathrjxyzp accuraci specifi mode variabl datamod except return valu gsl_edom index singl linear algebra singl solut linear system axb singl matrix factor singl factor matric linear algebra includ includerst chapter describ function solv linear system librari provid linear algebra oper oper directli typegsl_vector typegsl_matrix object routin use standard algorithm golub van loan matrix comput level level bla call effici function describ chapter declar header file filegsl_linalgh index lu decomposit lu decomposit gener mathnbymathn squar matrix matha mathlu decomposit upper lower triangular matric math p l u mathp permut matrix mathl unit lower triangular matrix mathu upper triangular matrix squar matric decomposit use convert linear system matha x b pair triangular system mathl p b mathu x solv forward backsubstitut note mathlu decomposit valid singular matric function int gsl_linalg_lu_decomp gsl_matrix gsl_permut p int signum int gsl_linalg_complex_lu_decomp gsl_matrix_complex gsl_permut p int signum function factor squar matrix dataa mathlu decomposit mathpa lu output diagon upper triangular part input matrix dataa contain matrix mathu lower triangular part input matrix exclud diagon contain mathl diagon element mathl uniti store permut matrix mathp encod permut datap output mathjth column matrix mathp given mathkth column ident matrix mathk p_j mathjth element permut vector sign permut given datasignum valu mathn mathn number interchang permut algorithm use decomposit gaussian elimin partial pivot golub van loan matrix comput algorithm index linear system solut function int gsl_linalg_lu_solv const gsl_matrix lu const gsl_permut p const gsl_vector b gsl_vector x int gsl_linalg_complex_lu_solv const gsl_matrix_complex lu const gsl_permut p const gsl_vector_complex b gsl_vector_complex x function solv squar system matha x b use mathlu decomposit matha datalu datap given funcgsl_linalg_lu_decomp funcgsl_linalg_complex_lu_decomp input function int gsl_linalg_lu_svx const gsl_matrix lu const gsl_permut p gsl_vector x int gsl_linalg_complex_lu_svx const gsl_matrix_complex lu const gsl_permut p gsl_vector_complex x function solv squar system matha x b inplac use precomput mathlu decomposit matha datalu datap input datax contain righthand side mathb replac solut output index singl refin solut linear system singl iter refin solut linear system singl linear system refin solut function int gsl_linalg_lu_refin const gsl_matrix const gsl_matrix lu const gsl_permut p const gsl_vector b gsl_vector x gsl_vector work int gsl_linalg_complex_lu_refin const gsl_matrix_complex const gsl_matrix_complex lu const gsl_permut p const gsl_vector_complex b gsl_vector_complex x gsl_vector_complex work function appli iter improv datax solut matha x b precomput mathlu decomposit matha datalu datap addit workspac length datan requir datawork index singl invers matrix lu decomposit singl matrix invers function int gsl_linalg_lu_invert const gsl_matrix lu const gsl_permut p gsl_matrix invers int gsl_linalg_complex_lu_invert const gsl_matrix_complex lu const gsl_permut p gsl_matrix_complex invers function comput invers matrix matha mathlu decomposit datalu datap store result matrix datainvers invers comput solv system matha x b column ident matrix prefer avoid direct use invers whenev possibl linear solver function obtain result effici reliabl consult introductori textbook numer linear algebra detail index singl determin matrix lu decomposit singl matrix determin function doubl gsl_linalg_lu_det gsl_matrix lu int signum gsl_complex gsl_linalg_complex_lu_det gsl_matrix_complex lu int signum function comput determin matrix matha mathlu decomposit datalu determin comput product diagon element mathu sign row permut datasignum index logarithm determin matrix function doubl gsl_linalg_lu_lndet gsl_matrix lu doubl gsl_linalg_complex_lu_lndet gsl_matrix_complex lu function comput logarithm absolut valu determin matrix matha mathlndeta mathlu decomposit datalu function may use direct comput determin would overflow underflow index sign determin matrix function int gsl_linalg_lu_sgndet gsl_matrix lu int signum gsl_complex gsl_linalg_complex_lu_sgndet gsl_matrix_complex lu int signum function comput sign phase factor determin matrix matha mathdetadeta mathlu decomposit datalu index qr decomposit qr decomposit gener rectangular mathmbymathn matrix matha mathqr decomposit product orthogon mathmbymathm squar matrix mathq mathqt q mathmbymathn righttriangular matrix mathr math q r decomposit use convert linear system matha x b triangular system mathr x qt b solv backsubstitut anoth use mathqr decomposit comput orthonorm basi set vector first mathn column mathq form orthonorm basi rang matha mathrana matha full column rank function int gsl_linalg_qr_decomp gsl_matrix gsl_vector tau function factor mathmbymathn matrix dataa mathqr decomposit matha q r output diagon upper triangular part input matrix contain matrix mathr vector datatau column lower triangular part matrix dataa contain household coeffici household vector encod orthogon matrix dataq vector datatau must length mathkminmn matrix mathq relat compon mathq q_k q_ q_ mathq_i tau_i v_i v_it mathv_i household vector mathv_i aiiaiiami storag scheme use lapack algorithm use perform decomposit household qr golub van loan matrix comput algorithm function int gsl_linalg_qr_solv const gsl_matrix qr const gsl_vector tau const gsl_vector b gsl_vector x function solv squar system matha x b use mathqr decomposit matha held dataqr datatau must comput previous funcgsl_linalg_qr_decomp leastsquar solut rectangular system found use funcgsl_linalg_qr_lssolv function int gsl_linalg_qr_svx const gsl_matrix qr const gsl_vector tau gsl_vector x function solv squar system matha x b inplac use mathqr decomposit matha held dataqr datatau must comput previous funcgsl_linalg_qr_decomp input datax contain righthand side mathb replac solut output function int gsl_linalg_qr_lssolv const gsl_matrix qr const gsl_vector tau const gsl_vector b gsl_vector x gsl_vector residu function find least squar solut overdetermin system matha x b matrix dataa row column least squar solut minim euclidean norm residu mathax bthe routin requir input mathqr decomposit matha dataqr datatau given funcgsl_linalg_qr_decomp solut return datax residu comput byproduct store dataresidu function int gsl_linalg_qr_qtvec const gsl_matrix qr const gsl_vector tau gsl_vector v function appli matrix mathqt encod decomposit dataqr datatau vector datav store result mathqt v datav matrix multipl carri directli use encod household vector without need form full matrix mathqt function int gsl_linalg_qr_qvec const gsl_matrix qr const gsl_vector tau gsl_vector v function appli matrix mathq encod decomposit dataqr datatau vector datav store result mathq v datav matrix multipl carri directli use encod household vector without need form full matrix mathq function int gsl_linalg_qr_qtmat const gsl_matrix qr const gsl_vector tau gsl_matrix function appli matrix mathqt encod decomposit dataqr datatau matrix dataa store result mathqt dataa matrix multipl carri directli use encod household vector without need form full matrix mathqt function int gsl_linalg_qr_rsolv const gsl_matrix qr const gsl_vector b gsl_vector x function solv triangular system mathr x b datax may use product mathb qt b alreadi comput use funcgsl_linalg_qr_qtvec function int gsl_linalg_qr_rsvx const gsl_matrix qr gsl_vector x function solv triangular system mathr x b datax inplac input datax contain righthand side mathb replac solut output function may use product mathb qt b alreadi comput use funcgsl_linalg_qr_qtvec function int gsl_linalg_qr_unpack const gsl_matrix qr const gsl_vector tau gsl_matrix q gsl_matrix r function unpack encod mathqr decomposit dataqr datatau matric dataq datar dataq mathmbymathm datar mathmbymathn function int gsl_linalg_qr_qrsolv gsl_matrix q gsl_matrix r const gsl_vector b gsl_vector x function solv system mathr x qt b datax use mathqr decomposit matrix avail unpack form dataq datar function int gsl_linalg_qr_upd gsl_matrix q gsl_matrix r gsl_vector w const gsl_vector v function perform rank updat mathw vt mathqr decomposit dataq datar updat given mathqr q r w vt output matric mathq mathr also orthogon right triangular note dataw destroy updat function int gsl_linalg_r_solv const gsl_matrix r const gsl_vector b gsl_vector x function solv triangular system mathr x b mathnbymathn matrix datar function int gsl_linalg_r_svx const gsl_matrix r gsl_vector x function solv triangular system mathr x b inplac input datax contain righthand side mathb replac solut output index qr decomposit column pivot qr decomposit column pivot mathqr decomposit mathmbymathn matrix matha extend rank defici case introduc column permut mathp math p q r first mathr column mathq form orthonorm basi rang matha matrix column rank mathr decomposit also use convert linear system matha x b triangular system mathr qt b x p solv backsubstitut permut denot mathqr decomposit column pivot mathqrpt sinc matha q r pt matha rank defici mathr rm ranka matrix mathr partit texinfo math r left beginmatrix r_ r_ r_ endmatrix right approx left beginmatrix r_ r_ endmatrix right texinfo r r r r r r mathr_ mathrbymathr nonsingular case basic least squar solut overdetermin system matha x b obtain texinfo math x p left beginmatrix r_ c_ endmatrix right texinfo x p r c mathc_ consist first mathr element mathqt b basic solut guarante minimum norm solut unless mathr_ see refcomplet orthogon decomposit cod function int gsl_linalg_qrpt_decomp gsl_matrix gsl_vector tau gsl_permut p int signum gsl_vector norm function factor mathmbymathn matrix dataa mathqrpt decomposit matha q r pt output diagon upper triangular part input matrix contain matrix mathr permut matrix mathp store permut datap sign permut given datasignum valu mathn mathn number interchang permut vector datatau column lower triangular part matrix dataa contain household coeffici vector encod orthogon matrix dataq vector datatau must length mathkminmn matrix mathq relat compon mathq q_k q_ q_ mathq_i tau_i v_i v_it mathv_i household vector math v_i aiiaiiami storag scheme use lapack vector datanorm workspac length datan use column pivot algorithm use perform decomposit household qr column pivot golub van loan matrix comput algorithm function int gsl_linalg_qrpt_decomp const gsl_matrix gsl_matrix q gsl_matrix r gsl_vector tau gsl_permut p int signum gsl_vector norm function factor matrix dataa decomposit matha q r pt without modifi dataa store output separ matric dataq datar function int gsl_linalg_qrpt_solv const gsl_matrix qr const gsl_vector tau const gsl_permut p const gsl_vector b gsl_vector x function solv squar system matha x b use mathqrpt decomposit matha held dataqr datatau datap must comput previous funcgsl_linalg_qrpt_decomp function int gsl_linalg_qrpt_svx const gsl_matrix qr const gsl_vector tau const gsl_permut p gsl_vector x function solv squar system matha x b inplac use mathqrpt decomposit matha held dataqr datatau datap input datax contain righthand side mathb replac solut output function int gsl_linalg_qrpt_lssolv const gsl_matrix qr const gsl_vector tau const gsl_permut p const gsl_vector b gsl_vector x gsl_vector residu function find least squar solut overdetermin system matha x b matrix dataa row column assum full rank least squar solut minim euclidean norm residu mathb x routin requir input mathqr decomposit matha dataqr datatau datap given funcgsl_linalg_qrpt_decomp solut return datax residu comput byproduct store dataresidu rank defici matric funcgsl_linalg_qrpt_lssolv use instead function int gsl_linalg_qrpt_lssolv const gsl_matrix qr const gsl_vector tau const gsl_permut p const gsl_vector b const size_t rank gsl_vector x gsl_vector residu function find least squar solut overdetermin system matha x b matrix dataa row column rank given input datarank user know rank matha routin funcgsl_linalg_qrpt_rank call estim least squar solut socal basic solut discuss may minimum norm solut routin requir input mathqr decomposit matha dataqr datatau datap given funcgsl_linalg_qrpt_decomp solut return datax residu comput byproduct store dataresidu function int gsl_linalg_qrpt_qrsolv const gsl_matrix q const gsl_matrix r const gsl_permut p const gsl_vector b gsl_vector x function solv squar system mathr pt x qt b datax use mathqr decomposit matrix avail unpack form dataq datar function int gsl_linalg_qrpt_upd gsl_matrix q gsl_matrix r const gsl_permut p gsl_vector w const gsl_vector v function perform rank updat mathw vt mathqrpt decomposit dataq datar datap updat given mathqr q r w vt p output matric mathq mathr also orthogon right triangular note dataw destroy updat permut datap chang function int gsl_linalg_qrpt_rsolv const gsl_matrix qr const gsl_permut p const gsl_vector b gsl_vector x function solv triangular system mathr pt x b mathnbymathn matrix mathr contain dataqr function int gsl_linalg_qrpt_rsvx const gsl_matrix qr const gsl_permut p gsl_vector x function solv triangular system mathr pt x b inplac mathnbymathn matrix mathr contain dataqr input datax contain righthand side mathb replac solut output function size_t gsl_linalg_qrpt_rank const gsl_matrix qr const doubl tol function estim rank triangular matrix mathr contain dataqr algorithm simpli count number diagon element mathr whose absolut valu greater specifi toler datatol input datatol neg default valu math n epsmaxdiagr use function int gsl_linalg_qrpt_rcond const gsl_matrix qr doubl rcond gsl_vector work function estim reciproc condit number use norm mathr factor store upper triangl dataqr reciproc condit number estim defin math r_ cdot r_ store datarcond addit workspac size math n requir datawork index complet orthogon decomposit _cod complet orthogon decomposit complet orthogon decomposit mathmbymathn matrix matha gener qr decomposit column pivot given texinfo math p q left beginmatrix r_ endmatrix right zt texinfo p q r zt mathp mathnbymathn permut matrix mathq mathmbymathm orthogon mathr_ mathrbymathr upper triangular mathr rm ranka mathz mathnbymathn orthogon matha full rank mathr_ r mathz reduc qr decomposit column pivot rank defici least squar problem mathmin_x b ax solut vector mathx uniqu howev requir mathx minim complet orthogon decomposit give us abil comput uniqu minimum norm solut given texinfo math x p z left beginmatrix r_ c_ endmatrix right texinfo x p z r c vector mathc_ first mathr element mathqt b cod also enabl straightforward solut regular least squar problem tikhonov standard form written math min_x b x lambda x mathlambda regular paramet repres tradeoff minim residu norm mathb x solut norm mathx system solut given texinfo math x p z left beginmatrix y_ endmatrix right texinfo x p z mathy_ vector length mathr found solv texinfo math left beginmatrix r_ lambda i_r endmatrix right y_ left beginmatrix c_ endmatrix right texinfo r y_ c_ lambda i_r mathc_ defin equat solv effici differ valu mathlambda use qr factor left hand side matrix function int gsl_linalg_cod_decomp gsl_matrix gsl_vector tau_q gsl_vector tau_z gsl_permut p size_t rank gsl_vector work int gsl_linalg_cod_decomp_ gsl_matrix gsl_vector tau_q gsl_vector tau_z gsl_permut p doubl tol size_t rank gsl_vector work function factor mathmbymathn matrix dataa decomposit matha q r z pt rank dataa comput number diagon element mathr greater toler datatol output datarank datatol specifi default valu use see funcgsl_linalg_qrpt_rank output permut matrix mathp store datap matrix mathr_ store upper datarankbydatarank block dataa matric mathq mathz encod pack storag dataa output vector datatau_q datatau_z contain household scalar correspond matric mathq mathz respect must length mathk minmn vector datawork addit workspac length mathn function int gsl_linalg_cod_lssolv const gsl_matrix qrzt const gsl_vector tau_q const gsl_vector tau_z const gsl_permut p const size_t rank const gsl_vector b gsl_vector x gsl_vector residu function find uniqu minimum norm least squar solut overdetermin system matha x b matrix dataa row column least squar solut minim euclidean norm residu mathb x well norm solut mathx routin requir input mathqrzt decomposit matha dataqrzt datatau_q datatau_z datap datarank given funcgsl_linalg_cod_decomp solut return datax residu mathb ax comput byproduct store dataresidu function int gsl_linalg_cod_lssolv const doubl lambda const gsl_matrix qrzt const gsl_vector tau_q const gsl_vector tau_z const gsl_permut p const size_t rank const gsl_vector b gsl_vector x gsl_vector residu gsl_matrix gsl_vector work function find solut regular least squar problem tikhonov standard form mathmin_x b ax lambda x routin requir input mathqrzt decomposit matha dataqrzt datatau_q datatau_z datap datarank given funcgsl_linalg_cod_decomp paramet mathlambda suppli datalambda solut return datax residu mathb ax store dataresidu output data addit workspac size datarankbydatarank datawork addit workspac length datarank function int gsl_linalg_cod_unpack const gsl_matrix qrzt const gsl_vector tau_q const gsl_vector tau_z const size_t rank gsl_matrix q gsl_matrix r gsl_matrix z function unpack encod mathqrzt decomposit dataqrzt datatau_q datatau_z datarank matric dataq datar dataz dataq mathmbymathm datar mathmbymathn dataz mathnbymathn function int gsl_linalg_cod_matz const gsl_matrix qrzt const gsl_vector tau_z const size_t rank gsl_matrix gsl_vector work function multipli input matrix dataa right dataz matha z use encod mathqrzt decomposit dataqrzt datatau_z datarank dataa must mathn column may number row addit workspac length mathm provid datawork index svd singular valu decomposit singular valu decomposit gener rectangular mathmbymathn matrix matha singular valu decomposit svd product mathmbymathn orthogon matrix mathu mathnbymathn diagon matrix singular valu math transpos mathnbymathn orthogon squar matrix mathv math u vt singular valu mathsigma_i s_ii nonneg gener chosen form nonincreas sequenc texinfo math sigma_ ge sigma_ ge ge sigma_n ge texinfo math sigma_ sigma_ sigma_n singular valu decomposit matrix mani practic use condit number matrix given ratio largest singular valu smallest singular valu presenc zero singular valu indic matrix singular number nonzero singular valu indic rank matrix practic singular valu decomposit rankdefici matrix produc exact zero singular valu due finit numer precis small singular valu edit choos suitabl toler rankdefici matrix null space matha given column mathv correspond zero singular valu similarli rang matha given column mathu correspond nonzero singular valu note routin comput thin version svd mathu mathmbymathn orthogon matrix allow inplac comput commonlyus form practic mathemat full svd defin mathu mathmbymathm orthogon matrix math mathmbymathn diagon matrix addit row zero function int gsl_linalg_sv_decomp gsl_matrix gsl_matrix v gsl_vector gsl_vector work function factor mathmbymathn matrix dataa singular valu decomposit matha u vt mathm ge n output matrix dataa replac mathu diagon element singular valu matrix math store vector data singular valu nonneg form nonincreas sequenc maths_ maths_n matrix datav contain element mathv untranspos form form product mathu vt necessari take transpos datav workspac length datan requir datawork routin use golubreinsch svd algorithm function int gsl_linalg_sv_decomp_mod gsl_matrix gsl_matrix x gsl_matrix v gsl_vector gsl_vector work function comput svd use modifi golubreinsch algorithm faster mathm gg n requir vector datawork length datan mathnbymathn matrix datax addit work space index jacobi orthogon function int gsl_linalg_sv_decomp_jacobi gsl_matrix gsl_matrix v gsl_vector function comput svd mathmbymathn matrix dataa use onesid jacobi orthogon mathm ge n jacobi method comput singular valu higher rel accuraci golubreinsch algorithm see refer detail function int gsl_linalg_sv_solv const gsl_matrix u const gsl_matrix v const gsl_vector const gsl_vector b gsl_vector x function solv system matha x b use singular valu decomposit datau data datav matha must comput previous funcgsl_linalg_sv_decomp nonzero singular valu use comput solut part solut correspond singular valu zero ignor singular valu edit set zero call function overdetermin case dataa row column system solv least squar sens return solut datax minim matha x b_ function int gsl_linalg_sv_leverag const gsl_matrix u gsl_vector h function comput statist leverag valu mathh_i matrix matha use singular valu decomposit datau data datav previous comput funcgsl_linalg_sv_decomp mathh_i diagon valu matrix matha depend matrix datau input function index singl choleski decomposit singl squar root matrix choleski decomposit singl matrix squar root choleski decomposit _sec_choleskydecomposit choleski decomposit symmetr posit definit squar matrix matha choleski decomposit product lower triangular matrix mathl transpos mathlt math l lt sometim refer take squareroot matrix choleski decomposit carri eigenvalu matrix posit decomposit use convert linear system matha x b pair triangular system mathl b mathlt x solv forward backsubstitut matrix matha near singular sometim possibl reduc condit number recov accur solut vector mathx scale texinfo math left right left x right b texinfo math x b math diagon matrix whose element given maths_ii sqrta_ii scale also known jacobi precondit routin solv scale unscal system function int gsl_linalg_cholesky_decomp gsl_matrix int gsl_linalg_complex_cholesky_decomp gsl_matrix_complex function factor symmetr positivedefinit squar matrix dataa choleski decomposit matha l lt matha l ldagger complex case input valu diagon lowertriangular part matrix dataa use upper triangular part ignor output diagon lower triangular part input matrix dataa contain matrix mathl upper triangular part unmodifi matrix positivedefinit decomposit fail return error code macrogsl_edom test whether matrix positivedefinit disabl error handler first avoid trigger error function int gsl_linalg_cholesky_decomp gsl_matrix function deprec provid backward compat function int gsl_linalg_cholesky_solv const gsl_matrix choleski const gsl_vector b gsl_vector x int gsl_linalg_complex_cholesky_solv const gsl_matrix_complex choleski const gsl_vector_complex b gsl_vector_complex x function solv system matha x b use choleski decomposit matha held matrix datacholeski must previous comput funcgsl_linalg_cholesky_decomp funcgsl_linalg_complex_cholesky_decomp function int gsl_linalg_cholesky_svx const gsl_matrix choleski gsl_vector x int gsl_linalg_complex_cholesky_svx const gsl_matrix_complex choleski gsl_vector_complex x function solv system matha x b inplac use choleski decomposit matha held matrix datacholeski must previous comput funcgsl_linalg_cholesky_decomp funcgsl_linalg_complex_cholesky_decomp input datax contain righthand side mathb replac solut output function int gsl_linalg_cholesky_invert gsl_matrix choleski int gsl_linalg_complex_cholesky_invert gsl_matrix_complex choleski function comput invers matrix choleski decomposit datacholeski must previous comput funcgsl_linalg_cholesky_decomp funcgsl_linalg_complex_cholesky_decomp output invers store inplac datacholeski function int gsl_linalg_cholesky_decomp gsl_matrix gsl_vector function calcul diagon scale transform math symmetr positivedefinit squar matrix dataa comput choleski decomposit math l lt input valu diagon lowertriangular part matrix dataa use upper triangular part ignor output diagon lower triangular part input matrix dataa contain matrix mathl upper triangular part input matrix overwritten mathlt diagon term ident mathl mathlt matrix positivedefinit decomposit fail return error code macrogsl_edom diagon scale factor store data output test whether matrix positivedefinit disabl error handler first avoid trigger error function int gsl_linalg_cholesky_solv const gsl_matrix choleski const gsl_vector const gsl_vector b gsl_vector x function solv system math x b use choleski decomposit math held matrix datacholeski must previous comput funcgsl_linalg_cholesky_decomp function int gsl_linalg_cholesky_svx const gsl_matrix choleski const gsl_vector gsl_vector x function solv system math x b inplac use choleski decomposit math held matrix datacholeski must previous comput funcgsl_linalg_cholesky_decomp input datax contain righthand side mathb replac solut output function int gsl_linalg_cholesky_scal const gsl_matrix gsl_vector function calcul diagon scale transform symmetr posit definit matrix dataa math condit number within factor mathn matrix smallest possibl condit number possibl diagon scale output data contain scale factor given maths_i sqrta_ii matha_ii le correspond scale factor maths_i set math function int gsl_linalg_cholesky_scale_appli gsl_matrix const gsl_vector function appli scale transform data matrix dataa output dataa replac math function int gsl_linalg_cholesky_rcond const gsl_matrix choleski doubl rcond gsl_vector work function estim reciproc condit number use norm symmetr posit definit matrix matha use choleski decomposit provid datacholeski reciproc condit number estim defin math a_ cdot a_ store datarcond addit workspac size math n requir datawork index singl choleski decomposit pivot singl pivot choleski decomposit pivot choleski decomposit symmetr posit definit squar matrix matha altern choleski decomposit product lower unit triangular matrix mathl diagon matrix mathd mathlt given mathl lt equival choleski formul discuss standard choleski lower triangular factor given mathl illcondit matric help use pivot strategi prevent entri mathd mathl grow larg also ensur mathd_ ge d_ ge cdot ge d_n mathd_i diagon entri mathd final decomposit given math p pt l lt mathp permut matrix function int gsl_linalg_pcholesky_decomp gsl_matrix gsl_permut p function factor symmetr positivedefinit squar matrix dataa pivot choleski decomposit mathp pt l lt input valu diagon lowertriangular part matrix dataa use construct factor output diagon input matrix dataa store diagon element mathd lower triangular portion dataa contain matrix mathl sinc mathl one diagon need explicit store upper triangular portion dataa unmodifi permut matrix mathp store datap output function int gsl_linalg_pcholesky_solv const gsl_matrix ldlt const gsl_permut p const gsl_vector b gsl_vector x function solv system matha x b use pivot choleski decomposit matha held matrix dataldlt permut datap must previous comput funcgsl_linalg_pcholesky_decomp function int gsl_linalg_pcholesky_svx const gsl_matrix ldlt const gsl_permut p gsl_vector x function solv system matha x b inplac use pivot choleski decomposit matha held matrix dataldlt permut datap must previous comput funcgsl_linalg_pcholesky_decomp input datax contain right hand side vector mathb replac solut vector output function int gsl_linalg_pcholesky_decomp gsl_matrix gsl_permut p gsl_vector function comput pivot choleski factor matrix math input matrix dataa symmetr posit definit diagon scale matrix data comput reduc condit number dataa much possibl see refcholeski decomposit sec_choleskydecomposit inform matrix data pivot choleski decomposit satisfi mathp pt l lt input valu diagon lowertriangular part matrix dataa use construct factor output diagon input matrix dataa store diagon element mathd lower triangular portion dataa contain matrix mathl sinc mathl one diagon need explicit store upper triangular portion dataa unmodifi permut matrix mathp store datap output diagon scale transform store data output function int gsl_linalg_pcholesky_solv const gsl_matrix ldlt const gsl_permut p const gsl_vector const gsl_vector b gsl_vector x function solv system math x b use pivot choleski decomposit math held matrix dataldlt permut datap vector data must previous comput funcgsl_linalg_pcholesky_decomp function int gsl_linalg_pcholesky_svx const gsl_matrix ldlt const gsl_permut p const gsl_vector gsl_vector x function solv system math x b inplac use pivot choleski decomposit math held matrix dataldlt permut datap vector data must previous comput funcgsl_linalg_pcholesky_decomp input datax contain right hand side vector mathb replac solut vector output function int gsl_linalg_pcholesky_invert const gsl_matrix ldlt const gsl_permut p gsl_matrix ainv function comput invers matrix matha use pivot choleski decomposit store dataldlt datap output matrix dataainv contain matha function int gsl_linalg_pcholesky_rcond const gsl_matrix ldlt const gsl_permut p doubl rcond gsl_vector work function estim reciproc condit number use norm symmetr posit definit matrix matha use pivot choleski decomposit provid dataldlt reciproc condit number estim defin math a_ cdot a_ store datarcond addit workspac size math n requir datawork index singl choleski decomposit modifi singl modifi choleski decomposit modifi choleski decomposit modifi choleski decomposit suitabl solv system matha x b matha symmetr indefinit matrix matric aris nonlinear optim algorithm standard choleski decomposit requir posit definit matrix would fail case instead resort method like qr svd take account symmetri matrix instead introduc small perturb matrix matha make posit definit use choleski decomposit perturb matrix result decomposit satisfi math p e pt l lt mathp permut matrix math diagon perturb matrix mathl unit lower triangular mathd diagon matha suffici posit definit perturb matrix math zero method equival pivot choleski algorithm indefinit matric perturb matrix math comput ensur matha e posit definit well condit function int gsl_linalg_mcholesky_decomp gsl_matrix gsl_permut p gsl_vector e function factor symmetr indefinit squar matrix dataa modifi choleski decomposit mathp e pt l lt input valu diagon lowertriangular part matrix dataa use construct factor output diagon input matrix dataa store diagon element mathd lower triangular portion dataa contain matrix mathl sinc mathl one diagon need explicit store upper triangular portion dataa unmodifi permut matrix mathp store datap output diagon perturb matrix store data output paramet data may set null requir function int gsl_linalg_mcholesky_solv const gsl_matrix ldlt const gsl_permut p const gsl_vector b gsl_vector x function solv perturb system matha e x b use choleski decomposit matha e held matrix dataldlt permut datap must previous comput funcgsl_linalg_mcholesky_decomp function int gsl_linalg_mcholesky_svx const gsl_matrix ldlt const gsl_permut p gsl_vector x function solv perturb system matha e x b inplac use choleski decomposit matha e held matrix dataldlt permut datap must previous comput funcgsl_linalg_mcholesky_decomp input datax contain right hand side vector mathb replac solut vector output function int gsl_linalg_mcholesky_rcond const gsl_matrix ldlt const gsl_permut p doubl rcond gsl_vector work function estim reciproc condit number use norm perturb matrix matha e use pivot choleski decomposit provid dataldlt reciproc condit number estim defin math e_ cdot e_ store datarcond addit workspac size math n requir datawork index tridiagon decomposit tridiagon decomposit real symmetr matric symmetr matrix matha factor similar transform form math q qt mathq orthogon matrix matht symmetr tridiagon matrix function int gsl_linalg_symmtd_decomp gsl_matrix gsl_vector tau function factor symmetr squar matrix dataa symmetr tridiagon decomposit mathq qt output diagon subdiagon part input matrix dataa contain tridiagon matrix matht remain lower triangular part input matrix contain household vector togeth household coeffici datatau encod orthogon matrix mathq storag scheme use lapack upper triangular part dataa referenc function int gsl_linalg_symmtd_unpack const gsl_matrix const gsl_vector tau gsl_matrix q gsl_vector diag gsl_vector subdiag function unpack encod symmetr tridiagon decomposit dataa datatau obtain funcgsl_linalg_symmtd_decomp orthogon matrix dataq vector diagon element datadiag vector subdiagon element datasubdiag function int gsl_linalg_symmtd_unpack_t const gsl_matrix gsl_vector diag gsl_vector subdiag function unpack diagon subdiagon encod symmetr tridiagon decomposit dataa datatau obtain funcgsl_linalg_symmtd_decomp vector datadiag datasubdiag index tridiagon decomposit tridiagon decomposit hermitian matric hermitian matrix matha factor similar transform form math u ut mathu unitari matrix matht real symmetr tridiagon matrix function int gsl_linalg_hermtd_decomp gsl_matrix_complex gsl_vector_complex tau function factor hermitian matrix dataa symmetr tridiagon decomposit mathu ut output real part diagon subdiagon part input matrix dataa contain tridiagon matrix matht remain lower triangular part input matrix contain household vector togeth household coeffici datatau encod unitari matrix mathu storag scheme use lapack upper triangular part dataa imaginari part diagon referenc function int gsl_linalg_hermtd_unpack const gsl_matrix_complex const gsl_vector_complex tau gsl_matrix_complex u gsl_vector diag gsl_vector subdiag function unpack encod tridiagon decomposit dataa datatau obtain funcgsl_linalg_hermtd_decomp unitari matrix datau real vector diagon element datadiag real vector subdiagon element datasubdiag function int gsl_linalg_hermtd_unpack_t const gsl_matrix_complex gsl_vector diag gsl_vector subdiag function unpack diagon subdiagon encod tridiagon decomposit dataa datatau obtain funcgsl_linalg_hermtd_decomp real vector datadiag datasubdiag index hessenberg decomposit hessenberg decomposit real matric gener real matrix matha decompos orthogon similar transform form math u h ut mathu orthogon mathh upper hessenberg matrix mean zero first subdiagon hessenberg reduct first step schur decomposit nonsymmetr eigenvalu problem applic area well function int gsl_linalg_hessenberg_decomp gsl_matrix gsl_vector tau function comput hessenberg decomposit matrix dataa appli similar transform mathh ut u output mathh store upper portion dataa inform requir construct matrix mathu store lower triangular portion dataa mathu product mathn household matric household vector store lower portion dataa subdiagon household coeffici store vector datatau datatau must length datan function int gsl_linalg_hessenberg_unpack gsl_matrix h gsl_vector tau gsl_matrix u function construct orthogon matrix mathu inform store hessenberg matrix datah along vector datatau datah datatau output funcgsl_linalg_hessenberg_decomp function int gsl_linalg_hessenberg_unpack_accum gsl_matrix h gsl_vector tau gsl_matrix v function similar funcgsl_linalg_hessenberg_unpack except accumul matrix datau datav mathv vu matrix datav must initi prior call function set datav ident matrix provid result funcgsl_linalg_hessenberg_unpack datah order datan datav must datan column may number row function int gsl_linalg_hessenberg_set_zero gsl_matrix h function set lower triangular portion datah subdiagon zero use clear household vector call funcgsl_linalg_hessenberg_decomp index hessenberg triangular decomposit hessenbergtriangular decomposit real matric gener real matrix pair matha mathb decompos orthogon similar transform form texinfo math u h vt b u r vt texinfo u h vt b u r vt mathu mathv orthogon mathh upper hessenberg matrix mathr upper triangular hessenbergtriangular reduct first step gener schur decomposit gener eigenvalu problem function int gsl_linalg_hesstri_decomp gsl_matrix gsl_matrix b gsl_matrix u gsl_matrix v gsl_vector work function comput hessenbergtriangular decomposit matrix pair dataa datab output mathh store dataa mathr store datab datau datav provid may null similar transform store addit workspac length mathn need datawork index bidiagon real matric bidiagon gener matrix matha factor similar transform form math u b vt mathu mathv orthogon matric mathb mathnbymathn bidiagon matrix nonzero entri diagon superdiagon size datau mathmbymathn size datav mathnbymathn function int gsl_linalg_bidiag_decomp gsl_matrix gsl_vector tau_u gsl_vector tau_v function factor mathmbymathn matrix dataa bidiagon form mathu b vt diagon superdiagon matrix mathb store diagon superdiagon dataa orthogon matric mathu datav store compress household vector remain element dataa household coeffici store vector datatau_u datatau_v length datatau_u must equal number element diagon dataa length datatau_v one element shorter function int gsl_linalg_bidiag_unpack const gsl_matrix const gsl_vector tau_u gsl_matrix u const gsl_vector tau_v gsl_matrix v gsl_vector diag gsl_vector superdiag function unpack bidiagon decomposit dataa produc funcgsl_linalg_bidiag_decomp dataa datatau_u datatau_v separ orthogon matric datau datav diagon vector datadiag superdiagon datasuperdiag note datau store compact mathmbymathn orthogon matrix satisfi mathut u effici function int gsl_linalg_bidiag_unpack gsl_matrix gsl_vector tau_u gsl_vector tau_v gsl_matrix v function unpack bidiagon decomposit dataa produc funcgsl_linalg_bidiag_decomp dataa datatau_u datatau_v separ orthogon matric datau datav diagon vector datadiag superdiagon datasuperdiag matrix datau store inplac dataa function int gsl_linalg_bidiag_unpack_b const gsl_matrix gsl_vector diag gsl_vector superdiag function unpack diagon superdiagon bidiagon decomposit dataa funcgsl_linalg_bidiag_decomp diagon vector datadiag superdiagon vector datasuperdiag index given rotat given rotat given rotat rotat plane act two element given vector repres matrix form texinfo math gijtheta left beginmatrix ldot ldot ldot vdot ddot vdot vdot vdot ldot costheta ldot sintheta ldot vdot vdot ddot vdot vdot ldot sintheta ldot costheta ldot vdot vdot vdot ddot vdot ldot ldot ldot endmatrix right mathcostheta mathsintheta appear intersect mathith mathjth row column act vector mathx mathgijtheta x perform rotat mathij element mathx given rotat typic use introduc zero vector qr decomposit matrix case typic desir find mathc math texinfo math left beginmatrix c c endmatrix right left beginmatrix b endmatrix right left beginmatrix r endmatrix right texinfo c r c b mathr sqrta b function void gsl_linalg_given const doubl const doubl b doubl c doubl function comput mathc costheta math sintheta given matrix mathgtheta act vector mathab produc mathr mathr sqrta b function void gsl_linalg_givens_gv gsl_vector v const size_t const size_t j const doubl c const doubl function appli given rotat defin mathc costheta math sintheta datai dataj element datav output mathvivj leftarrow gtheta vivj index singl household matrix singl household transform singl transform household household transform household transform rank modif ident matrix use zero select element vector household matrix mathp take form math p tau v vt mathv vector call household vector mathtau vt v function describ section use rank structur household matrix creat appli household transform effici function doubl gsl_linalg_householder_transform gsl_vector w gsl_complex gsl_linalg_complex_householder_transform gsl_vector_complex w function prepar household transform mathp tau v vt use zero element input vector dataw except first output household vector datav store dataw scalar mathtau return household vector datav normal codev howev store output vector instead codew set first element transform vector mathu p w codew u output remaind mathu zero function int gsl_linalg_householder_hm doubl tau const gsl_vector v gsl_matrix int gsl_linalg_complex_householder_hm gsl_complex tau const gsl_vector_complex v gsl_matrix_complex function appli household matrix mathp defin scalar datatau vector datav lefthand side matrix dataa output result mathp store dataa function int gsl_linalg_householder_mh doubl tau const gsl_vector v gsl_matrix int gsl_linalg_complex_householder_mh gsl_complex tau const gsl_vector_complex v gsl_matrix_complex function appli household matrix mathp defin scalar datatau vector datav righthand side matrix dataa output result matha p store dataa function int gsl_linalg_householder_hv doubl tau const gsl_vector v gsl_vector w int gsl_linalg_complex_householder_hv gsl_complex tau const gsl_vector_complex v gsl_vector_complex w function appli household transform mathp defin scalar datatau vector datav vector dataw output result mathp w store dataw deftypefun int gsl_linalg_householder_hm doubl tau gsl_matrix function appli household transform defin scalar datatau vector datav matrix build ident matrix use first column dataa household vector end deftypefun index singl solut linear system household transform singl household linear solver household solver linear system function int gsl_linalg_hh_solv gsl_matrix const gsl_vector b gsl_vector x function solv system matha x b directli use household transform output solut store datax datab modifi matrix dataa destroy household transform function int gsl_linalg_hh_svx gsl_matrix gsl_vector x function solv system matha x b inplac use household transform input datax contain righthand side mathb replac solut output matrix dataa destroy household transform index tridiagon system tridiagon system function describ section effici solv symmetr nonsymmetr cyclic tridiagon system minim storag note current implement function use variant choleski decomposit tridiagon matrix must posit definit nonposit definit matric function return error code macrogsl_es function int gsl_linalg_solve_tridiag const gsl_vector diag const gsl_vector e const gsl_vector f const gsl_vector b gsl_vector x function solv gener mathnbymathn system matha x b dataa tridiagon mathn geq superdiagon subdiagon vector data dataf must one element shorter diagon vector datadiag form dataa case shown texinfo math left beginmatrix d_e_ f_d_e_ f_d_e_ f_d_ endmatrix right texinfo d_ e_ f_ d_ e_ f_ d_ e_ f_ d_ function int gsl_linalg_solve_symm_tridiag const gsl_vector diag const gsl_vector e const gsl_vector b gsl_vector x function solv gener mathnbymathn system matha x b dataa symmetr tridiagon mathn geq offdiagon vector data must one element shorter diagon vector datadiag form dataa case shown texinfo math left beginmatrix d_e_ e_d_e_ e_d_e_ e_d_ endmatrix right texinfo d_ e_ e_ d_ e_ e_ d_ e_ e_ d_ function int gsl_linalg_solve_cyc_tridiag const gsl_vector diag const gsl_vector e const gsl_vector f const gsl_vector b gsl_vector x function solv gener mathnbymathn system matha x b dataa cyclic tridiagon mathn geq cyclic superdiagon subdiagon vector data dataf must number element diagon vector datadiag form dataa case shown texinfo math left beginmatrix d_e_ f_ f_d_e_ f_d_e_ e_ f_d_ endmatrix right texinfo d_ e_ f_ f_ d_ e_ f_ d_ e_ e_ f_ d_ function int gsl_linalg_solve_symm_cyc_tridiag const gsl_vector diag const gsl_vector e const gsl_vector b gsl_vector x function solv gener mathnbymathn system matha x b dataa symmetr cyclic tridiagon mathn geq cyclic offdiagon vector data must number element diagon vector datadiag form dataa case shown texinfo math left beginmatrix d_e_ e_ e_d_e_ e_d_e_ e_ e_d_ endmatrix right texinfo d_ e_ e_ e_ d_ e_ e_ d_ e_ e_ e_ d_ index triangular system triangular system function int gsl_linalg_tri_upper_invert gsl_matrix int gsl_linalg_tri_lower_invert gsl_matrix int gsl_linalg_tri_upper_unit_invert gsl_matrix int gsl_linalg_tri_lower_unit_invert gsl_matrix function calcul inplac invers triangular matrix datat codeupp prefix specifi upper triangl datat use codelow prefix specifi lower triangl use codeunit prefix specifi diagon element matrix datat taken uniti referenc otherwis diagon element use invers function int gsl_linalg_tri_upper_rcond const gsl_matrix doubl rcond gsl_vector work int gsl_linalg_tri_lower_rcond const gsl_matrix doubl rcond gsl_vector work function estim reciproc condit number norm upper lower mathnbymathn triangular matrix datat reciproc condit number store datarcond output defin math t_ cdot t_ addit workspac size math n requir datawork index balanc matric _balanc balanc process balanc matrix appli similar transform make row column compar norm use exampl reduc roundoff error solut eigenvalu problem balanc matrix matha consist replac matha similar matrix math mathd diagon matrix whose entri power float point radix function int gsl_linalg_balance_matrix gsl_matrix gsl_vector function replac matrix dataa balanc counterpart store diagon element similar transform vector datad exampl follow program solv linear system matha x b system solv texinfo math left beginmatrix endmatrix right left beginmatrix x_ x_ x_ x_ endmatrix right left beginmatrix endmatrix right texinfo x x x x solut found use lu decomposit matrix matha includ exampleslinalgluc code output program includ exampleslinalglutxt code verifi multipli solut mathx origin matrix matha use octav octav octav x octav x an reproduc origin righthand side vector mathb accord equat matha x b refer read inform algorithm describ section found follow book g h golub c f van loan matrix comput rd ed john hopkin univers press isbn lapack librari describ follow manual lapack user guid third edit publish siam isbn lapack sourc code found httpwwwnetliborglapack along onlin copi user guid modifi golubreinsch algorithm describ follow paper tf chan improv algorithm comput singular valu decomposit acm transact mathemat softwar pp jacobi algorithm singular valu decomposit describ follow paper jc nash onesid transform method singular valu decomposit algebra eigenproblem comput journal volum number p jc nash shlien simpl algorithm partial singular valu decomposit comput journal volum p j demmel k vesel jacobi method accur qr lapack work note lawn octob avail netlib httpwwwnetliborglapack codelawn codelawnspdf directori algorithm estim matrix condit number describ follow paper n j higham fortran code estim onenorm real complex matrix applic condit estim acm tran math soft vol pp decemb index special function special function chapter describ gsl special function librari librari includ routin calcul valu airi function bessel function clausen function coulomb wave function coupl coeffici dawson function deby function dilogarithm ellipt integr jacobi ellipt function error function exponenti integr fermidirac function gamma function gegenbau function hermit polynomi function hypergeometr function laguerr function legendr function spheric harmon psi digamma function synchrotron function transport function trigonometr function zeta function routin also comput estim numer error calcul valu function function chapter declar individu header file filegsl_sf_airyh filegsl_sf_besselh etc complet set header file includ use file filegsl_sfh usag special function avail two call convent natur form return numer valu function errorhandl form return error code two type function provid altern way access underli code natur form return valu function use directli mathemat express exampl follow function call comput valu bessel function mathj_x doubl gsl_sf_bessel_j x way access error code estim error use method allow access inform altern errorhandl form store valu error modifi argument gsl_sf_result result int statu gsl_sf_bessel_j_ x result errorhandl function suffix code_ return statu valu indic error condit overflow underflow loss precis error errorhandl function return codegsl_success gsl_sf_result struct error handl form special function alway calcul error estim along valu result therefor structur provid amalgam valu error estim structur declar header file filegsl_sf_resulth follow struct contain valu error field type gsl_sf_result typedef struct doubl val doubl err gsl_sf_result field datav contain valu field dataerr contain estim absolut error valu case overflow underflow detect handl function case may possibl return scale expon well errorvalu pair order save result exceed dynam rang builtin type follow struct contain valu error field well expon field actual result obtain coderesult e type gsl_sf_result_ typedef struct doubl val doubl err int e gsl_sf_result_ mode goal librari achiev doubl precis accuraci wherev possibl howev cost evalu special function doubl precis signific particularli high order term requir case codemod argument type typegsl_mode_t allow accuraci function reduc order improv perform follow precis level avail mode argument type gsl_mode_t macro gsl_prec_doubl doubleprecis rel accuraci approxim math macro gsl_prec_singl singleprecis rel accuraci approxim math macro gsl_prec_approx approxim valu rel accuraci approxim math approxim mode provid fastest evalu lowest accuraci airi function deriv includ specfuncairyrst bessel function includ specfuncbesselrst clausen function includ specfuncclausenrst coulomb function includ specfunccoulombrst coupl coeffici includ specfunccouplingrst dawson function includ specfuncdawsonrst deby function includ specfuncdebyerst _dilogfunct dilogarithm includ specfuncdilogrst elementari oper includ specfuncelementaryrst ellipt integr includ specfuncellintrst ellipt function jacobi includ specfuncelljacrst error function includ specfuncerfrst exponenti function includ specfuncexprst exponenti integr includ specfuncexpintrst fermidirac function includ specfuncfermidiracrst gamma beta function includ specfuncgammarst gegenbau function includ specfuncgegenbauerrst hermit polynomi function includ specfunchermiterst hypergeometr function includ specfunchypergrst _laguerrefunct laguerr function includ specfunclaguerrerst lambert w function includ specfunclambertrst legendr function spheric harmon includ specfunclegendrerst logarithm relat function includ specfunclogrst mathieu function includ specfuncmathieurst power function includ specfuncpowintrst psi digamma function includ specfuncpsirst synchrotron function includ specfuncsynchrotronrst transport function includ specfunctransportrst trigonometr function includ specfunctrigrst zeta function includ specfunczetarst exampl follow exampl demonstr use error handl form special function case comput bessel function mathj_ includ examplesspecfun_ec code result run program includ examplesspecfun_etxt code next program comput quantiti use natur form function case error term dataresulterr return statu access includ examplesspecfunc code result function includ examplesspecfuntxt code refer read librari follow convent follow book possibl handbook mathemat function edit abramowitz stegun dover isbn follow paper contain inform algorithm use comput special function index miscfun allan j macleod miscfun softwar packag comput uncommon special function acm tran math soft vol gn watson treatis theori bessel function nd edit cambridg univers press g nemeth mathemat approxim special function nova scienc publish isbn bc carlson special function appli mathemat n temm special function introduct classic function mathemat physic isbn wj thompson atla comput mathemat function john wiley son new york yy luke algorithm comput mathemat function academ press new york holm w e featherston unifi approach clenshaw summat recurs comput high degre order normalis associ legendr function journal geodesi pg index singl coupl coeffici singl j symbol singl j symbol singl j symbol singl wigner coeffici singl racah coeffici wigner j j j symbol give coupl coeffici combin angular momentum vector sinc argument standard coupl coeffici function integ halfinteg argument follow function convent integ equal twice actual spin valu inform j coeffici see abramowitz stegun section function describ section declar header file filegsl_sf_couplingh j symbol function doubl gsl_sf_coupling_j int two_ja int two_jb int two_jc int two_ma int two_mb int two_mc int gsl_sf_coupling_j_ int two_ja int two_jb int two_jc int two_ma int two_mb int two_mc gsl_sf_result result routin comput wigner j coeffici texinfo math left beginarrayccc ja jb jc mb mc endarray right texinfo ja jb jc mb mc argument given halfinteg unit mathja datatwo_ja mathma datatwo_ma etc except return valu gsl_edom gsl_eovrflw j symbol function doubl gsl_sf_coupling_j int two_ja int two_jb int two_jc int two_jd int two_j int two_jf int gsl_sf_coupling_j_ int two_ja int two_jb int two_jc int two_jd int two_j int two_jf gsl_sf_result result routin comput wigner j coeffici texinfo math left beginarrayccc ja jb jc jd je jf endarray right texinfo ja jb jc jd je jf argument given halfinteg unit mathja datatwo_ja mathma datatwo_ma etc except return valu gsl_edom gsl_eovrflw j symbol function doubl gsl_sf_coupling_j int two_ja int two_jb int two_jc int two_jd int two_j int two_jf int two_jg int two_jh int two_ji int gsl_sf_coupling_j_ int two_ja int two_jb int two_jc int two_jd int two_j int two_jf int two_jg int two_jh int two_ji gsl_sf_result result routin comput wigner j coeffici texinfo math left beginarrayccc ja jb jc jd je jf jg jh ji endarray right texinfo ja jb jc jd je jf jg jh ji argument given halfinteg unit mathja datatwo_ja mathma datatwo_ma etc except return valu gsl_edom gsl_eovrflw index singl legendr polynomi singl legendr function singl spheric harmon singl conic function singl hyperbol space legendr function legendr polynomi describ abramowitz stegun chapter function declar header file filegsl_sf_legendreh legendr polynomi function doubl gsl_sf_legendre_p doubl x doubl gsl_sf_legendre_p doubl x doubl gsl_sf_legendre_p doubl x int gsl_sf_legendre_p_ doubl x gsl_sf_result result int gsl_sf_legendre_p_ doubl x gsl_sf_result result int gsl_sf_legendre_p_ doubl x gsl_sf_result result function evalu legendr polynomi mathp_lx use explicit represent mathl except return valu none function doubl gsl_sf_legendre_pl int l doubl x int gsl_sf_legendre_pl_ int l doubl x gsl_sf_result result function evalu legendr polynomi mathp_lx specif valu datal datax subject mathl ge mathx le except return valu gsl_edom function int gsl_sf_legendre_pl_array int lmax doubl x doubl result_array int gsl_sf_legendre_pl_deriv_array int lmax doubl x doubl result_array doubl result_deriv_array function comput array legendr polynomi mathp_lx deriv mathdp_lxdx mathl dot lmax mathx le except return valu gsl_edom function doubl gsl_sf_legendre_q doubl x int gsl_sf_legendre_q_ doubl x gsl_sf_result result routin comput legendr function mathq_x mathx mathx ne except return valu gsl_edom function doubl gsl_sf_legendre_q doubl x int gsl_sf_legendre_q_ doubl x gsl_sf_result result routin comput legendr function mathq_x mathx mathx ne except return valu gsl_edom function doubl gsl_sf_legendre_ql int l doubl x int gsl_sf_legendre_ql_ int l doubl x gsl_sf_result result routin comput legendr function mathq_lx mathx mathx ne mathl ge except return valu gsl_edom associ legendr polynomi spheric harmon follow function comput associ legendr polynomi mathp_lmx solut differenti equat texinfo math x dx p_lmx x dx p_lmx left x right p_lmx texinfo x p_lmx dx p_lmx x ddx p_lmx x p_lmx degre mathl order mathm satisfi math le l math le le l function mathp_lmx grow combinatori mathl overflow mathl larger altern one may calcul normal associ legendr polynomi number differ normal convent function stabli comput degre order follow normal provid schmidt seminorm schmidt seminorm associ legendr polynomi often use magnet commun defin texinfo math s_lx p_lx s_lmx sqrt lm lm p_lmx texinfo s_lx p_lx s_lmx sqrtlm lm p_lmx factor mathm call condonshortley phase factor exclud desir set paramet codecsphas function spheric harmon normal associ legendr polynomi suitabl calcul spheric harmon defin texinfo math y_lmx sqrtl pi lm lm p_lmx texinfo y_lmx sqrtl lm pi lm p_lmx phase factor mathm includ exclud desir full normal fulli normal associ legendr polynomi defin texinfo math n_lmx sqrtl lm lm p_lmx texinfo n_lmx sqrtl lm lm p_lmx properti math int_ n_lmx dx normal associ legendr routin use recurr relat stabl degre order beyond comput function could suffer underflow lead incorrect result routin provid comput first second deriv mathdp_lmxdx mathd p_lmxdx well altern version mathd p_lmcosthetadtheta mathd p_lmcosthetadtheta simpl scale relationship two form deriv involv maththeta heavili use spheric harmon expans routin also provid function paramet type typegsl_sf_legendre_t specifi type normal use possibl valu type gsl_sf_legendre_t valu descript codegsl_sf_legendre_non unnorm associ legendr polynomi mathp_lmx codegsl_sf_legendre_schmidt schmidt seminorm associ legendr polynomi maths_lmx codegsl_sf_legendre_spharm spheric harmon associ legendr polynomi mathy_lmx codegsl_sf_legendre_ful fulli normal associ legendr polynomi mathn_lmx function int gsl_sf_legendre_array const gsl_sf_legendre_t norm const size_t lmax const doubl x doubl result_array int gsl_sf_legendre_array_ const gsl_sf_legendre_t norm const size_t lmax const doubl x const doubl csphase doubl result_array function calcul normal associ legendr polynomi math le l le lmax math le le l mathx le datanorm paramet specifi normal use normal mathp_lmx valu store dataresult_array whose minimum size obtain call funcgsl_sf_legendre_array_n array index mathp_lmx obtain call codegsl_sf_legendre_array_indexl includ exclud condonshortley phase factor mathm set paramet datacsphas either math math respect code_ function factor exclud default function int gsl_sf_legendre_deriv_array const gsl_sf_legendre_t norm const size_t lmax const doubl x doubl result_array doubl result_deriv_array int gsl_sf_legendre_deriv_array_ const gsl_sf_legendre_t norm const size_t lmax const doubl x const doubl csphase doubl result_array doubl result_deriv_array function calcul normal associ legendr function first deriv degre datalmax mathx paramet datanorm specifi normal use normal mathp_lmx valu deriv mathdp_lmxdx store dataresult_array dataresult_deriv_array respect includ exclud condonshortley phase factor mathm set paramet datacsphas either math math respect code_ function factor exclud default function int gsl_sf_legendre_deriv_alt_array const gsl_sf_legendre_t norm const size_t lmax const doubl x doubl result_array doubl result_deriv_array int gsl_sf_legendre_deriv_alt_array_ const gsl_sf_legendre_t norm const size_t lmax const doubl x const doubl csphase doubl result_array doubl result_deriv_array function calcul normal associ legendr function altern first deriv degre datalmax mathx normal mathp_lmx valu deriv mathdp_lmcosthetadtheta store dataresult_array dataresult_deriv_array respect includ exclud condonshortley phase factor mathm set paramet datacsphas either math math respect code_ function factor exclud default function int gsl_sf_legendre_deriv_array const gsl_sf_legendre_t norm const size_t lmax const doubl x doubl result_array doubl result_deriv_array doubl result_deriv_array int gsl_sf_legendre_deriv_array_ const gsl_sf_legendre_t norm const size_t lmax const doubl x const doubl csphase doubl result_array doubl result_deriv_array doubl result_deriv_array function calcul normal associ legendr function first second deriv degre datalmax mathx paramet datanorm specifi normal use normal mathp_lmx first deriv mathdp_lmxdx second deriv mathd p_lmxdx store dataresult_array dataresult_deriv_array dataresult_deriv_array respect includ exclud condonshortley phase factor mathm set paramet datacsphas either math math respect code_ function factor exclud default function int gsl_sf_legendre_deriv_alt_array const gsl_sf_legendre_t norm const size_t lmax const doubl x doubl result_array doubl result_deriv_array doubl result_deriv_array int gsl_sf_legendre_deriv_alt_array_ const gsl_sf_legendre_t norm const size_t lmax const doubl x const doubl csphase doubl result_array doubl result_deriv_array doubl result_deriv_array function calcul normal associ legendr function altern first second deriv degre datalmax mathx paramet datanorm specifi normal use normal mathp_lmx first deriv mathdp_lmcosthetadtheta second deriv mathd p_lmcosthetadtheta store dataresult_array dataresult_deriv_array dataresult_deriv_array respect includ exclud condonshortley phase factor mathm set paramet datacsphas either math math respect code_ function factor exclud default function size_t gsl_sf_legendre_array_n const size_t lmax function return minimum array size maximum degre datalmax need array version associ legendr function size calcul total number mathp_lmx function plu extra space precomput multipl factor use recurr relat function size_t gsl_sf_legendre_array_index const size_t l const size_t function return index dataresult_array dataresult_deriv_array dataresult_deriv_array correspond mathp_lmx mathp_lmx mathp_lmx index given mathll function doubl gsl_sf_legendre_plm int l int doubl x int gsl_sf_legendre_plm_ int l int doubl x gsl_sf_result result routin comput associ legendr polynomi mathp_lmx mathm ge mathl ge mathx le except return valu gsl_edom gsl_eovrflw function doubl gsl_sf_legendre_sphplm int l int doubl x int gsl_sf_legendre_sphplm_ int l int doubl x gsl_sf_result result routin comput normal associ legendr polynomi mathsqrtlpi sqrtlmlm p_lmx suitabl use spheric harmon paramet must satisfi mathm ge mathl ge mathx le routin avoid overflow occur standard normal mathp_lmx except return valu gsl_edom function int gsl_sf_legendre_plm_array int lmax int doubl x doubl result_array int gsl_sf_legendre_plm_deriv_array int lmax int doubl x doubl result_array doubl result_deriv_array function deprec remov futur releas see funcgsl_sf_legendre_array funcgsl_sf_legendre_deriv_array function int gsl_sf_legendre_sphplm_array int lmax int doubl x doubl result_array int gsl_sf_legendre_sphplm_deriv_array int lmax int doubl x doubl result_array doubl result_deriv_array function deprec remov futur releas see funcgsl_sf_legendre_array funcgsl_sf_legendre_deriv_array function int gsl_sf_legendre_array_s const int lmax const int function deprec remov futur releas conic function conic function mathpmu_ilambdax mathqmu_ilambda describ abramowitz stegun section function doubl gsl_sf_conicalp_half doubl lambda doubl x int gsl_sf_conicalp_half_ doubl lambda doubl x gsl_sf_result result routin comput irregular spheric conic function mathp_ lambdax mathx except return valu gsl_edom function doubl gsl_sf_conicalp_mhalf doubl lambda doubl x int gsl_sf_conicalp_mhalf_ doubl lambda doubl x gsl_sf_result result routin comput regular spheric conic function mathp_ lambdax mathx except return valu gsl_edom function doubl gsl_sf_conicalp_ doubl lambda doubl x int gsl_sf_conicalp__ doubl lambda doubl x gsl_sf_result result routin comput conic function mathp_ lambdax mathx except return valu gsl_edom function doubl gsl_sf_conicalp_ doubl lambda doubl x int gsl_sf_conicalp__ doubl lambda doubl x gsl_sf_result result routin comput conic function mathp_ lambdax mathx except return valu gsl_edom function doubl gsl_sf_conicalp_sph_reg int l doubl lambda doubl x int gsl_sf_conicalp_sph_reg_ int l doubl lambda doubl x gsl_sf_result result routin comput regular spheric conic function mathpl_ lambdax mathx mathl ge except return valu gsl_edom function doubl gsl_sf_conicalp_cyl_reg int doubl lambda doubl x int gsl_sf_conicalp_cyl_reg_ int doubl lambda doubl x gsl_sf_result result routin comput regular cylindr conic function mathpm_ lambdax mathx mathm ge except return valu gsl_edom radial function hyperbol space follow spheric function special legendr function give regular eigenfunct laplacian dimension hyperbol space mathh particular interest flat limit mathlambda infti matheta mathlambdaeta fix function doubl gsl_sf_legendre_hd_ doubl lambda doubl eta int gsl_sf_legendre_hd__ doubl lambda doubl eta gsl_sf_result result routin comput zeroth radial eigenfunct laplacian dimension hyperbol space math lhd_lambdaeta sinlambdaeta lambdasinheta matheta ge flat limit take form mathlhd_lambdaeta j_lambdaeta except return valu gsl_edom function doubl gsl_sf_legendre_hd_ doubl lambda doubl eta int gsl_sf_legendre_hd__ doubl lambda doubl eta gsl_sf_result result routin comput first radial eigenfunct laplacian dimension hyperbol space math lhd_lambdaeta oversqrtlambda leftsinlambda etaov lambda sinhetaright leftcotheta lambda cotlambdaetaright matheta ge flat limit take form mathlhd_lambdaeta j_lambdaeta except return valu gsl_edom function doubl gsl_sf_legendre_hd int l doubl lambda doubl eta int gsl_sf_legendre_hd_ int l doubl lambda doubl eta gsl_sf_result result routin comput datalth radial eigenfunct laplacian dimension hyperbol space matheta ge mathl ge flat limit take form mathlhd_llambdaeta j_llambdaeta except return valu gsl_edom function int gsl_sf_legendre_hd_array int lmax doubl lambda doubl eta doubl result_array function comput array radial eigenfunct mathlhd_l lambda eta math le l le lmax except return valu index singl minim multidimension multidimension minim chapter describ routin find minima arbitrari multidimension function librari provid low level compon varieti iter minim converg test combin user achiev desir solut provid full access intermedi step algorithm class method use framework switch minim runtim without need recompil program instanc minim keep track state allow minim use multithread program minim algorithm use maxim function invert sign header file filegsl_multiminh contain prototyp minim function relat declar overview problem multidimension minim requir find point mathx scalar function math fx_ dot x_n take valu lower neighbor point smooth function gradient mathg nabla f vanish minimum gener bracket method avail minim mathndimension function algorithm proceed initi guess use search algorithm attempt move downhil direct algorithm make use gradient function perform onedimension line minimis along direct lowest point found suitabl toler search direct updat local inform function deriv whole process repeat true mathndimension minimum found algorithm requir gradient function use differ strategi exampl neldermead simplex algorithm maintain mathn trial paramet vector vertic mathndimension simplex iter tri improv worst vertex simplex geometr transform iter continu overal size simplex decreas suffici type algorithm use standard framework user provid highlevel driver algorithm librari provid individu function necessari step three main phase iter step initi minim state data algorithm datat updat data use iter datat test data converg repeat iter necessari iter step consist either improv lineminimis current direct updat search direct state minim held typegsl_multimin_fdfminim struct typegsl_multimin_fminim struct index singl multimin caveat caveat note minim algorithm search one local minimum time sever local minima search area first minimum found return howev difficult predict minima case error report tri find local minimum area one also import note minim algorithm find local minima way determin whether minimum global minimum function question initi multidimension minim follow function initi multidimension minim minim depend dimens problem algorithm reus differ problem type gsl_multimin_fdfminim workspac minim function use deriv type gsl_multimin_fminim workspac minim function without deriv function gsl_multimin_fdfminim gsl_multimin_fdfminimizer_alloc const gsl_multimin_fdfminimizer_typ size_t n gsl_multimin_fminim gsl_multimin_fminimizer_alloc const gsl_multimin_fminimizer_typ size_t n function return pointer newli alloc instanc minim type datat datandimens function insuffici memori creat minim function return null pointer error handler invok error code macrogsl_enomem function int gsl_multimin_fdfminimizer_set gsl_multimin_fdfminim gsl_multimin_function_fdf fdf const gsl_vector x doubl step_siz doubl tol int gsl_multimin_fminimizer_set gsl_multimin_fminim gsl_multimin_funct f const gsl_vector x const gsl_vector step_siz function funcgsl_multimin_fdfminimizer_set initi minim data minim function datafdf start initi point datax size first trial step given datastep_s accuraci line minim specifi datatol precis mean paramet depend method use typic line minim consid success gradient function mathg orthogon current search direct mathp rel accuraci datatol mathp cdot g tol p g datatol valu suitabl purpos sinc line minim need carri approxim note set datatol zero forc use exact linesearch extrem expens function funcgsl_multimin_fminimizer_set initi minim data minim function dataf start initi point datax size initi trial step given vector datastep_s precis mean paramet depend method use function void gsl_multimin_fdfminimizer_fre gsl_multimin_fdfminim void gsl_multimin_fminimizer_fre gsl_multimin_fminim function free memori associ minim data function const char gsl_multimin_fdfminimizer_nam const gsl_multimin_fdfminim const char gsl_multimin_fminimizer_nam const gsl_multimin_fminim function return pointer name minim exampl printf minimizern gsl_multimin_fdfminimizer_nam would print someth like code conjugate_pr minim provid function minim must provid parametr function mathn variabl minim oper may also need provid routin calcul gradient function third routin calcul function valu gradient togeth order allow gener paramet function defin follow data type type gsl_multimin_function_fdf data type defin gener function mathn variabl paramet correspond gradient vector deriv codedoubl f const gsl_vector x void param function return result mathfxparam argument datax paramet dataparam function comput error valu macrogsl_nan return codevoid df const gsl_vector x void param gsl_vector g function store datandimension gradient texinfo math g_i partial fxhboxit param partial x_i texinfo g_i fxparam x_i vector datag argument datax paramet dataparam return appropri error code function comput codevoid fdf const gsl_vector x void param doubl f gsl_vector g function set valu dataf datag argument datax paramet dataparam function provid optim separ function mathfx mathgxit alway faster comput function deriv time codesize_t n dimens system ie number compon vector datax codevoid param pointer paramet function type gsl_multimin_funct data type defin gener function mathn variabl paramet codedoubl f const gsl_vector x void param function return result mathfxparam argument datax paramet dataparam function comput error valu macrogsl_nan return codesize_t n dimens system ie number compon vector datax codevoid param pointer paramet function _multiminparaboloid follow exampl function defin simpl twodimension paraboloid five paramet includ examplesmultiminfnc code function initi use follow code gsl_multimin_function_fdf my_func paraboloid center scale factor minimum valu doubl p my_funcn number function compon my_funcf my_f my_funcdf my_df my_funcfdf my_fdf my_funcparam void p iter follow function drive iter algorithm function perform one iter updat state minim function work minim differ method substitut runtim without modif code function int gsl_multimin_fdfminimizer_iter gsl_multimin_fdfminim int gsl_multimin_fminimizer_iter gsl_multimin_fminim function perform singl iter minim data iter encount unexpect problem error code return error code macrogsl_enoprog signifi minim unabl improv current estim either due numer difficulti genuin local minimum reach minim maintain current best estim minimum time inform access follow auxiliari function function gsl_vector gsl_multimin_fdfminimizer_x const gsl_multimin_fdfminim gsl_vector gsl_multimin_fminimizer_x const gsl_multimin_fminim doubl gsl_multimin_fdfminimizer_minimum const gsl_multimin_fdfminim doubl gsl_multimin_fminimizer_minimum const gsl_multimin_fminim gsl_vector gsl_multimin_fdfminimizer_gradi const gsl_multimin_fdfminim gsl_vector gsl_multimin_fdfminimizer_dx const gsl_multimin_fdfminim doubl gsl_multimin_fminimizer_s const gsl_multimin_fminim function return current best estim locat minimum valu function point gradient last step increment estim minim specif characterist size minim data function int gsl_multimin_fdfminimizer_restart gsl_multimin_fdfminim function reset minim data use current point new start point stop criteria minim procedur stop one follow condit true minimum found within userspecifi precis userspecifi maximum number iter reach error occur handl condit user control function allow user test precis current result function int gsl_multimin_test_gradi const gsl_vector g doubl epsab function test norm gradient datag absolut toler dataepsab gradient multidimension function goe zero minimum test return macrogsl_success follow condit achiev texinfo math g hboxit epsab texinfo g epsab return macrogsl_continu otherwis suitabl choic dataepsab made desir accuraci function small variat mathx relationship quantiti given mathdeltaf gdeltax function int gsl_multimin_test_s const doubl size doubl epsab function test minim specif characterist size applic use minim absolut toler dataepsab test return macrogsl_success size smaller toler otherwis macrogsl_continu return algorithm deriv sever minim method avail best choic algorithm depend problem algorithm describ section use valu function gradient evalu point type gsl_multimin_fdfminimizer_typ type specifi minim algorithm use gradient index singl fletcherreev conjug gradient algorithm minim singl conjug gradient algorithm minim singl minim conjug gradient algorithm var gsl_multimin_fdfminimizer_conjugate_fr fletcherreev conjug gradient algorithm conjug gradient algorithm proce success line minim sequenc search direct use build approxim curvatur function neighborhood minimum initi search direct datap chosen use gradient line minim carri direct accuraci line minim specifi paramet datatol minimum along line occur function gradient datag search direct datap orthogon line minim termin mathpcdot g tol p g search direct updat use fletcherreev formula mathp g beta g mathbetagg line minim repeat new search direct index singl polakribier algorithm minim singl minim polakribier algorithm var gsl_multimin_fdfminimizer_conjugate_pr polakribier conjug gradient algorithm similar fletcherreev method differ choic coeffici mathbeta method work well evalu point close enough minimum object function well approxim quadrat hypersurfac index singl bfg algorithm minim singl minim bfg algorithm var gsl_multimin_fdfminimizer_vector_bfg gsl_multimin_fdfminimizer_vector_bfg method use vector broydenfletchergoldfarbshanno bfg algorithm quasinewton method build approxim second deriv function mathf use differ success gradient vector combin first second deriv algorithm abl take newtontyp step toward function minimum assum quadrat behavior region codebfg version minim effici version avail faith implement line minim scheme describ fletcher practic method optim algorithm supersed origin codebfg routin requir substanti fewer function gradient evalu usersuppli toler datatol correspond paramet mathsigma use fletcher valu recommend typic use larger valu correspond less accur line search index singl steepest descent algorithm minim singl minim steepest descent algorithm var gsl_multimin_fdfminimizer_steepest_desc steepest descent algorithm follow downhil gradient function step downhil step success stepsiz increas factor two downhil step lead higher function valu algorithm backtrack step size decreas use paramet datatol suitabl valu datatol applic steepest descent method ineffici includ demonstr purpos algorithm without deriv algorithm describ section use valu function evalu point type gsl_multimin_fminimizer_typ type specifi minim algorithm use gradient index singl neldermead simplex algorithm minim singl simplex algorithm minim singl minim simplex algorithm var gsl_multimin_fminimizer_nmsimplex gsl_multimin_fminimizer_nmsimplex method use simplex algorithm nelder mead start initi vector mathx p_ algorithm construct addit mathn vector mathp_i use step size vector math step_siz follow texinfo math p_ x_ x_ cdot x_n p_ x_ s_ x_ cdot x_n p_ x_ x_ s_ cdot x_n dot dot p_n x_ x_ cdot x_n s_n texinfo p_ x_ x_ x_n p_ x_ s_ x_ x_n p_ x_ x_ s_ x_n p_n x_ x_ x_n s_n vector form mathn vertic simplex mathn dimens iter algorithm use simpl geometr transform updat vector correspond highest function valu geometr transform reflect reflect follow expans contract multipl contract use transform simplex move space toward minimum contract iter best vertex return note due natur algorithm everi step improv current best paramet vector usual sever iter requir minimizerspecif characterist size calcul averag distanc geometr center simplex vertic size use stop criteria simplex contract near minimum size return function funcgsl_multimin_fminimizer_s typegsl_multimin_fminimizer_nmsimplex version minimis new mathon oper implement earlier mathon oper typegsl_multimin_fminimizer_nmsimplex minimis use underli algorithm simplex updat comput effici highdimension problem addit size simplex calcul rm distanc vertex center rather mean distanc allow linear updat quantiti step memori usag mathon algorithm var gsl_multimin_fminimizer_nmsimplexrand method variant typegsl_multimin_fminimizer_nmsimplex initialis simplex around start point datax use randomlyori set basi vector instead fix coordin axe final dimens simplex scale along coordin axe vector datastep_s randomis use simpl determinist gener repeat call funcgsl_multimin_fminimizer_set given solver object vari orient welldefin way exampl exampl program find minimum refparaboloid function multiminparaboloid defin earlier locat minimum offset origin mathx mathi function valu minimum nonzero main program given requir exampl function given earlier chapter includ examplesmultiminc code initi stepsiz chosen conserv estim case line minim paramet set program termin norm gradient reduc output program shown includ examplesmultimintxt code note algorithm gradual increas step size success move downhil seen plot success point numreffigmultimin _figmultimin figur imagesmultiminpng scale function contour path taken minim algorithm conjug gradient algorithm find minimum second direct function pure quadrat addit iter would need complic function anoth exampl use neldermead simplex algorithm minim exampl object function includ examplesnmsimplexc code minimum search stop simplex size drop output shown includ examplesnmsimplextxt code simplex size first increas simplex move toward minimum size begin decreas simplex contract around minimum refer read conjug gradient bfg method describ detail follow book r fletcher practic method optim second edit wiley isbn brief descript multidimension minim algorithm recent refer found cw ueberhub numer comput volum chapter section minim method p springer isbn simplex algorithm describ follow paper ja nelder r mead simplex method function minim comput journal vol index singl statist singl mean singl standard deviat singl varianc singl estim standard deviat singl estim varianc singl ttest singl rang singl min singl max statist chapter describ statist function librari basic statist function includ routin comput mean varianc standard deviat advanc function allow calcul absolut deviat skew kurtosi well median arbitrari percentil algorithm use recurr relat comput averag quantiti stabl way without larg intermedi valu might overflow function avail version dataset standard floatingpoint integ type version doubl precis floatingpoint data prefix codegsl_stat declar header file filegsl_statistics_doubleh version integ data prefix codegsl_stats_int declar header file filegsl_statistics_inth function oper c array codestrid paramet specifi space element mean standard deviat varianc function doubl gsl_stats_mean const doubl data size_t stride size_t n function return arithmet mean datadata dataset length datan stride datastrid arithmet mean sampl mean denot mathhatmu defin math hatmu n sum x_i mathx_i element dataset datadata sampl drawn gaussian distribut varianc mathhatmu mathsigma n function doubl gsl_stats_vari const doubl data size_t stride size_t n function return estim sampl varianc datadata dataset length datan stride datastrid estim varianc denot mathhatsigma defin texinfo math hatsigma n sum x_i hatmu texinfo hatsigma n sum x_i hatmu mathx_i element dataset datadata note normal factor mathn result deriv mathhatsigma unbias estim popul varianc mathsigma sampl drawn gaussian distribut varianc mathhatsigma math sigma n function comput mean via call funcgsl_stats_mean alreadi comput mean pass directli funcgsl_stats_variance_m function doubl gsl_stats_variance_m const doubl data size_t stride size_t n doubl mean function return sampl varianc datadata rel given valu datamean function comput mathhatmu replac valu datamean suppli texinfo math hatsigma n sum x_i mean texinfo hatsigma n sum x_i mean function doubl gsl_stats_sd const doubl data size_t stride size_t n doubl gsl_stats_sd_m const doubl data size_t stride size_t n doubl mean standard deviat defin squar root varianc function return squar root correspond varianc function function doubl gsl_stats_tss const doubl data size_t stride size_t n doubl gsl_stats_tss_m const doubl data size_t stride size_t n doubl mean function return total sum squar tss datadata mean funcgsl_stats_tss_m usersuppli valu datamean use funcgsl_stats_tss comput use funcgsl_stats_mean texinfo math rm tss sum x_i mean texinfo tss sum x_i mean function doubl gsl_stats_variance_with_fixed_mean const doubl data size_t stride size_t n doubl mean function comput unbias estim varianc datadata popul mean datamean underli distribut known priori case estim varianc use factor mathn sampl mean mathhatmu replac known popul mean mathmu texinfo math hatsigma n sum x_i mu texinfo hatsigma n sum x_i mu function doubl gsl_stats_sd_with_fixed_mean const doubl data size_t stride size_t n doubl mean function calcul standard deviat datadata fix popul mean datamean result squar root correspond varianc function absolut deviat function doubl gsl_stats_absdev const doubl data size_t stride size_t n function comput absolut deviat mean datadata dataset length datan stride datastrid absolut deviat mean defin texinfo math absdev n sum x_i hatmu texinfo absdev n sum x_i hatmu mathx_i element dataset datadata absolut deviat mean provid robust measur width distribut varianc function comput mean datadata via call funcgsl_stats_mean function doubl gsl_stats_absdev_m const doubl data size_t stride size_t n doubl mean function comput absolut deviat dataset datadata rel given valu datamean texinfo math absdev n sum x_i mean texinfo absdev n sum x_i mean function use alreadi comput mean datadata want avoid recomput wish calcul absolut deviat rel anoth valu zero median index skew kurtosi higher moment skew kurtosi function doubl gsl_stats_skew const doubl data size_t stride size_t n function comput skew datadata dataset length datan stride datastrid skew defin texinfo math skew n sum left x_i hatmu hatsigma right texinfo skew n sum x_i hatmuhatsigma mathx_i element dataset datadata skew measur asymmetri tail distribut function comput mean estim standard deviat datadata via call funcgsl_stats_mean funcgsl_stats_sd function doubl gsl_stats_skew_m_sd const doubl data size_t stride size_t n doubl mean doubl sd function comput skew dataset datadata use given valu mean datamean standard deviat datasd texinfo math skew n sum left x_i mean sd right texinfo skew n sum x_i meansd function use alreadi comput mean standard deviat datadata want avoid recomput function doubl gsl_stats_kurtosi const doubl data size_t stride size_t n function comput kurtosi datadata dataset length datan stride datastrid kurtosi defin texinfo math kurtosi left n sum leftx_i hatmu hatsigma right right texinfo kurtosi n sum x_i hatmuhatsigma kurtosi measur sharpli peak distribut rel width kurtosi normal zero gaussian distribut function doubl gsl_stats_kurtosis_m_sd const doubl data size_t stride size_t n doubl mean doubl sd function comput kurtosi dataset datadata use given valu mean datamean standard deviat datasd texinfo math kurtosi n left sum leftx_i mean sd right right texinfo kurtosi n sum x_i meansd function use alreadi comput mean standard deviat datadata want avoid recomput autocorrel function doubl gsl_stats_lag_autocorrel const doubl data const size_t stride const size_t n function comput lag autocorrel dataset datadata texinfo math a_ sum_i n x_i hatmu x_i hatmu sum_i n x_i hatmu x_i hatmu texinfo a_ sum_i n x_i hatmu x_i hatmu sum_i n x_i hatmu x_i hatmu function doubl gsl_stats_lag_autocorrelation_m const doubl data const size_t stride const size_t n const doubl mean function comput lag autocorrel dataset datadata use given valu mean datamean index singl covari two dataset covari function doubl gsl_stats_covari const doubl data const size_t stride const doubl data const size_t stride const size_t n function comput covari dataset datadata datadata must length datan texinfo math covar n sum_i n x_i hat x y_i hat texinfo covar n sum_i n x_i hat x y_i hat function doubl gsl_stats_covariance_m const doubl data const size_t stride const doubl data const size_t stride const size_t n const doubl mean const doubl mean function comput covari dataset datadata datadata use given valu mean datamean datamean use alreadi comput mean datadata datadata want avoid recomput index singl correl two dataset correl function doubl gsl_stats_correl const doubl data const size_t stride const doubl data const size_t stride const size_t n function effici comput pearson correl coeffici dataset datadata datadata must length datan texinfo math r covx hatsigma_x hatsigma_i n sum x_i hat x y_i hat sqrt n sum x_i hat x sqrt n sum y_i hat texinfo r covx hatsigma_x hatsigma_i n sum x_i hat x y_i hat sqrtn sum x_i hat x sqrtn sum y_i hat function doubl gsl_stats_spearman const doubl data const size_t stride const doubl data const size_t stride const size_t n doubl work function comput spearman rank correl coeffici dataset datadata datadata must length datan addit workspac size datan requir datawork spearman rank correl vector mathx mathi equival pearson correl rank vector mathx_r mathy_r rank defin averag posit element ascend order valu weight sampl function describ section allow comput statist weight sampl function accept array sampl mathx_i associ weight mathw_i sampl mathx_i consid drawn gaussian distribut varianc mathsigma_i sampl weight mathw_i defin reciproc varianc mathw_i sigma_i set weight zero correspond remov sampl dataset function doubl gsl_stats_wmean const doubl w size_t wstride const doubl data size_t stride size_t n function return weight mean dataset datadata stride datastrid length datan use set weight dataw stride datawstrid length datan weight mean defin texinfo math hatmu sum w_i x_i sum w_i texinfo hatmu sum w_i x_i sum w_i function doubl gsl_stats_wvari const doubl w size_t wstride const doubl data size_t stride size_t n function return estim varianc dataset datadata stride datastrid length datan use set weight dataw stride datawstrid length datan estim varianc weight dataset calcul texinfo math hatsigma sum w_i sum w_i sum w_i sum w_i x_i hatmu texinfo hatsigma sum w_isum w_i sum w_i sum w_i x_i hatmu note express reduc unweight varianc familiar mathn factor mathn equal nonzero weight function doubl gsl_stats_wvariance_m const doubl w size_t wstride const doubl data size_t stride size_t n doubl wmean function return estim varianc weight dataset datadata use given weight mean datawmean function doubl gsl_stats_wsd const doubl w size_t wstride const doubl data size_t stride size_t n standard deviat defin squar root varianc function return squar root correspond varianc function funcgsl_stats_wvari function doubl gsl_stats_wsd_m const doubl w size_t wstride const doubl data size_t stride size_t n doubl wmean function return squar root correspond varianc function funcgsl_stats_wvariance_m function doubl gsl_stats_wvariance_with_fixed_mean const doubl w size_t wstride const doubl data size_t stride size_t n const doubl mean function comput unbias estim varianc weight dataset datadata popul mean datamean underli distribut known priori case estim varianc replac sampl mean mathhatmu known popul mean mathmu texinfo math hatsigma sum w_i x_i mu sum w_i texinfo hatsigma sum w_i x_i mu sum w_i function doubl gsl_stats_wsd_with_fixed_mean const doubl w size_t wstride const doubl data size_t stride size_t n const doubl mean standard deviat defin squar root varianc function return squar root correspond varianc function function doubl gsl_stats_wtss const doubl w const size_t wstride const doubl data size_t stride size_t n doubl gsl_stats_wtss_m const doubl w const size_t wstride const doubl data size_t stride size_t n doubl wmean function return weight total sum squar tss datadata weight mean funcgsl_stats_wtss_m usersuppli valu datawmean use funcgsl_stats_wtss comput use funcgsl_stats_wmean texinfo math rm tss sum w_i x_i wmean texinfo tss sum w_i x_i wmean function doubl gsl_stats_wabsdev const doubl w size_t wstride const doubl data size_t stride size_t n function comput weight absolut deviat weight mean datadata absolut deviat mean defin texinfo math absdev sum w_i x_i hatmu sum w_i texinfo absdev sum w_i x_i hatmu sum w_i function doubl gsl_stats_wabsdev_m const doubl w size_t wstride const doubl data size_t stride size_t n doubl wmean function comput absolut deviat weight dataset datadata given weight mean datawmean function doubl gsl_stats_wskew const doubl w size_t wstride const doubl data size_t stride size_t n function comput weight skew dataset datadata texinfo math skew sum w_i x_i hat xhat sigma sum w_i texinfo skew sum w_i x_i hat xhat sigma sum w_i function doubl gsl_stats_wskew_m_sd const doubl w size_t wstride const doubl data size_t stride size_t n doubl wmean doubl wsd function comput weight skew dataset datadata use given valu weight mean weight standard deviat datawmean datawsd function doubl gsl_stats_wkurtosi const doubl w size_t wstride const doubl data size_t stride size_t n function comput weight kurtosi dataset datadata texinfo math kurtosi sum w_i x_i hat xhat sigma sum w_i texinfo kurtosi sum w_i x_i hat xhat sigma sum w_i function doubl gsl_stats_wkurtosis_m_sd const doubl w size_t wstride const doubl data size_t stride size_t n doubl wmean doubl wsd function comput weight kurtosi dataset datadata use given valu weight mean weight standard deviat datawmean datawsd maximum minimum valu follow function find maximum minimum valu dataset indic data contain codenan codenan return sinc maximum minimum valu undefin function return index locat first codenan array return function doubl gsl_stats_max const doubl data size_t stride size_t n function return maximum valu datadata dataset length datan stride datastrid maximum valu defin valu element mathx_i satisfi mathx_i ge x_j mathj want instead find element largest absolut magnitud need appli funcfab funcab data call function function doubl gsl_stats_min const doubl data size_t stride size_t n function return minimum valu datadata dataset length datan stride datastrid minimum valu defin valu element mathx_i satisfi mathx_i le x_j mathj want instead find element smallest absolut magnitud need appli funcfab funcab data call function function void gsl_stats_minmax doubl min doubl max const doubl data size_t stride size_t n function find minimum maximum valu datamin datamax datadata singl pass function size_t gsl_stats_max_index const doubl data size_t stride size_t n function return index maximum valu datadata dataset length datan stride datastrid maximum valu defin valu element mathx_i satisfi mathx_i ge x_j mathj sever equal maximum element first one chosen function size_t gsl_stats_min_index const doubl data size_t stride size_t n function return index minimum valu datadata dataset length datan stride datastrid minimum valu defin valu element mathx_i satisfi mathx_i ge x_j mathj sever equal minimum element first one chosen function void gsl_stats_minmax_index size_t min_index size_t max_index const doubl data size_t stride size_t n function return index datamin_index datamax_index minimum maximum valu datadata singl pass median percentil median percentil function describ section oper sort data matho time also routin comput median unsort input array averag mathon time use quickselect algorithm conveni use quantil measur scale instead percentil use scale function doubl gsl_stats_median_from_sorted_data const doubl sorted_data const size_t stride const size_t n function return median valu datasorted_data dataset length datan stride datastrid element array must ascend numer order check see whether data sort function funcgsl_sort alway use first dataset odd number element median valu element mathn dataset even number element median mean two nearest middl valu element mathn mathn sinc algorithm comput median involv interpol function alway return floatingpoint number even integ data type function doubl gsl_stats_median doubl data const size_t stride const size_t n function return median valu datadata dataset length datan stride datastrid median found use quickselect algorithm input array need sort note algorithm rearrang array input preserv output function doubl gsl_stats_quantile_from_sorted_data const doubl sorted_data size_t stride size_t n doubl f function return quantil valu datasorted_data doubleprecis array length datan stride datastrid element array must ascend numer order quantil determin dataf fraction exampl comput valu th percentil dataf valu check see whether data sort function funcgsl_sort alway use first quantil found interpol use formula texinfo math hboxquantil delta x_i delta x_i texinfo quantil delta x_i delta x_i mathi codefloorn f mathdelta mathnf thu minimum valu array codedatastrid given dataf equal zero maximum valu codedatanstrid given dataf equal one median valu given dataf equal sinc algorithm comput quantil involv interpol function alway return floatingpoint number even integ data type node statist test section statist test fixm work statist test deftypefun doubl gsl_stats_ttest const doubl data doubl data size_t n size_t n deftypefunx statist doubl gsl_stats_int_ttest const doubl data doubl data size_t n size_t n function funcgsl_stats_ttest comput ttest statist two array datadata datadata length datan datan respect ttest statist measur differ mean two dataset order statist mathkth order statist sampl equal mathkth smallest valu mathkth order statist set mathn valu mathx left x_i right le le n denot mathx_k median set mathx equal mathx_left fracn right mathn odd averag mathx_left fracn right mathx_left fracn right mathn even mathkth smallest element length mathn vector found averag mathon time use quickselect algorithm function gsl_stats_selectdoubl data const size_t stride const size_t n const size_t k function find datakth smallest element input array datadata length datan stride datastrid use quickselect method algorithm rearrang element datadata input array preserv output index singl robust locat estim singl locat estim singl estim locat robust locat estim locat estim refer typic central valu best describ given dataset mean median exampl locat estim howev mean sever sensit data outlier give erron valu even small number outlier present median hand strong insensit data outlier due nonsmooth behav unexpectedli certain situat gsl offer follow altern locat estim robust presenc outlier index singl trim mean singl truncat mean singl mean trim singl mean truncat trim mean trim mean truncat mean discard certain number smallest largest sampl input vector comput mean remain sampl amount trim specifi factor mathalpha number sampl discard end input vector mathleftlfloor alpha n rightrfloor mathn length input discard sampl end one would set mathalpha function doubl gsl_stats_trmean_from_sorted_data const doubl alpha const doubl sorted_data const size_t stride const size_t n function return trim mean datasorted_data dataset length datan stride datastrid element array must ascend numer order check see whether data sort function funcgsl_sort alway use first trim factor mathalpha given dataalpha mathalpha ge median input return index singl gastwirth estim gastwirth estim gastwirth locat estim weight sum three order statist texinfo math gastwirth time q_frac time q_frac time q_frac texinfo gastwirth q_ q_ q_ mathq_frac onethird quantil mathq_frac onehalf quantil ie median mathq_frac twothird quantil function doubl gsl_stats_gastwirth_from_sorted_data const doubl sorted_data const size_t stride const size_t n function return gastwirth locat estim datasorted_data dataset length datan stride datastrid element array must ascend numer order check see whether data sort function funcgsl_sort alway use first index singl robust scale estim singl scale estim singl estim scale robust scale estim robust scale estim also known robust measur scale attempt quantifi statist dispers variabl scatter spread set data may contain outlier dataset usual varianc standard deviat scale estim render useless even singl outlier index singl median absolut deviat _sec_madstatist median absolut deviat mad median absolut deviat mad defin texinfo math mad time textrmmedian left left x_i textrmmedian left x right right right texinfo mad median x_i medianx word first median sampl comput median subtract sampl input find deviat sampl median median absolut deviat mad factor math make mad unbias estim standard deviat gaussian data median absolut deviat asymptot effici function doubl gsl_stats_mad const doubl data const size_t stride const size_t n doubl work function doubl gsl_stats_mad const doubl data const size_t stride const size_t n doubl work function return median absolut deviat datadata dataset length datan stride datastrid codemad function calcul mathtextrmmedian left left x_i textrmmedian left x right right right ie mathmad statist without bia correct scale factor function requir addit workspac size coden provid datawork index singl sn statist _sec_snstatist maths_n statist maths_n statist develop croux rousseeuw defin texinfo math s_n time c_n time textrmmedian_i left textrmmedian_j left left x_i x_j right right right texinfo s_n c_n median_i median_j x_i x_j sampl mathx_i le le n median valu mathleft x_i x_j right comput mathx_j le j le n yield mathn valu whose median give final maths_n factor math make maths_n unbias estim standard deviat gaussian data factor mathc_n correct factor correct bia small sampl size maths_n asymptot effici function doubl gsl_stats_sn_from_sorted_data const doubl sorted_data const size_t stride const size_t n doubl work function doubl gsl_stats_sn_from_sorted_data const doubl sorted_data const size_t stride const size_t n doubl work function return maths_n statist datasorted_data dataset length datan stride datastrid element array must ascend numer order check see whether data sort function funcgsl_sort alway use first codesn function calcul mathtextrmmedian_i left textrmmedian_j left left x_i x_j right right right ie maths_n statist without bia correct scale factor function requir addit workspac size coden provid datawork index singl qn statist _sec_qnstatist mathq_n statist mathq_n statist develop croux rousseeuw defin texinfo math q_n time d_n time left left x_i x_j right j right_k texinfo q_n d_n x_i x_j j _k factor math make mathq_n unbias estim standard deviat gaussian data factor mathd_n correct factor correct bia small sampl size order statist texinfo math k left beginarrayc leftlfloor fracn rightrfloor endarray right texinfo k floorn mathq_n asymptot effici function doubl gsl_stats_qn_from_sorted_data const doubl sorted_data const size_t stride const size_t n doubl work int work_int doubl gsl_stats_qn_from_sorted_data const doubl sorted_data const size_t stride const size_t n doubl work int work_int function return mathq_n statist datasorted_data dataset length datan stride datastrid element array must ascend numer order check see whether data sort function funcgsl_sort alway use first codeqn function calcul mathleft left x_i x_j right j right_k ie mathq_n without bia correct scale factor function requir addit workspac size coden provid datawork integ workspac size coden provid datawork_int exampl basic exampl use statist function includ examplesstatc code program produc follow output includ examplesstattxt code exampl use sort data includ examplesstatsortc code program produc follow output includ examplesstatsorttxt code refer read standard refer almost topic statist multivolum advanc theori statist kendal stuart mauric kendal alan stuart j keith ord advanc theori statist multipl volum reprint kendal advanc theori statist wiley isbn x mani statist concept easili understood bayesian approach follow book gelman carlin stern rubin give comprehens coverag subject andrew gelman john b carlin hal stern donald b rubin bayesian data analysi chapman hall isbn physicist particl data group provid use review probabl statist mathemat tool section annual review particl physic review particl properti rm barnett et al physic review review particl physic avail onlin websit httppdglblgov follow paper describ robust scale estim c croux p j rousseeuw timeeffici algorithm two highli robust estim scale comp stat physica heidelberg p j rousseeuw c croux explicit scale estim high breakdown point lstatist analysi relat method pp index fermidirac function function describ section declar header file filegsl_sf_fermi_dirach complet fermidirac integr index singl complet fermidirac integr singl fjx fermidirac integr complet fermidirac integr mathf_jx given texinfo math f_jx overgammaj int_infti dt tj exptx texinfo f_jx gammaj int_infti dt tj exptx note fermidirac integr sometim defin without normalis factor text function doubl gsl_sf_fermi_dirac_m doubl x int gsl_sf_fermi_dirac_m_ doubl x gsl_sf_result result routin comput complet fermidirac integr index math integr given mathf_x ex ex except return valu gsl_eundrflw function doubl gsl_sf_fermi_dirac_ doubl x int gsl_sf_fermi_dirac__ doubl x gsl_sf_result result routin comput complet fermidirac integr index math integr given mathf_x ln ex except return valu gsl_eundrflw function doubl gsl_sf_fermi_dirac_ doubl x int gsl_sf_fermi_dirac__ doubl x gsl_sf_result result routin comput complet fermidirac integr index math mathf_x int_infti dt exptx except return valu gsl_eundrflw gsl_eovrflw function doubl gsl_sf_fermi_dirac_ doubl x int gsl_sf_fermi_dirac__ doubl x gsl_sf_result result routin comput complet fermidirac integr index math mathf_x int_infti dt exptx except return valu gsl_eundrflw gsl_eovrflw function doubl gsl_sf_fermi_dirac_int int j doubl x int gsl_sf_fermi_dirac_int_ int j doubl x gsl_sf_result result routin comput complet fermidirac integr integ index mathj mathf_jx gammaj int_infti dt tj exptx complet integr f_jx integ j except return valu gsl_eundrflw gsl_eovrflw function doubl gsl_sf_fermi_dirac_mhalf doubl x int gsl_sf_fermi_dirac_mhalf_ doubl x gsl_sf_result result routin comput complet fermidirac integr mathf_x except return valu gsl_eundrflw gsl_eovrflw function doubl gsl_sf_fermi_dirac_half doubl x int gsl_sf_fermi_dirac_half_ doubl x gsl_sf_result result routin comput complet fermidirac integr mathf_x except return valu gsl_eundrflw gsl_eovrflw function doubl gsl_sf_fermi_dirac_half doubl x int gsl_sf_fermi_dirac_half_ doubl x gsl_sf_result result routin comput complet fermidirac integr mathf_x except return valu gsl_eundrflw gsl_eovrflw incomplet fermidirac integr index singl incomplet fermidirac integr singl fjxb incomplet fermidirac integr incomplet fermidirac integr mathf_jxb given texinfo math f_jxb overgammaj int_binfti dt tj exptx texinfo f_jxb gammaj int_binfti dt tj exptx function doubl gsl_sf_fermi_dirac_inc_ doubl x doubl b int gsl_sf_fermi_dirac_inc__ doubl x doubl b gsl_sf_result result routin comput incomplet fermidirac integr index zero mathf_xb ln ebx bx except return valu gsl_eundrflw gsl_edom index synchrotron function function describ section declar header file filegsl_sf_synchrotronh function doubl gsl_sf_synchrotron_ doubl x int gsl_sf_synchrotron__ doubl x gsl_sf_result result routin comput first synchrotron function mathx int_xinfti dt k_t mathx ge domain x except return valu gsl_edom gsl_eundrflw function doubl gsl_sf_synchrotron_ doubl x int gsl_sf_synchrotron__ doubl x gsl_sf_result result routin comput second synchrotron function mathx k_x mathx ge domain x except return valu gsl_edom gsl_eundrflw index permut permut includ includerst chapter describ function creat manipul permut permut mathp repres array mathn integ rang mathn valu mathp_i occur applic permut mathp vector mathv yield new vector mathv mathv_i v_p_i exampl array math repres permut exchang last two element four element vector correspond ident permut math note permut produc linear algebra routin correspond exchang matrix column consid appli rowvector form mathv v p rather columnvector permut element vector function describ chapter defin header file filegsl_permutationh permut struct type gsl_permut permut defin structur contain two compon size permut pointer permut array element permut array type codesize_t typegsl_permut structur look like typedef struct size_t size size_t data gsl_permut permut alloc function gsl_permut gsl_permutation_alloc size_t n function alloc memori new permut size datan permut initi element undefin use function funcgsl_permutation_calloc want creat permut initi ident null pointer return insuffici memori avail creat permut function gsl_permut gsl_permutation_calloc size_t n function alloc memori new permut size datan initi ident null pointer return insuffici memori avail creat permut index ident permut function void gsl_permutation_init gsl_permut p function initi permut datap ident ie math dot n function void gsl_permutation_fre gsl_permut p function free memori use permut datap function int gsl_permutation_memcpi gsl_permut dest const gsl_permut src function copi element permut datasrc permut datadest two permut must size access permut element follow function use access manipul permut function size_t gsl_permutation_get const gsl_permut p const size_t function return valu dataith element permut datap datai lie outsid allow rang mathn error handler invok return inlinefn index singl exchang permut element singl swap permut element function int gsl_permutation_swap gsl_permut p const size_t const size_t j function exchang dataith datajth element permut datap permut properti function size_t gsl_permutation_s const gsl_permut p function return size permut datap function size_t gsl_permutation_data const gsl_permut p function return pointer array element permut datap index singl check permut valid singl test permut valid function int gsl_permutation_valid const gsl_permut p function check permut datap valid coden element contain number coden permut function index revers permut function void gsl_permutation_revers gsl_permut p function revers element permut datap index invert permut function int gsl_permutation_invers gsl_permut inv const gsl_permut p function comput invers permut datap store result datainv index iter permut function int gsl_permutation_next gsl_permut p function advanc permut datap next permut lexicograph order return macrogsl_success permut avail return macrogsl_failur leav datap unmodifi start ident permut repeatedli appli function iter possibl permut given order function int gsl_permutation_prev gsl_permut p function step backward permut datap previou permut lexicograph order return macrogsl_success previou permut avail return macrogsl_failur leav datap unmodifi appli permut function int gsl_permut const size_t p doubl data size_t stride size_t n function appli permut datap array datadata size datan stride datastrid function int gsl_permute_invers const size_t p doubl data size_t stride size_t n function appli invers permut datap array datadata size datan stride datastrid function int gsl_permute_vector const gsl_permut p gsl_vector v function appli permut datap element vector datav consid rowvector act permut matrix right mathv v p mathjth column permut matrix mathp given mathp_jth column ident matrix permut datap vector datav must length function int gsl_permute_vector_invers const gsl_permut p gsl_vector v function appli invers permut datap element vector datav consid rowvector act invers permut matrix right mathv v pt note permut matric invers transpos mathjth column permut matrix mathp given mathdatap_jth column ident matrix permut datap vector datav must length function int gsl_permute_matrix const gsl_permut p gsl_matrix function appli permut datap matrix dataa right matha p mathjth column permut matrix mathp given mathp_jth column ident matrix effect permut column dataa accord permut datap number column dataa must equal size permut datap function int gsl_permutation_mul gsl_permut p const gsl_permut pa const gsl_permut pb function combin two permut datapa datapb singl permut datap mathp pa pb permut datap equival appli datapb first datapa read write permut librari provid function read write permut file binari data format text function int gsl_permutation_fwrit file stream const gsl_permut p function write element permut datap stream datastream binari format function return macrogsl_efail problem write file sinc data written nativ binari format may portabl differ architectur function int gsl_permutation_fread file stream gsl_permut p function read permut datap open stream datastream binari format permut datap must prealloc correct length sinc function use size datap determin mani byte read function return macrogsl_efail problem read file data assum written nativ binari format architectur function int gsl_permutation_fprintf file stream const gsl_permut p const char format function write element permut datap linebylin stream datastream use format specifi dataformat suitabl type datasize_t iso c type modifi codez repres codesize_t codezun suitabl format f_ function return macrogsl_efail problem write file function int gsl_permutation_fscanf file stream gsl_permut p function read format data stream datastream permut datap permut datap must prealloc correct length sinc function use size datap determin mani number read function return macrogsl_efail problem read file permut cyclic form permut repres linear cyclic notat function describ section convert two form linear notat index map alreadi describ cyclic notat express permut seri circular rearrang group element cycl exampl cycl replac replac replac circular fashion cycl differ set element combin independ exampl combin cycl cycl exchang element cycl length one repres element unchang permut refer singleton shown everi permut decompos combin cycl decomposit uniqu alway rearrang standard canon form reorder element librari use canon form defin knuth art comput program vol rd ed section p procedur obtain canon form given knuth write singleton cycl explicitli within cycl put smallest number first order cycl decreas order first number cycl exampl linear represent repres canon form permut correspond exchang element rotat element import properti canon form reconstruct content cycl without bracket addit remov bracket consid linear represent differ permut exampl given permut would becom map mani applic theori permut function int gsl_permutation_linear_to_canon gsl_permut q const gsl_permut p function comput canon form permut datap store output argument dataq function int gsl_permutation_canonical_to_linear gsl_permut p const gsl_permut q function convert permut dataq canon form back linear form store output argument datap function size_t gsl_permutation_invers const gsl_permut p function count number invers permut datap invers pair element order exampl permut three invers correspond pair ident permut invers function size_t gsl_permutation_linear_cycl const gsl_permut p function count number cycl permut datap given linear form function size_t gsl_permutation_canonical_cycl const gsl_permut q function count number cycl permut dataq given canon form exampl exampl program creat random permut shuffl element ident find invers includ examplespermshufflec code output program aout initi permut random permut invers permut random permut codepi invers codeqi relat ident codepqi verifi output next exampl program step forward possibl third order permut start ident includ examplespermseqc code output program aout permut gener lexicograph order revers sequenc begin final permut revers ident replac funcgsl_permutation_next funcgsl_permutation_prev refer read subject permut cover extens follow donald e knuth art comput program sort search vol rd ed addisonwesley isbn definit canon form see donald e knuth art comput program fundament algorithm vol rd ed addisonwesley isbn section unusu correspond p rubric footnot f version gnu c librari prior iso c standard type modifi codez use instead index error handl error handl chapter describ way gsl function report handl error examin statu inform return everi function determin whether succeed fail fail find precis caus failur also defin error handl function modifi default behavior librari function describ section declar header file filegsl_errnoh error report librari follow threadsaf error report convent posix thread librari function return nonzero error code indic error code indic success int statu gsl_function statu error occur statu valu specifi type error routin report error whenev perform task request exampl rootfind function would return nonzero error code could converg request accuraci exceed limit number iter situat like normal occurr use mathemat librari check return statu function call whenev routin report error return valu specifi type error return valu analog valu variabl codeerrno c librari caller examin return code decid action take includ ignor error consid seriou addit report error return code librari also error handler function funcgsl_error function call librari function report error return caller default behavior error handler print messag abort program gsl filec error invalid argument suppli user default gsl error handler invok abort purpos funcgsl_error handler provid function breakpoint set catch librari error run debugg intend use product program handl error use return code index singl error code reserv error code error code number return librari function defin file filegsl_errnoh prefix codegsl_ expand nonzero constant integ valu error code reserv applic use librari mani error code use base name correspond error code c librari common error code index singl error code var int gsl_edom domain error use mathemat function argument valu fall domain function defin like dataedom c librari var int gsl_erang rang error use mathemat function result valu represent overflow underflow like dataerang c librari var int gsl_enomem memori avail system alloc virtual memori capac full like dataenomem c librari error report gsl routin encount problem tri alloc memori funcmalloc var int gsl_einval invalid argument use indic variou kind problem pass wrong argument librari function like dataeinv c librari error code convert error messag use function funcgsl_strerror function const char gsl_strerror const int gsl_errno function return pointer string describ error code datagsl_errno exampl printf error sn gsl_strerror statu would print error messag like codeerror output rang error statu valu datagsl_erang index error handler error handler default behavior gsl error handler print short messag call funcabort default use program stop coredump whenev librari routin report error intend failsaf default program check return statu librari routin dont encourag write program way turn default error handler respons check return valu routin handl also custom error behavior provid new error handler exampl altern error handler could log error file ignor certain error condit underflow start debugg attach current process error occur gsl error handler type codegsl_error_handler_t defin filegsl_errnoh type gsl_error_handler_t type gsl error handler function error handler pass four argument specifi reason error string name sourc file occur also string line number file integ error number integ sourc file line number set compil time use code__file__ code__line__ direct preprocessor error handler function return type codevoid error handler function defin like void handler const char reason const char file int line int gsl_errno request use error handler need call function funcgsl_set_error_handl also declar filegsl_errnoh function gsl_error_handler_t gsl_set_error_handl gsl_error_handler_t new_handl function set new error handler datanew_handl gsl librari routin previou handler return restor later note pointer user defin error handler function store static variabl one error handler per program function use multithread program except set programwid error handler master thread follow exampl show set restor new error handler save origin handler instal new handler old_handl gsl_set_error_handl my_handl code use new handler restor origin handler gsl_set_error_handl old_handl use default behavior funcabort error set error handler codenul old_handl gsl_set_error_handl null function gsl_error_handler_t gsl_set_error_handler_off function turn error handler defin error handler noth caus program continu error return valu librari routin must check recommend behavior product program previou handler return restor later error behavior chang specif applic recompil librari custom definit codegsl_error macro file filegsl_errnoh index error handl macro use gsl error report function write numer function program also use gsl code may find conveni adopt error report convent librari report error need call function funcgsl_error string describ error return appropri error code filegsl_errnoh special valu codenan conveni file filegsl_errnoh defin two macro carri step macro gsl_error reason gsl_errno macro report error use gsl convent return statu valu codegsl_errno expand follow code fragment gsl_error reason __file__ __line__ gsl_errno return gsl_errno macro definit filegsl_errnoh actual wrap code codedo block prevent possibl pars problem exampl macro could use report routin achiev request toler report error routin need return error code codegsl_etol residu toler gsl_errorresidu exce toler gsl_etol macro gsl_error_v reason gsl_errno valu macro codegsl_error return userdefin valu datavalu instead error code use mathemat function return float point valu follow exampl show return codenan mathemat singular use codegsl_error_v macro x gsl_error_valargu lie singular gsl_erang gsl_nan exampl exampl code check return valu function error might report includ stdioh includ gslgsl_errnoh includ gslgsl_fft_complexh int statu size_t n gsl_set_error_handler_off statu gsl_fft_complex_radix_forward data stride n statu statu gsl_einval fprintf stderr invalid argument ndn n els fprintf stderr fail gsl_errnodn statu exit function funcgsl_fft_complex_radix_forward accept integ length power two variabl coden power two call librari function return codegsl_einv indic length argument invalid function call funcgsl_set_error_handler_off stop default error handler abort program codeels claus catch possibl error index singl fft singl fast fourier transform see fft singl fourier transform see fft singl discret fourier transform see fft singl dft see fft fast fourier transform fft includ includerst chapter describ function perform fast fourier transform fft librari includ radix routin length power two mixedradix routin work length effici separ version routin real data complex data mixedradix routin reimplement fftpack librari paul swarztraub fortran code fftpack avail netlib fftpack also includ routin sine cosin transform current avail gsl detail deriv underli algorithm consult document gsl fft algorithm see refrefer read fftrefer index fft mathemat definit mathemat definit fast fourier transform effici algorithm calcul discret fourier transform dft math x_j sum_kn z_k exp pi j k n dft usual aris approxim continu fourier transform function sampl discret interv space time naiv evalu discret fourier transform matrixvector multipl mathwvecz gener matrixvector multipl take mathon oper mathn datapoint fast fourier transform algorithm use divideandconqu strategi factor matrix mathw smaller submatric correspond integ factor length mathn mathn factor product integ mathf_ f_ ldot f_m dft comput mathon sum f_i oper radix fft give oper count mathon log_ n fft function offer three type transform forward invers backward base mathemat definit definit forward fourier transform mathx hboxfftz math x_j sum_kn z_k exp pi j k n definit invers fourier transform mathx hboxifftz math z_j n sum_kn x_k exp pi j k n factor mathn make true invers exampl call funcgsl_fft_complex_forward follow call funcgsl_fft_complex_invers return origin data within numer error gener two possibl choic sign exponenti transform inversetransform pair gsl follow convent fftpack use neg exponenti forward transform advantag convent invers transform recreat origin function simpl fourier synthesi numer recip use opposit convent posit exponenti forward transform backward fft simpli terminolog unscal version invers fft math zbackwards_j sum_kn x_k exp pi j k n overal scale result unimport often conveni use backward fft instead invers save unnecessari divis index singl fft complex data overview complex data fft input output complex fft routin pack array float point number pack array real imaginari part complex number place altern neighbor element exampl follow definit pack array length doubl x gsl_complex_packed_array data x use hold array three complex number codez follow way data rez data imz data rez data imz data rez data imz array indic data order definit dftie index transform permut data stride paramet allow user perform transform element codezstridei instead codezi stride greater use take inplac fft column matrix stride access array without addit space element perform fft vector argument codegsl_vector_complex v use follow definit equival call function describ chapter gsl_complex_packed_array data vdata size_t stride vstride size_t n vsize physic applic import rememb index appear dft correspond directli physic frequenc timestep dft mathdelta frequencydomain includ posit neg frequenc rang mathdelta mathdelta posit frequenc store begin array middl neg frequenc store backward end array tabl show layout array datadata correspond timedomain data mathz frequencydomain data mathx index z x fftz zt xf zt xf n delta zt xf n delta n zt n xf delta delta n zt n xf n delta n zt n xf n delta n zt n xf n delta mathn even locat mathn contain posit neg frequenc math delta math delta equival mathn odd gener structur tabl still appli mathn appear index singl fft complex data radix algorithm singl radix fft complex data radix fft routin complex data radix algorithm describ section simpl compact although necessarili effici use cooleytukey algorithm comput inplac complex fft length power addit storag requir correspond selfsort mixedradix routin offer better perform expens requir addit work space function describ section declar header file filegsl_fft_complexh function int gsl_fft_complex_radix_forward gsl_complex_packed_array data size_t stride size_t n int gsl_fft_complex_radix_transform gsl_complex_packed_array data size_t stride size_t n gsl_fft_direct sign int gsl_fft_complex_radix_backward gsl_complex_packed_array data size_t stride size_t n int gsl_fft_complex_radix_invers gsl_complex_packed_array data size_t stride size_t n function comput forward backward invers fft length datan stride datastrid pack complex array datadata use inplac radix decimationintim algorithm length transform datan restrict power two codetransform version function datasign argument either codeforward math codebackward math function return valu macrogsl_success error detect macrogsl_edom length data datan power two function int gsl_fft_complex_radix_dif_forward gsl_complex_packed_array data size_t stride size_t n int gsl_fft_complex_radix_dif_transform gsl_complex_packed_array data size_t stride size_t n gsl_fft_direct sign int gsl_fft_complex_radix_dif_backward gsl_complex_packed_array data size_t stride size_t n int gsl_fft_complex_radix_dif_invers gsl_complex_packed_array data size_t stride size_t n decimationinfrequ version radix fft function exampl program comput fft short puls sampl length make result fourier transform real puls defin equal posit neg time math dot neg time wrap around end array includ examplesfftc code note assum program use default error handler call funcabort error use safe error handler would need check return statu funcgsl_fft_complex_radix_forward transform data rescal mathsqrt n fit plot input real part shown choic input data imaginari part zero allow wraparound neg time matht work unit mathkn dft approxim continuum fourier transform give modul sine function math int_aa e pi k x dx sinpi k overpi k output exampl program plot numreffig_fftcomplexradix _fig_fftcomplexradix figur imagesfftcomplexradixpng scale puls discret fourier transform output exampl program index singl fft complex data mixedradix algorithm singl mixedradix fft complex data mixedradix fft routin complex data section describ mixedradix fft algorithm complex data mixedradix function work fft length reimplement paul swarztraub fortran fftpack librari theori explain review articl selfsort mixedradix fft clive temperton routin use index scheme basic algorithm fftpack mixedradix algorithm base subtransform moduleshighli optim small length fft combin creat larger fft effici modul factor modul composit factor faster combin modul math math factor implement modul fallback gener lengthmathn modul use singleton method effici comput dft modul mathon slower dedic modul would work length mathn cours length use gener lengthmathn modul still factor much possibl exampl length factor math larg prime factor worst case scenario eg found mathn avoid mathon scale domin runtim consult document gsl fft algorithm includ gsl distribut encount problem mixedradix initi function funcgsl_fft_complex_wavetable_alloc return list factor chosen librari given length mathn use check well length factor estim runtim first approxim runtim scale mathn sum f_i mathf_i factor mathn program user control may wish issu warn transform slow length poorli factor frequent encount data length factor use exist smallprim modul consult gsl fft algorithm detail ad support factor first space trigonometr lookup tabl scratch area alloc call one codealloc function call combin factor scratch space trigonometr lookup array wavet contain sine cosin waveform frequenc use fft wavet initi call correspond codeinit function factor data length use implement subtransform prefer factor wherev possibl trigonometr lookup tabl chosen factor also comput fft comput call one codeforward codebackward codeinvers function data length wavet argument function describ section declar header file filegsl_fft_complexh function gsl_fft_complex_wavet gsl_fft_complex_wavetable_alloc size_t n function prepar trigonometr lookup tabl complex fft length datan function return pointer newli alloc typegsl_fft_complex_wavet error detect null pointer case error length datan factor product subtransform factor trigonometr coeffici store wavet trigonometr coeffici comput use direct call codesin codeco accuraci recurs relat could use comput lookup tabl faster applic perform mani fft length comput oneoff overhead affect final throughput wavet structur use repeatedli transform length tabl modifi call fft function wavet use forward backward invers transform given length function void gsl_fft_complex_wavetable_fre gsl_fft_complex_wavet wavet function free memori associ wavet datawavet wavet freed fft length need function oper typegsl_fft_complex_wavet structur contain intern paramet fft necessari set compon directli sometim use examin exampl chosen factor fft length given use provid estim runtim numer error wavet structur declar header file filegsl_fft_complexh type gsl_fft_complex_wavet structur hold factor trigonometr lookup tabl mix radix fft algorithm follow compon codesize_t n number complex data point codesize_t nf number factor length coden decompos codesize_t factor array factor first codenf element use codegsl_complex trig pointer prealloc trigonometr lookup tabl coden complex element codegsl_complex twiddl array pointer codetrig give twiddl factor pass fixm factor fix length array therefor probabl violat gnu code standard type gsl_fft_complex_workspac mix radix algorithm requir addit work space hold intermedi step transform function gsl_fft_complex_workspac gsl_fft_complex_workspace_alloc size_t n function alloc workspac complex transform length datan function void gsl_fft_complex_workspace_fre gsl_fft_complex_workspac workspac function free memori associ workspac dataworkspac workspac freed fft length need follow function comput transform function int gsl_fft_complex_forward gsl_complex_packed_array data size_t stride size_t n const gsl_fft_complex_wavet wavet gsl_fft_complex_workspac work int gsl_fft_complex_transform gsl_complex_packed_array data size_t stride size_t n const gsl_fft_complex_wavet wavet gsl_fft_complex_workspac work gsl_fft_direct sign int gsl_fft_complex_backward gsl_complex_packed_array data size_t stride size_t n const gsl_fft_complex_wavet wavet gsl_fft_complex_workspac work int gsl_fft_complex_invers gsl_complex_packed_array data size_t stride size_t n const gsl_fft_complex_wavet wavet gsl_fft_complex_workspac work function comput forward backward invers fft length datan stride datastrid pack complex array datadata use mix radix decimationinfrequ algorithm restrict length datan effici modul provid subtransform length remain factor comput slow mathon generalmathn modul caller must suppli datawavet contain trigonometr lookup tabl workspac datawork codetransform version function datasign argument either codeforward math codebackward math function return valu code error detect follow datagsl_errno condit defin function macrogsl_edom length data datan posit integ ie datan zero macrogsl_einv length data datan length use comput given datawavet match exampl program comput fft short puls sampl length math use mixedradix algorithm includ examplesfftmrc code note assum program use default codegsl error handler call funcabort error use safe error handler would need check return statu codegsl routin index fft real data overview real data fft function real data similar complex data howev import differ forward invers transform fourier transform real sequenc real complex sequenc special symmetri math z_k z_nk sequenc symmetri call conjugatecomplex halfcomplex differ structur requir differ storag layout forward transform real halfcomplex invers transform halfcomplex back real consequ routin divid two set function codegsl_fft_r oper real sequenc function codegsl_fft_halfcomplex oper halfcomplex sequenc function codegsl_fft_r comput frequenc coeffici real sequenc halfcomplex coeffici mathc real sequenc mathx given fourier analysi math c_k sum_jn x_j exp pi j k n function codegsl_fft_halfcomplex comput invers backward transform reconstruct real sequenc fourier synthesi halfcomplex frequenc coeffici mathc math x_j n sum_kn c_k exp pi j k n symmetri halfcomplex sequenc impli half complex number output need store remain half reconstruct use halfcomplex symmetri condit work length even oddwhen length even middl valu mathkn also real thu datan real number requir store halfcomplex sequenc transform real sequenc store size array origin data precis storag arrang depend algorithm differ radix mixedradix routin radix function oper inplac constrain locat element store restrict forc real imaginari part store far apart mixedradix algorithm restrict store real imaginari part given term neighbor locat desir better local memori access index singl fft real data radix algorithm singl radix fft real data radix fft routin real data section describ radix fft algorithm real data use cooleytukey algorithm comput inplac fft length power radix fft function real data declar header file filegsl_fft_realh function int gsl_fft_real_radix_transform doubl data size_t stride size_t n function comput inplac radix fft length datan stride datastrid real array datadata output halfcomplex sequenc store inplac arrang halfcomplex term use follow scheme mathk n real part mathkth term store locat mathk correspond imaginari part store locat mathnk term mathk n reconstruct use symmetri mathz_k z_nk term mathk mathkn pure real count special case real part store locat math mathn respect imaginari part zero store follow tabl show correspond output datadata equival result obtain consid input data complex sequenc zero imaginari part assum datastrid complexr data compleximag complexr data compleximag datan complexkr datak complexkimag datank complexnr datan complexnimag complexkr datak k n k complexkimag datank complexnr data complexnimag datan note output data convert full complex sequenc use function funcgsl_fft_halfcomplex_radix_unpack describ radix fft function halfcomplex data declar header file filegsl_fft_halfcomplexh function int gsl_fft_halfcomplex_radix_invers doubl data size_t stride size_t n int gsl_fft_halfcomplex_radix_backward doubl data size_t stride size_t n function comput invers backward inplac radix fft length datan stride datastrid halfcomplex sequenc datadata store accord output scheme use funcgsl_fft_real_radix result real array store natur order function int gsl_fft_halfcomplex_radix_unpack const doubl halfcomplex_coeffici gsl_complex_packed_array complex_coeffici size_t stride size_t n function convert datahalfcomplex_coeffici array halfcomplex coeffici return funcgsl_fft_real_radix_transform ordinari complex array datacomplex_coeffici fill complex array use symmetri mathz_k z_nk reconstruct redund element algorithm convers complex_coefficientr halfcomplex_coeffici complex_coefficientimag n doubl hc_real halfcomplex_coefficientistrid doubl hc_imag halfcomplex_coefficientnistrid complex_coefficientistrider hc_real complex_coefficientistrideimag hc_imag complex_coefficientn istrider hc_real complex_coefficientn istrideimag hc_imag n complex_coefficientistrider halfcomplex_coefficientn stride complex_coefficientistrideimag index singl fft real data mixedradix algorithm singl mixedradix fft real data mixedradix fft routin real data section describ mixedradix fft algorithm real data mixedradix function work fft length reimplement realfft routin fortran fftpack librari paul swarztraub theori behind algorithm explain articl fast mixedradix real fourier transform clive temperton routin use index scheme basic algorithm fftpack function use fftpack storag convent halfcomplex sequenc convent halfcomplex transform real sequenc store frequenc increas order start zero real imaginari part frequenc neighbor locat valu known real imaginari part store imaginari part zerofrequ compon never store known zero sinc zero frequenc compon simpli sum input data real sequenc even length imaginari part frequenc mathn store either sinc symmetri mathz_k z_nk impli pure real storag scheme best shown exampl tabl show output oddlength sequenc mathn two column give correspond valu halfcomplex sequenc return funcgsl_fft_real_transform datahalfcomplex valu datacomplex would return real input sequenc pass funcgsl_fft_complex_backward complex sequenc imaginari part set code complexr halfcomplex compleximag complexr halfcomplex compleximag halfcomplex complexr halfcomplex compleximag halfcomplex complexr halfcomplex compleximag halfcomplex complexr halfcomplex compleximag halfcomplex upper element datacomplex array codecomplex codecomplex fill use symmetri condit imaginari part zerofrequ term codecompleximag known zero symmetri next tabl show output evenlength sequenc mathn even case two valu pure real complexr halfcomplex compleximag complexr halfcomplex compleximag halfcomplex complexr halfcomplex compleximag halfcomplex complexr halfcomplex compleximag complexr halfcomplex compleximag halfcomplex complexr halfcomplex compleximag halfcomplex upper element datacomplex array codecomplex codecomplex fill use symmetri condit codecompleximag codecompleximag known zero function declar header file filegsl_fft_realh filegsl_fft_halfcomplexh type gsl_fft_real_wavet gsl_fft_halfcomplex_wavet data structur contain lookup tabl fft fix size function gsl_fft_real_wavet gsl_fft_real_wavetable_alloc size_t n gsl_fft_halfcomplex_wavet gsl_fft_halfcomplex_wavetable_alloc size_t n function prepar trigonometr lookup tabl fft size mathn real element function return pointer newli alloc struct error detect null pointer case error length datan factor product subtransform factor trigonometr coeffici store wavet trigonometr coeffici comput use direct call codesin codeco accuraci recurs relat could use comput lookup tabl faster applic perform mani fft length comput wavet oneoff overhead affect final throughput wavet structur use repeatedli transform length tabl modifi call fft function appropri type wavet must use forward real invers halfcomplex transform function void gsl_fft_real_wavetable_fre gsl_fft_real_wavet wavet void gsl_fft_halfcomplex_wavetable_fre gsl_fft_halfcomplex_wavet wavet function free memori associ wavet datawavet wavet freed fft length need mix radix algorithm requir addit work space hold intermedi step transform type gsl_fft_real_workspac workspac contain paramet need comput real fft function gsl_fft_real_workspac gsl_fft_real_workspace_alloc size_t n function alloc workspac real transform length datan workspac use forward real invers halfcomplex transform function void gsl_fft_real_workspace_fre gsl_fft_real_workspac workspac function free memori associ workspac dataworkspac workspac freed fft length need follow function comput transform real halfcomplex data function int gsl_fft_real_transform doubl data size_t stride size_t n const gsl_fft_real_wavet wavet gsl_fft_real_workspac work int gsl_fft_halfcomplex_transform doubl data size_t stride size_t n const gsl_fft_halfcomplex_wavet wavet gsl_fft_real_workspac work function comput fft datadata real halfcomplex array length datan use mix radix decimationinfrequ algorithm funcgsl_fft_real_transform datadata array timeord real data funcgsl_fft_halfcomplex_transform datadata contain fourier coeffici halfcomplex order describ restrict length datan effici modul provid subtransform length remain factor comput slow mathon generaln modul caller must suppli datawavet contain trigonometr lookup tabl workspac datawork function int gsl_fft_real_unpack const doubl real_coeffici gsl_complex_packed_array complex_coeffici size_t stride size_t n function convert singl real array datareal_coeffici equival complex array datacomplex_coeffici imaginari part set zero suitabl codegsl_fft_complex routin algorithm convers simpli n complex_coefficientistrider real_coefficientistrid complex_coefficientistrideimag function int gsl_fft_halfcomplex_unpack const doubl halfcomplex_coeffici gsl_complex_packed_array complex_coeffici size_t stride size_t n function convert datahalfcomplex_coeffici array halfcomplex coeffici return funcgsl_fft_real_transform ordinari complex array datacomplex_coeffici fill complex array use symmetri mathz_k z_nk reconstruct redund element algorithm convers complex_coefficientr halfcomplex_coeffici complex_coefficientimag n doubl hc_real halfcomplex_coeffici stride doubl hc_imag halfcomplex_coeffici istrid complex_coefficientistrider hc_real complex_coefficientistrideimag hc_imag complex_coefficientn istrider hc_real complex_coefficientn istrideimag hc_imag n complex_coefficientistrider halfcomplex_coefficientn stride complex_coefficientistrideimag exampl program use funcgsl_fft_real_transform funcgsl_fft_halfcomplex_invers gener real signal shape squar puls puls fourier transform frequenc space lowest ten frequenc compon remov array fourier coeffici return funcgsl_fft_real_transform remain fourier coeffici transform back timedomain give filter version squar puls sinc fourier coeffici store use halfcomplex symmetri posit neg frequenc remov final filter signal also real includ examplesfftrealc code program output shown numreffig_fftrealmixedradix _fig_fftrealmixedradix figur imagesfftrealmixedradixpng scale lowpass filter version real puls output exampl program _fftrefer refer read good start point learn fft follow review articl p duhamel vetterli fast fourier transform tutori review state art signal process find algorithm use gsl routin may want consult document gsl fft algorithm includ gsl filedocfftalgorithmstex gener inform fft explicit deriv implement routin also refer relev literatur conveni import refer reproduc sever introductori book fft exampl program fast fourier transform brigham dftfft convolut algorithm burru park e oran brigham fast fourier transform prentic hall c burru w park dftfft convolut algorithm wiley introductori book cover radix fft detail mixedradix algorithm heart fftpack routin review clive temperton paper clive temperton selfsort mixedradix fast fourier transform journal comput physic deriv fft realvalu data explain follow two articl henrik v sorenson dougla l jone michael heideman c sidney burru realvalu fast fourier transform algorithm ieee transact acoust speech signal process assp clive temperton fast mixedradix real fourier transform journal comput physic ieee publish compendium carefullyreview fortran fft program program digit signal process use refer implement mani differ fft algorithm digit signal process committe ieee acoust speech signal process committe editor program digit signal process ieee press largescal fft work recommend use dedic fftw librari frigo johnson fftw librari selfoptimizingit automat tune hardwar platform order achiev maximum perform avail gnu gpl fftw websit httpwwwfftworg sourc code fftpack avail httpwwwnetliborgfftpack index ieee float point _chap_iee ieee floatingpoint arithmet chapter describ function examin represent float point number control float point environ program function describ chapter declar header file filegsl_ieee_utilsh index singl ieee format float point number singl bia ieee format singl expon ieee format singl sign bit ieee format singl mantissa ieee format represent float point number ieee standard binari floatingpoint arithmet defin binari format singl doubl precis number number compos three part sign bit math expon math fraction mathf numer valu combin mathsef given follow formula texinfo math cdot fffffdot e texinfo fffff e index singl normal form ieee format singl denorm form ieee format sign bit either zero one expon rang minimum valu mathe_min maximum valu mathe_max depend precis expon convert unsign number math known bias expon storag ad bia paramet texinfo math e e hboxit bia texinfo e e bia sequenc mathfffff repres digit binari fraction mathf binari digit store normal form adjust expon give lead digit math sinc lead digit alway normal number assum implicitli store number smaller mathe_min store denorm form lead zero texinfo math cdot fffffdot e_min texinfo fffff e_min index singl zero ieee format singl infin ieee format allow gradual underflow mathe_min p mathp bit precis zero encod special expon mathe_min infin expon mathe_max index singl singl precis ieee format format singl precis number use bit divid follow way seeeeeeeefffffffffffffffffffffff sign bit bit e expon bit e_min e_max bia f fraction bit index singl doubl precis ieee format format doubl precis number use bit divid follow way seeeeeeeeeeeffffffffffffffffffffffffffffffffffffffffffffffffffff sign bit bit e expon bit e_min e_max bia f fraction bit often use abl investig behavior calcul bitlevel librari provid function print ieee represent humanread form float vs doubl vs long doubl mani digit avail function void gsl_ieee_fprintf_float file stream const float x void gsl_ieee_fprintf_doubl file stream const doubl x function output format version ieee floatingpoint number point datax stream datastream pointer use pass number indirectli avoid undesir promot codefloat codedoubl output take one follow form codenan notanumb symbol codeinf inf posit neg infin codefffff fffffe normal float point number codefffff fffffe denorm float point number code posit neg zero output use directli gnu emac calc mode preced code indic binari item nonstandard ieee float nonstandard ieee doubl unrecogn encod function void gsl_ieee_printf_float const float x void gsl_ieee_printf_doubl const doubl x function output format version ieee floatingpoint number point datax stream codestdout follow program demonstr use function print singl doubl precis represent fraction math comparison represent valu promot singl doubl precis also print includ examplesieeec code binari represent math math output show ieee format normal fraction give lead digit f fd output also show singleprecis number promot doubleprecis ad zero binari represent import use l long doubl calcul exampl int main void long doubl x x x l printf lfnx printfld lfni return ld end exampl index singl ieee except singl precis ieee arithmet singl round mode singl arithmet except singl except ieee arithmet singl divis zero ieee except singl underflow ieee except singl overflow ieee except set ieee environ ieee standard defin sever mode control behavior float point oper mode specifi import properti comput arithmet direct use round eg whether number round nearest number round precis program handl arithmet except divis zero mani featur control via standard function funcfpsetround use whenev avail unfortun past univers api control behavioreach system lowlevel way access help write portabl program gsl allow specifi mode platformindepend way use environ variabl macrogsl_ieee_mod librari take care necessari machinespecif initi call function funcgsl_ieee_env_setup macro gsl_ieee_mod environ variabl specifi ieee mode function void gsl_ieee_env_setup function read environ variabl macrogsl_ieee_mod attempt set correspond specifi ieee mode environ variabl list keyword separ comma like gsl_ieee_mod keyword keyword datakeyword one follow modenam singleprecis doubleprecis extendedprecis roundtonearest rounddown roundup roundtozero maskal maskinvalid maskdenorm maskdivisionbyzero maskoverflow maskunderflow trapinexact trapcommon macrogsl_ieee_mod empti undefin function return immedi attempt made chang system ieee mode mode macrogsl_ieee_mod turn function print short messag show new set remind result program affect request mode support platform use function call error handler return error code macrogsl_eunsup option specifi use method result mode base default set highest avail precis doubl precis extend precis depend platform roundtonearest mode except enabl apart inexact except inexact except gener whenev round occur must gener disabl typic scientif calcul floatingpoint except enabl default includ underflow use denorm number safeti disabl individu codemask set togeth use codemaskal follow adjust combin mode conveni mani purpos gsl_ieee_modedoubleprecis maskunderflow maskdenorm choic ignor error relat small number either denorm underflow zero trap overflow divis zero invalid oper note x seri processor function set origin x mode newer mxcsr mode control sse floatingpoint oper sse floatingpoint unit precisioncontrol bit alway work doubleprecis singleprecis extendedprecis keyword effect case demonstr effect differ round mode consid follow program comput math base natur logarithm sum rapidlydecreas seri texinfo math e dot texinfo e includ examplesieeeroundc code result run program coderoundtonearest mode ieee default isnt realli necessari specifi gsl_ieee_moderoundtonearest aout sum error sum error sum error sum error nineteen term sum converg within math time correct valu chang round mode coderounddown final result less accur gsl_ieee_moderounddown aout sum error sum error result math time correct valu order magnitud wors result obtain coderoundtonearest mode chang round mode coderoundup final result higher correct valu add term sum final result alway round increas sum least one tick ad term underflow zero avoid problem would need use safer converg criterion codewhil fabssum oldsum epsilon suitabl chosen valu epsilon final see effect comput sum use singleprecis round default coderoundtonearest mode case program think still use doubl precis number cpu round result float point oper singleprecis accuraci simul effect write program use singleprecis codefloat variabl instead codedoubl variabl iter stop half number iter final result much less accur gsl_ieee_modesingleprecis aout sum error error matho correspond singl precis accuraci part math continu iter decreas error subsequ result round valu refer read refer ieee standard ansiiee std ieee standard binari floatingpoint arithmet pedagog introduct standard found follow paper david goldberg everi comput scientist know floatingpoint arithmet acm comput survey vol march page corrigendum acm comput survey vol septemb page see also section b wichmann charl b dunham surveyor forum everi comput scientist know floatingpoint arithmet acm comput survey vol septemb page detail textbook ieee arithmet practic use avail siam press michael l overton numer comput ieee float point arithmet siam press isbn index singl move window statist singl statist move window singl onlin statist move window statist chapter describ routin comput move window statist also call roll statist run statist use window around sampl use calcul variou local statist properti input data stream window slid forward one sampl process next data point function describ chapter declar header file filegsl_movstath introduct chapter concern calcul variou statist subset given dataset main idea comput statist vicin given data sampl defin window includ sampl well specifi number sampl sampl question sampl mathx_i defin window mathw_ihj texinfo math w_ihj left x_ih dot x_i dot x_ij right texinfo w_ihj x_ihx_ix_ij paramet mathh mathj nonneg integ specifi number sampl includ sampl mathx_i statist mean standard deviat window mathw_ihj may comput window shift forward one sampl focu mathx_i total number sampl window mathk h j defin symmetr window center mathx_i one would set mathh j leftlfloor k rightrfloor handl endpoint process sampl near end input signal enough sampl fill window mathw_ihj defin therefor user must specifi construct window near end point done pass input argument type typegsl_movstat_end_t type gsl_movstat_end_t data type specifi construct window near end point select follow choic macro gsl_movstat_end_padzero option full window length mathk construct insert zero window near signal end point effect input signal modifi texinfo math tildex underbrac dot _h textrm zero x_ x_ dot x_n x_n underbrac dot _j textrm zero texinfo x x_ x_ x_n x_n ensur welldefin window mathx_i macro gsl_movstat_end_padvalu option full window length mathk construct pad window first last sampl input signal effect input signal modifi texinfo math tildex underbracex_ dot x__h x_ x_ dot x_n x_n underbracex_n dot x_n_j texinfo x x_ x_ x_ x_ x_n x_n x_n x_n macro gsl_movstat_end_trunc option pad perform window simpli truncat end point approach index singl move window alloc alloc move window statist type gsl_movstat_workspac move window statist routin use common workspac function gsl_movstat_workspac gsl_movstat_allocconst size_t k function alloc workspac comput symmetr center move statist window length mathk sampl case mathh j leftlfloor k rightrfloor size workspac mathok function gsl_movstat_workspac gsl_movstat_allocconst size_t h const size_t j function alloc workspac comput move statist use window mathh sampl prior current sampl mathj sampl current sampl total window size mathk h j size workspac mathok function void gsl_movstat_freegsl_movstat_workspac w function free memori associ dataw index singl move mean singl roll mean move mean move window mean calcul mean valu window mathw_ihj texinfo math hatmu_i fracleft w_ihj right sum_x_m w_ihj x_m texinfo hatmu_i w_ihj sum_x_m w_ihj x_m mathleft w_ihj right repres number element window mathw_ihj normal mathk unless macrogsl_movstat_end_trunc option select case could less mathk near signal end point function int gsl_movstat_meanconst gsl_movstat_end_t endtyp const gsl_vector x gsl_vector gsl_movstat_workspac w function comput move window mean input vector datax store output datay paramet dataendtyp specifi window near end input handl allow datax datay inplac move mean index singl move varianc singl move standard deviat singl roll varianc singl roll standard deviat move varianc standard deviat move window varianc calcul sampl varianc valu window mathw_ihj defin texinfo math hatsigma_i fracleft left w_ihj right right sum_x_m w_ihj left x_m hatmu_i right texinfo hatsigma_i w_ihj sum_x_m w_ihj x_m hatmu_i mathhatmu_i mean mathw_ihj defin standard deviat mathhatsigma_i squar root varianc function int gsl_movstat_varianceconst gsl_movstat_end_t endtyp const gsl_vector x gsl_vector gsl_movstat_workspac w function comput move window varianc input vector datax store output datay paramet dataendtyp specifi window near end input handl allow datax datay inplac move varianc function int gsl_movstat_sdconst gsl_movstat_end_t endtyp const gsl_vector x gsl_vector gsl_movstat_workspac w function comput move window standard deviat input vector datax store output datay paramet dataendtyp specifi window near end input handl allow datax datay inplac move standard deviat index singl move minimum singl move maximum singl roll minimum singl roll maximum move minimum maximum move minimummaximum calcul minimum maximum valu window mathw_ihj texinfo math y_imin min left w_ihj right y_imax max left w_ihj right texinfo y_imin min w_ihj y_imax max w_ihj function int gsl_movstat_minconst gsl_movstat_end_t endtyp const gsl_vector x gsl_vector gsl_movstat_workspac w function comput move minimum input vector datax store result datay paramet dataendtyp specifi window near end input handl allow datax datay inplac move minimum function int gsl_movstat_maxconst gsl_movstat_end_t endtyp const gsl_vector x gsl_vector gsl_movstat_workspac w function comput move maximum input vector datax store result datay paramet dataendtyp specifi window near end input handl allow datax datay inplac move maximum function int gsl_movstat_minmaxconst gsl_movstat_end_t endtyp const gsl_vector x gsl_vector y_min gsl_vector y_max gsl_movstat_workspac w function comput move minimum maximum input vector datax store window minimum datay_min window maximum datay_max paramet dataendtyp specifi window near end input handl index singl move sum singl roll sum move sum move window sum calcul sum valu window mathw_ihj math y_i sum_x_m w_ihj x_m function int gsl_movstat_sumconst gsl_movstat_end_t endtyp const gsl_vector x gsl_vector gsl_movstat_workspac w function comput move window sum input vector datax store output datay paramet dataendtyp specifi window near end input handl allow datax datay inplac move sum index singl move median singl roll median move median move median calcul median window mathw_ihj sampl mathx_i texinfo math y_i textrmmedian left w_ihj right texinfo y_i medianw_ihj function int gsl_movstat_medianconst gsl_movstat_end_t endtyp const gsl_vector x gsl_vector gsl_movstat_workspac w function comput move median input vector datax store output datay paramet dataendtyp specifi window near end input handl allow datax datay inplac move window median robust scale estim common problem statist quantifi dispers also known variabl scatter spread set data often done calcul varianc standard deviat howev statist strongli influenc outlier often provid erron result even small number outlier present sever use statist emerg provid robust estim scale suscept data outlier statist scale estim describ index singl move median absolut deviat singl roll median absolut deviat move mad median absolut deviat mad window mathw_ihj defin median absolut deviat window median texinfo math mad_i time textrmmedian left left w_ihj textrmmedian left w_ihj right right right texinfo mad_i median w_ihj medianw_ihj factor math make mad unbias estim standard deviat gaussian data mad effici see refher sec_madstatist inform function int gsl_movstat_madconst gsl_movstat_end_t endtyp const gsl_vector x gsl_vector xmedian gsl_vector xmad gsl_movstat_workspac w int gsl_movstat_madconst gsl_movstat_end_t endtyp const gsl_vector x gsl_vector xmedian gsl_vector xmad gsl_movstat_workspac w function comput move mad input vector datax store result dataxmad median window mathw_ihj store dataxmedian output input datax dataxmedian dataxmad must length paramet dataendtyp specifi window near end input handl function codemad includ scale factor math function codemad includ factor index singl move quantil rang singl roll quantil rang move qqr qquantil rang qqr differ mathq mathq quantil set data math qqr q_q q_q case mathq correspond wellknown interquartil rang iqr differ th th percentil set data qqr trim estim main idea discard largest smallest valu data window comput scale estim remain middl valu case iqr largest smallest data discard scale estim remain middl function int gsl_movstat_qqrconst gsl_movstat_end_t endtyp const gsl_vector x const doubl q gsl_vector xqqr gsl_movstat_workspac w function comput move qqr input vector datax store qquantil rang window mathw_ihj dataxqqr quantil paramet dataq must math math input mathq correspond iqr input datax dataxqqr must length paramet dataendtyp specifi window near end input handl move maths_n maths_n statist propos croux rousseeuw base pairwis differ sampl window effici significantli higher mad see refher sec_snstatist inform function int gsl_movstat_snconst gsl_movstat_end_t endtyp const gsl_vector x gsl_vector xscale gsl_movstat_workspac w function comput move maths_n input vector datax store output dataxscal input datax dataxscal must length paramet dataendtyp specifi window near end input handl allow datax dataxscal inplac move window maths_n move mathq_n mathq_n statist propos croux rousseeuw loos base hodgeslehmann locat estim rel high effici see refher sec_qnstatist inform function int gsl_movstat_qnconst gsl_movstat_end_t endtyp const gsl_vector x gsl_vector xscale gsl_movstat_workspac w function comput move mathq_n input vector datax store output dataxscal input datax dataxscal must length paramet dataendtyp specifi window near end input handl allow datax dataxscal inplac move window mathq_n index singl move window accumul singl roll window accumul userdefin move statist gsl offer interfac user defin move window statist function without need implement edgehandl accumul machineri done explicitli construct window mathw_ihj given input signal funcgsl_movstat_fil calcul userdefin function window automat order appli userdefin function window user must defin variabl type typegsl_movstat_funct pass funcgsl_movstat_appli structur defin follow type gsl_movstat_funct structur specifi userdefin move window statist function typedef struct doubl function const size_t n doubl x void param void param gsl_movstat_funct structur contain pointer userdefin function well possibl paramet pass function member doubl function const size_t n doubl x void param function return userdefin statist array datax length datan userspecifi paramet pass via dataparam allow modifi array datax member void param userspecifi paramet pass function function int gsl_movstat_applyconst gsl_movstat_end_t endtyp const gsl_movstat_funct f const gsl_vector x gsl_vector gsl_movstat_workspac w function appli userdefin move window statist specifi dataf input vector datax store output datay paramet dataendtyp specifi window near end input handl allow datax datay inplac move window calcul function size_t gsl_movstat_fillconst gsl_movstat_end_t endtyp const gsl_vector x const size_t idx const size_t h const size_t j doubl window function explicitli construct slide window input vector datax center sampl dataidx output array datawindow contain mathw_idxhj number sampl left right sampl dataidx specifi datah dataj respect paramet dataendtyp specifi window near end input handl function return size window accumul mani algorithm chapter base accumul design process input vector one sampl time updat calcul desir statist current window accumul store follow structur type gsl_movstat_accum structur specifi accumul move window statist typedef struct size_t size const size_t n int init const size_t n void vstate int insert const doubl x void vstate int delet void vstate int get void param doubl result const void vstate gsl_movstat_accum structur contain function pointer respons perform differ task accumul member size_t size const size_t n function return size workspac byte need accumul move window length datan member int init const size_t n void vstate function initi workspac datavst move window length datan member int insert const doubl x void vstate function insert singl sampl datax accumul updat intern calcul desir statist accumul full ie mathn sampl alreadi insert oldest sampl delet accumul member int delet void vstate function delet oldest sampl accumul updat intern calcul desir statist member int get void param doubl result const void vstate function store desir statist current window dataresult input dataparam specifi option paramet calcul statist follow accumul type typegsl_movstat_accum defin gsl perform move window statist calcul var gsl_movstat_accum_min gsl_movstat_accum_max gsl_movstat_accum_minmax accumul calcul move window minimummaximum effici use algorithm lemir var gsl_movstat_accum_mean gsl_movstat_accum_sd gsl_movstat_accum_vari accumul calcul move window mean standard deviat varianc use algorithm b p welford var gsl_movstat_median accumul calcul move window median use minmax heap algorithm härdle steiger var gsl_movstat_accum_sn gsl_movstat_accum_qn accumul calcul move window maths_n mathq_n statist develop croux rousseeuw var gsl_movstat_accum_sum accumul calcul move window sum var gsl_movstat_accum_qqr accumul calcul move window qquantil rang exampl exampl follow exampl program comput move mean minimum maximum noisi sinusoid signal length mathn symmetr move window size mathk _fig_movstat figur imagesmovstatpng scale origin signal time seri gray move mean green move minimum blue move maximum orang program given includ examplesmovstatc code exampl robust scale follow exampl program analyz time seri length mathn compos gaussian random variat zero mean whose standard deviat chang piecewis constant fashion shown tabl sampl rang mathsigma addit sampl perturb repres outlier ad mathpm random gaussian variat program calcul move statist mad iqr maths_n mathq_n standard deviat use symmetr move window length mathk result shown numreffig_movstat _fig_movstat figur imagesmovstatpng scale top time seri piecewis constant varianc bottom scale estim use move window true sigma valu light blue mad green iqr red maths_n yellow mathq_n dark blue move standard deviat shown gray robust statist follow true standard deviat piecewis chang well without influenc outlier move standard deviat gray curv heavili influenc presenc outlier program given includ examplesmovstatc code exampl userdefin move window exampl program illustr user defin move window function appli input vector construct random noisi time seri length mathn outlier ad appli move window trim mean time seri trim paramet mathalpha length move window mathk smallest largest sampl window discard prior comput mean result shown numreffig_movstat _fig_movstat figur imagesmovstatpng scale noisi time seri data black move window trim mean red program given includ examplesmovstatc code refer read follow public relev algorithm describ chapter whardl w steiger optim median smooth appl statist lemir stream maximumminimum filter use three comparison per element nordic journal comput httpsarxivorgabsc b p welford note method calcul correct sum squar product technometr index combin combin includ includerst chapter describ function creat manipul combin combin mathc repres array mathk integ rang mathn valu mathc_i occur combin mathc correspond indic mathk element chosen mathn element vector combin use iter mathkel subset set function describ chapter defin header file filegsl_combinationh combin struct type gsl_combin combin defin structur contain three compon valu mathn mathk pointer combin array element combin array type codesize_t store increas order typegsl_combin structur look like typedef struct size_t n size_t k size_t data gsl_combin combin alloc function gsl_combin gsl_combination_alloc size_t n size_t k function alloc memori new combin paramet datan datak combin initi element undefin use function funcgsl_combination_calloc want creat combin initi lexicograph first combin null pointer return insuffici memori avail creat combin function gsl_combin gsl_combination_calloc size_t n size_t k function alloc memori new combin paramet datan datak initi lexicograph first combin null pointer return insuffici memori avail creat combin function void gsl_combination_init_first gsl_combin c function initi combin datac lexicograph first combin ie math dot k function void gsl_combination_init_last gsl_combin c function initi combin datac lexicograph last combin ie mathn k n k dot n function void gsl_combination_fre gsl_combin c function free memori use combin datac function int gsl_combination_memcpi gsl_combin dest const gsl_combin src function copi element combin datasrc combin datadest two combin must size access combin element follow function use access element combin function size_t gsl_combination_get const gsl_combin c const size_t function return valu dataith element combin datac datai lie outsid allow rang mathk error handler invok return inlinefn combin properti function size_t gsl_combination_n const gsl_combin c function return rang mathn combin c function size_t gsl_combination_k const gsl_combin c function return number element mathk combin datac function size_t gsl_combination_data const gsl_combin c function return pointer array element combin datac index singl check combin valid singl test combin valid function int gsl_combination_valid gsl_combin c function check combin datac valid datak element lie rang mathn valu occur increas order combin function index iter combin function int gsl_combination_next gsl_combin c function advanc combin datac next combin lexicograph order return macrogsl_success combin avail return macrogsl_failur leav datac unmodifi start first combin repeatedli appli function iter possibl combin given order function int gsl_combination_prev gsl_combin c function step backward combin datac previou combin lexicograph order return macrogsl_success previou combin avail return macrogsl_failur leav datac unmodifi read write combin librari provid function read write combin file binari data format text function int gsl_combination_fwrit file stream const gsl_combin c function write element combin datac stream datastream binari format function return macrogsl_efail problem write file sinc data written nativ binari format may portabl differ architectur function int gsl_combination_fread file stream gsl_combin c function read element open stream datastream combin datac binari format combin datac must prealloc correct valu mathn mathk sinc function use size datac determin mani byte read function return macrogsl_efail problem read file data assum written nativ binari format architectur function int gsl_combination_fprintf file stream const gsl_combin c const char format function write element combin datac linebylin stream datastream use format specifi dataformat suitabl type codesize_t iso c type modifi codez repres codesize_t codezun suitabl format f_ function return macrogsl_efail problem write file function int gsl_combination_fscanf file stream gsl_combin c function read format data stream datastream combin datac combin datac must prealloc correct valu mathn mathk sinc function use size datac determin mani number read function return macrogsl_efail problem read file exampl exampl program print subset set math order size subset size order lexicograph includ examplescombinationc code output program includ examplescombinationtxt code subset gener subset size sort lexicograph refer read inform combin found donald l kreher dougla r stinson combinatori algorithm gener enumer search crc press llc isbn x rubric footnot f version gnu c librari prior iso c standard type modifi codez use instead index singl simul anneal singl combinatori optim singl optim combinatori singl energi function singl cost function simul anneal stochast search techniqu use structur space well understood smooth techniqu like newton method requir calcul jacobian deriv matric use particular techniqu frequent use solv combinatori optim problem travel salesman problem goal find point space real valu energi function cost function minim simul anneal minim techniqu given good result avoid local minima base idea take random walk space success lower temperatur probabl take step given boltzmann distribut function describ chapter declar header file filegsl_simanh simul anneal algorithm simul anneal algorithm take random walk problem space look point low energi random walk probabl take step determin boltzmann distribut math p ee_i e_ikt mathe_i e_i mathp mathe_i le e_i word step occur new energi lower new energi higher transit still occur likelihood proport temperatur matht invers proport energi differ mathe_i e_i index singl cool schedul singl schedul cool temperatur matht initi set high valu random walk carri temperatur temperatur lower slightli accord cool schedul exampl matht rightarrow tmu_t mathmu_t slightli greater slight probabl take step give higher energi allow simul anneal frequent get local minima simul anneal function function void gsl_siman_solv const gsl_rng r void x_p gsl_siman_efunc_t ef gsl_siman_step_t take_step gsl_siman_metric_t distanc gsl_siman_print_t print_posit gsl_siman_copy_t copyfunc gsl_siman_copy_construct_t copy_constructor gsl_siman_destroy_t destructor size_t element_s gsl_siman_params_t param function perform simul anneal search given space space specifi provid function dataef datadist simul anneal step gener use random number gener datar function datatake_step start configur system given datax_p routin offer two mode updat configur fixeds mode variables mode fixeds mode configur store singl block memori size dataelement_s copi configur creat copi destroy intern use standard librari function funcmalloc funcmemcpi funcfre function pointer datacopyfunc datacopy_constructor datadestructor null pointer fixeds mode variables mode function datacopyfunc datacopy_constructor datadestructor use creat copi destroy configur intern variabl dataelement_s zero variables mode dataparam structur describ control run provid temperatur schedul tunabl paramet algorithm exit best result achiev search place datax_p anneal process success good approxim optim point space function pointer dataprint_posit null debug log print codestdout follow column iter eval temperatur posit energi best_energi output function dataprint_posit dataprint_posit null inform print simul anneal routin requir sever userspecifi function defin configur space energi function prototyp function given type gsl_siman_efunc_t function type return energi configur dataxp doubl gsl_siman_efunc_t void xp type gsl_siman_step_t function type modifi configur dataxp use random step taken gener datar maximum distanc datastep_s void gsl_siman_step_t const gsl_rng r void xp doubl step_siz type gsl_siman_metric_t function type return distanc two configur dataxp datayp doubl gsl_siman_metric_t void xp void yp type gsl_siman_print_t function type print content configur dataxp void gsl_siman_print_t void xp type gsl_siman_copy_t function type copi configur datasourc datadest void gsl_siman_copy_t void sourc void dest type gsl_siman_copy_construct_t function type creat new copi configur dataxp void gsl_siman_copy_construct_t void xp type gsl_siman_destroy_t function type destroy configur dataxp free memori void gsl_siman_destroy_t void xp type gsl_siman_params_t paramet control run funcgsl_siman_solv structur contain inform need control search beyond energi function step function initi guess codeint n_tri number point tri step codeint iters_fixed_t number iter temperatur codedoubl step_siz maximum step size random walk codedoubl k t_initi mu_t t_min paramet boltzmann distribut cool schedul exampl simul anneal packag clumsi written c c caller tri polymorph time provid exampl past applic littl chang make thing easier trivial exampl first exampl one dimension cartesian space set energi function damp sine wave mani local minima one global minimum somewher initi guess given sever local minima away global minimum includ examplessimanc code numreffig_simantest gener run codesiman_test follow way siman_test awk print graph w x gener posit plot tp simantestep numreffig_simanenergi gener run codesiman_test follow way siman_test awk print graph w x gener energi plot tp simanenergyep _fig_simantest figur imagessimantestpng scale exampl simul anneal run higher temperatur earli plot see solut fluctuat lower temperatur converg _fig_simanenergi figur imagessimanenergypng scale simul anneal energi vs gener index singl tsp singl travel salesman problem travel salesman problem tsp travel salesman problem classic combinatori optim problem provid simpl version base coordin twelv citi southwestern unit state mayb call fli salesman problem sinc use greatcircl distanc citi rather drive distanc also assum earth sphere dont use geoid distanc funcgsl_siman_solv routin find rout kilomet long confirm exhaust search possibl rout initi citi full code given includ examplessiman_tspc code plot gener follow way siman_tsp tspoutput grep v tspoutput awk print nf graph w x gener distanc l tsp southwest citi plot tp citiesep grep initial_city_coord tspoutput awk print graph x longitud mean west latitud l tsp initialord f plot tp initialrouteep grep final_city_coord tspoutput awk print graph x longitud mean west latitud l tsp finalord f plot tp finalrouteep output show initi order citi longitud neg sinc west want plot look like map initi coordin citi longitud latitud initial_city_coord santa fe initial_city_coord phoenix initial_city_coord albuquerqu initial_city_coord clovi initial_city_coord durango initial_city_coord dalla initial_city_coord tesuqu initial_city_coord grant initial_city_coord lo alamo initial_city_coord la cruce initial_city_coord cortez initial_city_coord gallup initial_city_coord santa fe optim rout turn final coordin citi longitud latitud final_city_coord santa fe final_city_coord clovi final_city_coord dalla final_city_coord la cruce final_city_coord phoenix final_city_coord gallup final_city_coord cortez final_city_coord durango final_city_coord grant final_city_coord albuquerqu final_city_coord lo alamo final_city_coord tesuqu final_city_coord santa fe figur imagessimaninitialroutepng scale initi rout southwestern citi fli salesman problem figur imagessimanfinalroutepng scale final optim rout southwestern citi fli salesman problem here plot cost function energi versu gener point calcul new temperatur set problem figur imagessimancitiespng scale exampl simul anneal run southwestern citi fli salesman problem refer read inform avail follow book modern heurist techniqu combinatori problem colin r reev ed mcgrawhil isbn index mathieu function routin describ section comput angular radial mathieu function characterist valu mathieu function solut follow two differenti equat texinfo math yoverd v qco vy foverd u qcosh uf texinfo dydv qco vy dfdu qcosh uf angular mathieu function mathce_rxq mathse_rxq even odd period solut first equat known mathieu equat exist discret sequenc characterist valu matha a_rq evenperiod matha b_rq oddperiod radial mathieu function mathmcj_rzq mathmsj_rzq solut second equat refer mathieu modifi equat radial mathieu function first second third fourth kind denot paramet mathj take valu angular mathieu function divid four type tex beforedisplay eqalign x sum_minfti a_mp cosmpphi quad p cr x sum_minfti b_mp sinmpphi quad p afterdisplay end tex ifinfo exampl x sum_minfti a_mp cosmpphi p x sum_minfti b_mp sinmpphi p end exampl end ifinfo noindent nomenclatur use angular mathieu function mathce_n first solut mathse_n second similar solut exist radial mathieu function replac trigonometr function correspond hyperbol function shown tex beforedisplay eqalign x sum_minfti a_mp coshmpu quad p cr x sum_minfti b_mp sinhmpu quad p afterdisplay end tex ifinfo exampl x sum_minfti a_mp coshmpu p x sum_minfti b_mp sinhmpu p end exampl end ifinfo noindent nomenclatur use radial mathieu function mathmc_n first solut mathms_n second hyperbol seri alway converg accept rate therefor text subject suggest use follow equival equat expand seri bessel hankel function tex beforedisplay eqalign mc_njxq sum_minfti rk a_mnqleftj_mu_z_mju_ j_mu_z_mju_righta_n cr mc_njxq sum_minfti rk a_mnqleftj_mu_z_mju_ j_mu_z_mju_righta_n cr ms_njxq sum_minfti rk b_mnqleftj_mu_z_mju_ j_mu_z_mju_rightb_n cr ms_njxq sum_minfti rk b_mnqleftj_mu_z_mju_ j_mu_z_mju_rightb_n afterdisplay end tex ifinfo exampl mc_njxq sum_minfti rk a_mnq j_mu_z_mju_ j_mu_z_mju_a_n mc_njxq sum_minfti rk a_mnq j_mu_z_mju_ j_mu_z_mju_a_n ms_njxq sum_minfti rk b_mnq j_mu_z_mju_ j_mu_z_mju_b_n ms_njxq sum_minfti rk b_mnq j_mu_z_mju_ j_mu_z_mju_b_n end exampl end ifinfo noindent cu_ sqrtq expx mathu_ sqrtq expx cu_ sqrtq expx mathu_ sqrtq expx tex beforedisplay eqalign z_mu j_mu cr z_mu y_mu cr z_mu h_mu cr z_mu h_mu afterdisplay end tex ifinfo exampl z_mu j_mu z_mu y_mu z_mu h_mu z_mu h_mu end exampl end ifinfo noindent mathj_mu mathy_mu mathh_mu mathh_mu regular irregular bessel function hankel function respect inform mathieu function see abramowitz stegun chapter function defin header file filegsl_sf_mathieuh mathieu function workspac mathieu function comput singl order multipl order use arraybas routin arraybas routin requir prealloc workspac type gsl_sf_mathieu_workspac workspac requir arraybas routin function gsl_sf_mathieu_workspac gsl_sf_mathieu_alloc size_t n doubl qmax function return workspac array version mathieu routin argument n dataqmax specifi maximum order mathqvalu mathieu function comput workspac requir order properli termin infinit eigenvalu matrix high precis solut characterist valu order math n store work structur array element kbdworkchar_valu function void gsl_sf_mathieu_fre gsl_sf_mathieu_workspac work function free workspac datawork mathieu function characterist valu index mathieu function characterist valu function int gsl_sf_mathieu_a int n doubl q int gsl_sf_mathieu_a_ int n doubl q gsl_sf_result result int gsl_sf_mathieu_b int n doubl q int gsl_sf_mathieu_b_ int n doubl q gsl_sf_result result routin comput characterist valu matha_nq mathb_nq mathieu function mathce_nqx mathse_nqx respect function int gsl_sf_mathieu_a_array int order_min int order_max doubl q gsl_sf_mathieu_workspac work doubl result_array int gsl_sf_mathieu_b_array int order_min int order_max doubl q gsl_sf_mathieu_workspac work doubl result_array routin comput seri mathieu characterist valu matha_nq mathb_nq mathn dataorder_min dataorder_max inclus store result array dataresult_array angular mathieu function index singl angular mathieu function singl ceqx mathieu function singl seqx mathieu function function int gsl_sf_mathieu_c int n doubl q doubl x int gsl_sf_mathieu_ce_ int n doubl q doubl x gsl_sf_result result int gsl_sf_mathieu_s int n doubl q doubl x int gsl_sf_mathieu_se_ int n doubl q doubl x gsl_sf_result result routin comput angular mathieu function mathce_nqx mathse_nqx respect function int gsl_sf_mathieu_ce_array int nmin int nmax doubl q doubl x gsl_sf_mathieu_workspac work doubl result_array int gsl_sf_mathieu_se_array int nmin int nmax doubl q doubl x gsl_sf_mathieu_workspac work doubl result_array routin comput seri angular mathieu function mathce_nqx mathse_nqx order mathn datanmin datanmax inclus store result array dataresult_array radial mathieu function index radial mathieu function function int gsl_sf_mathieu_mc int j int n doubl q doubl x int gsl_sf_mathieu_mc_ int j int n doubl q doubl x gsl_sf_result result int gsl_sf_mathieu_m int j int n doubl q doubl x int gsl_sf_mathieu_ms_ int j int n doubl q doubl x gsl_sf_result result routin comput radial datajth kind mathieu function mathmc_njqx mathms_njqx order datan allow valu dataj function mathj comput mathm_n m_n im_n mathm_n m_n im_n mathm_nj mc_nj mathms_nj function int gsl_sf_mathieu_mc_array int j int nmin int nmax doubl q doubl x gsl_sf_mathieu_workspac work doubl result_array int gsl_sf_mathieu_ms_array int j int nmin int nmax doubl q doubl x gsl_sf_mathieu_workspac work doubl result_array routin comput seri radial mathieu function kind dataj order datanmin datanmax inclus store result array dataresult_array index gegenbau function gegenbau polynomi defin abramowitz stegun chapter known ultraspher polynomi function describ section declar header file filegsl_sf_gegenbauerh function doubl gsl_sf_gegenpoly_ doubl lambda doubl x doubl gsl_sf_gegenpoly_ doubl lambda doubl x doubl gsl_sf_gegenpoly_ doubl lambda doubl x int gsl_sf_gegenpoly__ doubl lambda doubl x gsl_sf_result result int gsl_sf_gegenpoly__ doubl lambda doubl x gsl_sf_result result int gsl_sf_gegenpoly__ doubl lambda doubl x gsl_sf_result result function evalu gegenbau polynomi mathclambda_nx use explicit represent mathn except return valu none function doubl gsl_sf_gegenpoly_n int n doubl lambda doubl x int gsl_sf_gegenpoly_n_ int n doubl lambda doubl x gsl_sf_result result function evalu gegenbau polynomi mathclambda_nx specif valu datan datalambda datax subject mathlambda mathn ge domain lambda n except return valu gsl_edom function int gsl_sf_gegenpoly_array int nmax doubl lambda doubl x doubl result_array function comput array gegenbau polynomi mathclambda_nx mathn dot nmax subject mathlambda mathnmax ge condit n nmax domain lambda nmax except return valu gsl_edom gsl document master file creat sphinxquickstart mon feb adapt file complet like least contain root toctre direct gnu scientif librari toctre maxdepth introrst usagerst errrst mathrst complexrst polyrst specfuncrst vectorsrst permutationrst combinationrst multisetrst sortrst blasrst linalgrst eigenrst fftrst integrationrst rngrst qrngrst randistrst statisticsrst rstatrst movstatrst filterrst histogramrst ntuplerst montecarlorst simanrst odeinitvalrst interprst diffrst chebrst sumrst dwtrst dhtrst rootsrst minrst multirootsrst multiminrst llsrst nlsrst bsplinerst spmatrixrst spblasrst splinalgrst constrst ieeerst debugrst contribrst autoconfrst cblasrst gplrst fdlrst refgenindex index singl solv nonlinear system equat singl nonlinear system equat solut singl system equat nonlinear multidimension rootfind includ includerst chapter describ function multidimension rootfind solv nonlinear system mathn equat mathn unknown librari provid low level compon varieti iter solver converg test combin user achiev desir solut full access intermedi step iter class method use framework switch solver runtim without need recompil program instanc solver keep track state allow solver use multithread program solver base origin fortran librari minpack header file filegsl_multirootsh contain prototyp multidimension root find function relat declar index singl multidimension root find overview overview problem multidimension root find requir simultan solut mathn equat mathf_i mathn variabl mathx_i texinfo math f_i x_ dot x_n qquadhboxfori dot n texinfo f_i x_ x_n n gener bracket method avail mathn dimension system way know whether solut exist algorithm proceed initi guess use variant newton iter texinfo math x x x j fx texinfo x x x j fx mathx mathf vector quantiti mathj jacobian matrix mathj_ij partial f_i partial x_j addit strategi use enlarg region converg includ requir decreas norm mathf step propos newton method take steepestdesc step direct neg gradient mathf sever rootfind algorithm avail within singl framework user provid highlevel driver algorithm librari provid individu function necessari step three main phase iter step initi solver state data algorithm datat updat data use iter datat test data converg repeat iter necessari evalu jacobian matrix problemat either program deriv intract comput mathn term matrix becom expens reason algorithm provid librari divid two class accord whether deriv avail index singl jacobian matrix root find state solver analyt jacobian matrix held typegsl_multiroot_fdfsolv struct updat procedur requir function deriv suppli user state solver use analyt jacobian matrix held typegsl_multiroot_fsolv struct updat procedur use function evalu deriv algorithm estim matrix mathj mathj approxim method initi solver follow function initi multidimension solver either without deriv solver depend dimens problem algorithm reus differ problem type gsl_multiroot_fsolv workspac multidimension rootfind without deriv type gsl_multiroot_fdfsolv workspac multidimension rootfind deriv function gsl_multiroot_fsolv gsl_multiroot_fsolver_alloc const gsl_multiroot_fsolver_typ size_t n function return pointer newli alloc instanc solver type datat system datan dimens exampl follow code creat instanc hybrid solver solv dimension system equat const gsl_multiroot_fsolver_typ gsl_multiroot_fsolver_hybrid gsl_multiroot_fsolv gsl_multiroot_fsolver_alloc insuffici memori creat solver function return null pointer error handler invok error code macrogsl_enomem function gsl_multiroot_fdfsolv gsl_multiroot_fdfsolver_alloc const gsl_multiroot_fdfsolver_typ size_t n function return pointer newli alloc instanc deriv solver type datat system datan dimens exampl follow code creat instanc newtonraphson solver dimension system equat const gsl_multiroot_fdfsolver_typ gsl_multiroot_fdfsolver_newton gsl_multiroot_fdfsolv gsl_multiroot_fdfsolver_alloc insuffici memori creat solver function return null pointer error handler invok error code macrogsl_enomem function int gsl_multiroot_fsolver_set gsl_multiroot_fsolv gsl_multiroot_funct f const gsl_vector x int gsl_multiroot_fdfsolver_set gsl_multiroot_fdfsolv gsl_multiroot_function_fdf fdf const gsl_vector x function set reset exist solver data use function dataf function deriv datafdf initi guess datax note initi posit copi datax argument modifi subsequ iter function void gsl_multiroot_fsolver_fre gsl_multiroot_fsolv void gsl_multiroot_fdfsolver_fre gsl_multiroot_fdfsolv function free memori associ solver data function const char gsl_multiroot_fsolver_nam const gsl_multiroot_fsolv const char gsl_multiroot_fdfsolver_nam const gsl_multiroot_fdfsolv function return pointer name solver exampl printf solvern gsl_multiroot_fdfsolver_nam would print someth like code newton solver index singl multidimension root find provid function solv provid function solv must provid mathn function mathn variabl root finder oper order allow gener paramet function defin follow data type type gsl_multiroot_funct data type defin gener system function paramet codeint f const gsl_vector x void param gsl_vector f function store vector result mathfxparam dataf argument datax paramet dataparam return appropri error code function comput codesize_t n dimens system ie number compon vector datax dataf codevoid param pointer paramet function exampl use powel test function texinfo math f_x x_ x_ f_x expx_ expx_ texinfo f_x x_ x_ f_x expx_ expx_ matha follow code defin typegsl_multiroot_funct system codef could pass solver struct powell_param doubl int powel gsl_vector x void p gsl_vector f struct powell_param param struct powell_param p const doubl paramsa const doubl x gsl_vector_getx const doubl x gsl_vector_getx gsl_vector_set f x x gsl_vector_set f expx expx return gsl_success gsl_multiroot_funct f struct powell_param param ff powel fn fparam param type gsl_multiroot_function_fdf data type defin gener system function paramet correspond jacobian matrix deriv codeint f const gsl_vector x void param gsl_vector f function store vector result mathfxparam dataf argument datax paramet dataparam return appropri error code function comput codeint df const gsl_vector x void param gsl_matrix j function store datanbydatan matrix result texinfo math j_ij partial f_ixhboxit param partial x_j texinfo j_ij f_ixparam x_j dataj argument datax paramet dataparam return appropri error code function comput codeint fdf const gsl_vector x void param gsl_vector f gsl_matrix j function set valu dataf dataj argument datax paramet dataparam function provid optim separ function mathfx mathjxit alway faster comput function deriv time codesize_t n dimens system ie number compon vector datax dataf codevoid param pointer paramet function exampl powel test function defin extend includ analyt deriv use follow code int powell_df gsl_vector x void p gsl_matrix j struct powell_param param struct powell_param p const doubl paramsa const doubl x gsl_vector_getx const doubl x gsl_vector_getx gsl_matrix_set j x gsl_matrix_set j x gsl_matrix_set j expx gsl_matrix_set j expx return gsl_success int powell_fdf gsl_vector x void p gsl_matrix f gsl_matrix j struct powell_param param struct powell_param p const doubl paramsa const doubl x gsl_vector_getx const doubl x gsl_vector_getx const doubl u expx const doubl u expx gsl_vector_set f x x gsl_vector_set f u u gsl_matrix_set j x gsl_matrix_set j x gsl_matrix_set j u gsl_matrix_set j u return gsl_success gsl_multiroot_function_fdf fdf fdff powell_f fdfdf powell_df fdffdf powell_fdf fdfn fdfparam note function codepowell_fdf abl reus exist term function calcul jacobian thu save time iter follow function drive iter algorithm function perform one iter updat state solver correspond type function work solver differ method substitut runtim without modif code function int gsl_multiroot_fsolver_iter gsl_multiroot_fsolv int gsl_multiroot_fdfsolver_iter gsl_multiroot_fdfsolv function perform singl iter solver data iter encount unexpect problem error code return macrogsl_ebadfunc iter encount singular point function deriv evalu codeinf codenan macrogsl_enoprog iter make progress prevent algorithm continu solver maintain current best estim root codesx function valu codesf time inform access follow auxiliari function function gsl_vector gsl_multiroot_fsolver_root const gsl_multiroot_fsolv gsl_vector gsl_multiroot_fdfsolver_root const gsl_multiroot_fdfsolv function return current estim root solver data given codesx function gsl_vector gsl_multiroot_fsolver_f const gsl_multiroot_fsolv gsl_vector gsl_multiroot_fdfsolver_f const gsl_multiroot_fdfsolv function return function valu mathfx current estim root solver data given codesf function gsl_vector gsl_multiroot_fsolver_dx const gsl_multiroot_fsolv gsl_vector gsl_multiroot_fdfsolver_dx const gsl_multiroot_fdfsolv function return last step mathdx taken solver data given codesdx index singl root find stop paramet search stop paramet root find procedur stop one follow condit true multidimension root found within userspecifi precis userspecifi maximum number iter reach error occur handl condit user control function allow user test precis current result sever standard way function int gsl_multiroot_test_delta const gsl_vector dx const gsl_vector x doubl epsab doubl epsrel function test converg sequenc compar last step datadx absolut error dataepsab rel error dataepsrel current posit datax test return macrogsl_success follow condit achiev texinfo math dx_i hboxit epsab hboxit epsrel x_i texinfo dx_i epsab epsrel x_i compon datax return macrogsl_continu otherwis index singl residu nonlinear system equat function int gsl_multiroot_test_residu const gsl_vector f doubl epsab function test residu valu dataf absolut error bound dataepsab test return macrogsl_success follow condit achiev texinfo math sum_i f_i hboxit epsab texinfo sum_i f_i epsab return macrogsl_continu otherwis criterion suitabl situat precis locat root mathx unimport provid valu found residu small enough algorithm use deriv root find algorithm describ section make use function deriv requir initi guess locat root absolut guarante convergenceth function must suitabl techniqu initi guess must suffici close root work condit satisfi converg quadrat type gsl_multiroot_fdfsolver_typ follow avail algorithm minim function use deriv index hybrid algorithm nonlinear system index singl hybridsj algorithm singl minpack minim algorithm var gsl_multiroot_fdfsolver_hybridsj modifi version powel hybrid method implement hybrj algorithm minpack minpack written jorg j burton garbow kenneth e hillstrom hybrid algorithm retain fast converg newton method also reduc residu newton method unreli algorithm use gener trust region keep step control order accept propos new posit mathx must satisfi condit mathd x x delta mathd diagon scale matrix mathdelta size trust region compon mathd comput intern use column norm jacobian estim sensit residu compon mathx improv behavior algorithm badli scale function iter algorithm first determin standard newton step solv system mathj dx f step fall insid trust region use trial step next stage algorithm use linear combin newton gradient direct predict minim norm function stay insid trust region math dx alpha j fx beta nabla fx combin newton gradient direct refer dogleg step propos step test evalu function result point mathx step reduc norm function suffici accept size trust region increas propos step fail improv solut size trust region decreas anoth trial step comput speed algorithm increas comput chang jacobian approxim use rank updat two success attempt fail reduc residu full jacobian recomput algorithm also monitor progress solut return error sever step fail make improv macrogsl_enoprog iter make progress prevent algorithm continu macrogsl_enoprogj reevalu jacobian indic iter make progress prevent algorithm continu index hybridj algorithm var gsl_multiroot_fdfsolver_hybridj algorithm unscal version hybridsj step control spheric trust region mathx x delta instead gener region use gener region estim hybridsj inappropri index newton method system nonlinear equat var gsl_multiroot_fdfsolver_newton newton method standard rootpolish algorithm algorithm begin initi guess locat solut iter linear approxim function mathf use estim step zero compon residu iter defin follow sequenc texinfo math x x x j fx texinfo x x x j fx jacobian matrix mathj comput deriv function provid dataf step mathdx obtain solv linear system math j dx fx use lu decomposit jacobian matrix singular error code macrogsl_edom return index singl modifi newton method nonlinear system singl newton algorithm global converg var gsl_multiroot_fdfsolver_gnewton modifi version newton method attempt improv global converg requir everi step reduc euclidean norm residu mathfx newton step lead increas norm reduc step rel size math sqrt r r propos mathr ratio norm mathfxfx procedur repeat suitabl step size found algorithm without deriv algorithm describ section requir deriv inform suppli user deriv need approxim finit differ note finitedifferenc step size chosen routin inappropri explicit usersuppli numer deriv alway use algorithm describ previou section type gsl_multiroot_fsolver_typ follow avail algorithm minim function without deriv index singl hybrid algorithm scale without deriv var gsl_multiroot_fsolver_hybrid version hybrid algorithm replac call jacobian function finit differ approxim finit differ approxim comput use funcgsl_multiroots_fdjac rel step size macrogsl_sqrt_dbl_epsilon note step size suitabl problem index singl hybrid algorithm unscal without deriv var gsl_multiroot_fsolver_hybrid finit differ version hybrid algorithm without intern scale index singl discret newton algorithm multidimension root singl newton algorithm discret var gsl_multiroot_fsolver_dnewton discret newton algorithm simplest method solv multidimension system use newton iter texinfo math x x j fx texinfo x x j fx jacobian matrix mathj approxim take finit differ function dataf approxim scheme use implement math j_ij f_ix delta_j f_ix delta_j mathdelta_j step size mathsqrtepsilon x_j mathepsilon machin precis mathepsilon approx time order converg newton algorithm quadrat finit differ requir mathn function evalu iter algorithm may becom unstabl finit differ good approxim true deriv index singl broyden algorithm multidimension root singl multidimension root find broyden algorithm var gsl_multiroot_fsolver_broyden broyden algorithm version discret newton algorithm attempt avoid expens updat jacobian matrix iter chang jacobian also approxim use rank updat math j j j df dx dxt j dxt j df vector mathdx mathdf chang mathx mathf first iter invers jacobian estim use finit differ discret newton algorithm approxim give fast updat unreli chang small estim invers jacobian becom wors time pass algorithm tendenc becom unstabl unless start close root jacobian refresh instabl detect consult sourc detail algorithm includ demonstr purpos recommend seriou use exampl multidimension solver use similar way onedimension root find algorithm first exampl demonstr hybrid scaledhybrid algorithm requir deriv program solv rosenbrock system equat texinfo math f_ x x f_ x b x texinfo f_ x x f_ x b x matha b solut system lie mathxi narrow valley first stage program defin system equat includ stdlibh includ stdioh includ gslgsl_vectorh includ gslgsl_multirootsh struct rparam doubl doubl b int rosenbrock_f const gsl_vector x void param gsl_vector f doubl struct rparam paramsa doubl b struct rparam paramsb const doubl x gsl_vector_get x const doubl x gsl_vector_get x const doubl x const doubl b x x x gsl_vector_set f gsl_vector_set f return gsl_success main program begin creat function object codef argument codexi paramet codeab solver code initi use function datagsl_multiroot_fsolver_hybrid method int main void const gsl_multiroot_fsolver_typ gsl_multiroot_fsolv int statu size_t iter const size_t n struct rparam p gsl_multiroot_funct f rosenbrock_f n p doubl x_init gsl_vector x gsl_vector_alloc n gsl_vector_set x x_init gsl_vector_set x x_init gsl_multiroot_fsolver_hybrid gsl_multiroot_fsolver_alloc gsl_multiroot_fsolver_set f x print_stat iter iter statu gsl_multiroot_fsolver_iter print_stat iter statu check solver stuck break statu gsl_multiroot_test_residu sf e statu gsl_continu iter printf statu sn gsl_strerror statu gsl_multiroot_fsolver_fre gsl_vector_fre x return note import check return statu solver step case algorithm becom stuck error condit detect indic algorithm proceed error report user new start point chosen differ algorithm use intermedi state solut display follow function solver state contain vector codesx current posit vector codesf correspond function valu int print_stat size_t iter gsl_multiroot_fsolv printf iter u x f f fx e en iter gsl_vector_get sx gsl_vector_get sx gsl_vector_get sf gsl_vector_get sf result run program algorithm start math far solut sinc solut hidden narrow valley earliest step follow gradient function downhil attempt reduc larg valu residu root approxim locat iter newton behavior take converg rapid iter x fx e e iter x fx e e iter x fx e e iter x fx e e iter x fx e e iter x fx e e iter x fx e e iter x fx e e iter x fx e e iter x fx e e iter x fx e e iter x fx e e statu success note algorithm updat locat everi iter iter use adjust trustregion paramet tri step found diverg recomput jacobian poor converg behavior detect next exampl program add deriv inform order acceler solut two deriv function coderosenbrock_df coderosenbrock_fdf latter comput function deriv simultan allow optim common term simplic substitut call separ codef codedf function point code int rosenbrock_df const gsl_vector x void param gsl_matrix j const doubl struct rparam paramsa const doubl b struct rparam paramsb const doubl x gsl_vector_get x const doubl df const doubl df const doubl df b x const doubl df b gsl_matrix_set j df gsl_matrix_set j df gsl_matrix_set j df gsl_matrix_set j df return gsl_success int rosenbrock_fdf const gsl_vector x void param gsl_vector f gsl_matrix j rosenbrock_f x param f rosenbrock_df x param j return gsl_success main program make call correspond codefdfsolv version function int main void const gsl_multiroot_fdfsolver_typ gsl_multiroot_fdfsolv int statu size_t iter const size_t n struct rparam p gsl_multiroot_function_fdf f rosenbrock_f rosenbrock_df rosenbrock_fdf n p doubl x_init gsl_vector x gsl_vector_alloc n gsl_vector_set x x_init gsl_vector_set x x_init gsl_multiroot_fdfsolver_gnewton gsl_multiroot_fdfsolver_alloc n gsl_multiroot_fdfsolver_set f x print_stat iter iter statu gsl_multiroot_fdfsolver_iter print_stat iter statu break statu gsl_multiroot_test_residu sf e statu gsl_continu iter printf statu sn gsl_strerror statu gsl_multiroot_fdfsolver_fre gsl_vector_fre x return addit deriv inform datagsl_multiroot_fsolver_hybrid solver make signific differ behavior sinc abl approxim jacobian numer suffici accuraci illustr behavior differ deriv solver switch datagsl_multiroot_fdfsolver_gnewton tradit newton solver constraint scale back step full step would lead uphil output datagsl_multiroot_fdfsolver_gnewton algorithm iter x fx e e iter x fx e e iter x fx e e iter x fx e e statu success converg much rapid take wide excurs point math could caus algorithm go astray realist applic hybrid algorithm follow downhil path solut reliabl refer read origin version hybrid method describ follow articl powel mjd powel hybrid method nonlinear equat chap p fortran subroutin solv system nonlinear algebra equat chap p numer method nonlinear algebra equat p rabinowitz editor gordon breach follow paper also relev algorithm describ section jj cosnard numer solut nonlinear equat acm transact mathemat softwar vol p cg broyden class method solv nonlinear simultan equat mathemat comput vol p jj bs garbow ke hillstrom test unconstrain optim softwar acm transact mathemat softwar vol p gnu free document licens literalinclud _staticfdltxt index singl optim see minim singl maxim see minim singl minim onedimension singl find minima singl nonlinear function minim one dimension minim chapter describ routin find minima arbitrari onedimension function librari provid low level compon varieti iter minim converg test combin user achiev desir solut full access intermedi step algorithm class method use framework switch minim runtim without need recompil program instanc minim keep track state allow minim use multithread program header file filegsl_minh contain prototyp minim function relat declar use minim algorithm find maximum function simpli invert sign index singl minim overview overview minim algorithm begin bound region known contain minimum region describ lower bound matha upper bound mathb estim locat minimum mathx shown numreffig_mininterv _fig_mininterv figur imagesminintervalpng scale function lower upper bound estim minimum valu function mathx must less valu function end interv math fa fx fb condit guarante minimum contain somewher within interv iter new point mathx select use one avail algorithm new point better estim minimum ie mathfx fx current estim minimum mathx updat new point also allow size bound interv reduc choos compact set point satisfi constraint mathfa fx fb interv reduc enclos true minimum desir toler provid best estim locat minimum rigor error estim sever bracket algorithm avail within singl framework user provid highlevel driver algorithm librari provid individu function necessari step three main phase iter step initi minim state data algorithm datat updat data use iter datat test data converg repeat iter necessari state minim held typegsl_min_fminim struct updat procedur use function evalu deriv index singl minim caveat caveat note minim function search one minimum time sever minima search area first minimum found return howev difficult predict minima case error report tri find minimum area one minim algorithm difficult determin locat minimum full numer precis behavior function region minimum mathx approxim taylor expans texinfo math fx fx x x texinfo fx fx x x second term expans lost ad first term finit precis magnifi error locat mathx make proport mathsqrt epsilon mathepsilon rel accuraci float point number function higher order minima mathx magnif error correspondingli wors best achiev converg limit numer accuraci function valu rather locat minimum initi minim type gsl_min_fminim workspac minim function function gsl_min_fminim gsl_min_fminimizer_alloc const gsl_min_fminimizer_typ function return pointer newli alloc instanc minim type datat exampl follow code creat instanc golden section minim const gsl_min_fminimizer_typ gsl_min_fminimizer_goldensect gsl_min_fminim gsl_min_fminimizer_alloc insuffici memori creat minim function return null pointer error handler invok error code macrogsl_enomem function int gsl_min_fminimizer_set gsl_min_fminim gsl_function f doubl x_minimum doubl x_lower doubl x_upper function set reset exist minim data use function dataf initi search interv datax_low datax_upp guess locat minimum datax_minimum interv given contain minimum function return error code macrogsl_einv function int gsl_min_fminimizer_set_with_valu gsl_min_fminim gsl_function f doubl x_minimum doubl f_minimum doubl x_lower doubl f_lower doubl x_upper doubl f_upper function equival funcgsl_min_fminimizer_set use valu dataf_minimum dataf_low dataf_upp instead comput codefx_minimum codefx_low codefx_upp function void gsl_min_fminimizer_fre gsl_min_fminim function free memori associ minim data function const char gsl_min_fminimizer_nam const gsl_min_fminim function return pointer name minim exampl printf minimizern gsl_min_fminimizer_nam would print someth like code brent minim index singl minim provid function minim provid function minim must provid continu function one variabl minim oper order allow gener paramet function defin typegsl_funct data type refprovidingfunctiontosolv iter follow function drive iter algorithm function perform one iter updat state minim correspond type function work minim differ method substitut runtim without modif code function int gsl_min_fminimizer_iter gsl_min_fminim function perform singl iter minim data iter encount unexpect problem error code return macrogsl_ebadfunc iter encount singular point function evalu codeinf codenan macrogsl_failur algorithm could improv current best approxim bound interv minim maintain current best estim posit minimum time current interv bound minimum inform access follow auxiliari function function doubl gsl_min_fminimizer_x_minimum const gsl_min_fminim function return current estim posit minimum minim data function doubl gsl_min_fminimizer_x_upp const gsl_min_fminim doubl gsl_min_fminimizer_x_low const gsl_min_fminim function return current upper lower bound interv minim data function doubl gsl_min_fminimizer_f_minimum const gsl_min_fminim doubl gsl_min_fminimizer_f_upp const gsl_min_fminim doubl gsl_min_fminimizer_f_low const gsl_min_fminim function return valu function current estim minimum upper lower bound interv minim data index singl minim stop paramet stop paramet minim procedur stop one follow condit true minimum found within userspecifi precis userspecifi maximum number iter reach error occur handl condit user control function allow user test precis current result function int gsl_min_test_interv doubl x_lower doubl x_upper doubl epsab doubl epsrel function test converg interv datax_low datax_upp absolut error dataepsab rel error dataepsrel test return macrogsl_success follow condit achiev texinfo math b hboxit epsab hboxit epsrel minab texinfo b epsab epsrel minab interv mathx ab includ origin interv includ origin mathminab replac zero minimum valu mathx interv ensur rel error accur estim minima close origin condit interv also impli estim minimum mathx_m interv satisfi condit respect true minimum mathx_m texinfo math x_m x_m hboxit epsab hboxit epsrel x_m texinfo x_m x_m epsab epsrel x_m assum true minimum mathx_m contain within interv minim algorithm minim algorithm describ section requir initi interv guarante contain minimumif matha mathb endpoint interv mathx estim minimum mathfa fx fb ensur function least one minimum somewher interv valid initi interv use algorithm fail provid function wellbehav type gsl_min_fminimizer_typ index singl golden section algorithm find minima singl minimum find golden section algorithm var gsl_min_fminimizer_goldensect golden section algorithm simplest method bracket minimum function slowest algorithm provid librari linear converg iter algorithm first compar subinterv endpoint current minimum larger subinterv divid golden section use famou ratio mathsqrt approx valu function new point calcul new valu use constraint mathfa fx fb select new interv contain minimum discard least use point procedur continu indefinit interv suffici small choos golden section bisect ratio shown provid fastest converg type algorithm index singl brent method find minima singl minimum find brent method var gsl_min_fminimizer_br brent minim algorithm combin parabol interpol golden section algorithm produc fast algorithm still robust outlin algorithm summar follow iter brent method approxim function use interpol parabola three exist point minimum parabola taken guess minimum lie within bound current interv interpol point accept use gener smaller interv interpol point accept algorithm fall back ordinari golden section step full detail brent method includ addit check improv converg index safeguard steplength algorithm var gsl_min_fminimizer_quad_golden variant brent algorithm use safeguard steplength algorithm gill murray exampl follow program use brent algorithm find minimum function mathfx cosx occur mathx pi start interv math initi guess minimum math includ examplesminc code result minim procedur includ examplesmintxt code refer read inform brent algorithm avail follow book richard brent algorithm minim without deriv prenticehal republish dover paperback isbn follow routin comput gamma beta function full incomplet form well variou kind factori function describ section declar header file filegsl_sf_gammah gamma function index gamma function gamma function defin follow integr math gammax int_infti dt tx expt relat factori function mathgamman n posit integ mathn inform gamma function found abramowitz stegun chapter function doubl gsl_sf_gamma doubl x int gsl_sf_gamma_ doubl x gsl_sf_result result routin comput gamma function mathgammax subject mathx neg integ zero function comput use real lanczo method maximum valu mathx mathgammax consid overflow given macro macrogsl_sf_gamma_xmax except gsl_edom gsl_eovrflw gsl_eround index logarithm gamma function function doubl gsl_sf_lngamma doubl x int gsl_sf_lngamma_ doubl x gsl_sf_result result routin comput logarithm gamma function mathloggammax subject mathx neg integ zero mathx real part mathloggammax return equival mathloggammax function comput use real lanczo method except gsl_edom gsl_eround function int gsl_sf_lngamma_sgn_ doubl x gsl_sf_result result_lg doubl sgn routin comput sign gamma function logarithm magnitud subject mathx neg integ zero function comput use real lanczo method valu gamma function error reconstruct use relat mathgammax sgn expresult_lg take account two compon dataresult_lg except gsl_edom gsl_eround index regul gamma function function doubl gsl_sf_gammastar doubl x int gsl_sf_gammastar_ doubl x gsl_sf_result result routin comput regul gamma function mathgammax mathx regul gamma function given texinfo math gammax gammaxsqrtpi xx expxcr left x right quadhboxfor xto inftycr texinfo gammax gammaxsqrtpi xx expx x x infti use suggest temm except gsl_edom index reciproc gamma function function doubl gsl_sf_gammainv doubl x int gsl_sf_gammainv_ doubl x gsl_sf_result result routin comput reciproc gamma function mathgammax use real lanczo method except gsl_eundrflw gsl_eround index complex gamma function function int gsl_sf_lngamma_complex_ doubl zr doubl zi gsl_sf_result lnr gsl_sf_result arg routin comput mathloggammaz complex mathz z_r z_i mathz neg integ zero use complex lanczo method return paramet mathlnr loggammaz matharg arggammaz mathpipi note phase part dataarg welldetermin mathz larg due inevit roundoff restrict mathpipi result macrogsl_eloss error occur absolut valu part datalnr howev never suffer loss precis except gsl_edom gsl_eloss factori index factori although factori comput gamma function use relat mathn gamman nonneg integ mathn usual effici call function section particularli small valu mathn whose factori valu maintain hardcod tabl index factori function doubl gsl_sf_fact unsign int n int gsl_sf_fact_ unsign int n gsl_sf_result result routin comput factori mathn factori relat gamma function mathn gamman maximum valu mathn mathn consid overflow given macro macrogsl_sf_fact_nmax except gsl_edom gsl_eovrflw index doubl factori function doubl gsl_sf_doublefact unsign int n int gsl_sf_doublefact_ unsign int n gsl_sf_result result routin comput doubl factori mathn nnn dot maximum valu mathn mathn consid overflow given macro macrogsl_sf_doublefact_nmax except gsl_edom gsl_eovrflw index logarithm factori function doubl gsl_sf_lnfact unsign int n int gsl_sf_lnfact_ unsign int n gsl_sf_result result routin comput logarithm factori datan mathlogn algorithm faster comput mathlngamman via funcgsl_sf_lngamma mathn defer larger datan except none index logarithm doubl factori function doubl gsl_sf_lndoublefact unsign int n int gsl_sf_lndoublefact_ unsign int n gsl_sf_result result routin comput logarithm doubl factori datan mathlogn except none index combinatori factor cmn function doubl gsl_sf_choos unsign int n unsign int int gsl_sf_choose_ unsign int n unsign int gsl_sf_result result routin comput combinatori factor coden choos math nmnm except gsl_edom gsl_eovrflw index logarithm combinatori factor cmn function doubl gsl_sf_lnchoos unsign int n unsign int int gsl_sf_lnchoose_ unsign int n unsign int gsl_sf_result result routin comput logarithm coden choos equival sum mathlogn logm lognm except gsl_edom index singl taylor coeffici comput function doubl gsl_sf_taylorcoeff int n doubl x int gsl_sf_taylorcoeff_ int n doubl x gsl_sf_result result routin comput taylor coeffici mathxn n mathx ge mathn ge except gsl_edom gsl_eovrflw gsl_eundrflw _pochhammersymbol pochhamm symbol index singl pochhamm symbol singl apel symbol see pochhamm symbol function doubl gsl_sf_poch doubl doubl x int gsl_sf_poch_ doubl doubl x gsl_sf_result result routin comput pochhamm symbol matha_x gammaa xgammaa pochhamm symbol also known apel symbol sometim written mathax matha matha x neg integ zero limit valu ratio return except gsl_edom gsl_eovrflw index logarithm pochhamm symbol function doubl gsl_sf_lnpoch doubl doubl x int gsl_sf_lnpoch_ doubl doubl x gsl_sf_result result routin comput logarithm pochhamm symbol mathloga_x loggammaa xgammaa except gsl_edom function int gsl_sf_lnpoch_sgn_ doubl doubl x gsl_sf_result result doubl sgn routin comput sign pochhamm symbol logarithm magnitud comput paramet mathresult loga_x correspond error term mathsgn sgna_x matha_x gammaa xgammaa except gsl_edom index rel pochhamm symbol function doubl gsl_sf_pochrel doubl doubl x int gsl_sf_pochrel_ doubl doubl x gsl_sf_result result routin comput rel pochhamm symbol matha_x x matha_x gammaa xgammaa except gsl_edom incomplet gamma function index singl nonnorm incomplet gamma function singl unnorm incomplet gamma function function doubl gsl_sf_gamma_inc doubl doubl x int gsl_sf_gamma_inc_ doubl doubl x gsl_sf_result result function comput unnorm incomplet gamma function mathgammaax int_xinfti dt ta expt matha real mathx ge except gsl_edom index incomplet gamma function function doubl gsl_sf_gamma_inc_q doubl doubl x int gsl_sf_gamma_inc_q_ doubl doubl x gsl_sf_result result routin comput normal incomplet gamma function mathqax gammaa int_xinfti dt ta expt matha mathx ge except gsl_edom index complementari incomplet gamma function function doubl gsl_sf_gamma_inc_p doubl doubl x int gsl_sf_gamma_inc_p_ doubl doubl x gsl_sf_result result routin comput complementari normal incomplet gamma function mathpax qax gammaa int_x dt ta expt matha mathx ge note abramowitz stegun call mathpax incomplet gamma function section except gsl_edom beta function index beta function function doubl gsl_sf_beta doubl doubl b int gsl_sf_beta_ doubl doubl b gsl_sf_result result routin comput beta function mathbab gammaagammabgammaab subject matha mathb neg integ except gsl_edom gsl_eovrflw gsl_eundrflw index logarithm beta function function doubl gsl_sf_lnbeta doubl doubl b int gsl_sf_lnbeta_ doubl doubl b gsl_sf_result result routin comput logarithm beta function mathlogbab subject matha mathb neg integ except gsl_edom incomplet beta function index singl incomplet beta function normal singl normal incomplet beta function singl beta function incomplet normal function doubl gsl_sf_beta_inc doubl doubl b doubl x int gsl_sf_beta_inc_ doubl doubl b doubl x gsl_sf_result result routin comput normal incomplet beta function mathi_xab b_xab bab math b_xab int_x ta tb dt math le x le matha mathb valu comput use continu fraction expans valu comput use relat texinfo math i_xabx xa _f_abaxbab texinfo i_xabx xa fabax bab index trigonometr function librari includ trigonometr function order provid consist across platform reliabl error estim function declar header file filegsl_sf_trigh circular trigonometr function index singl sine function special function function doubl gsl_sf_sin doubl x int gsl_sf_sin_ doubl x gsl_sf_result result routin comput sine function mathsinx except return valu index singl cosin function special function function doubl gsl_sf_co doubl x int gsl_sf_cos_ doubl x gsl_sf_result result routin comput cosin function mathcosx except return valu index singl hypot function special function function doubl gsl_sf_hypot doubl x doubl int gsl_sf_hypot_ doubl x doubl gsl_sf_result result routin comput hypotenus function mathsqrtx avoid overflow underflow except return valu index singl complex sinc function special function function doubl gsl_sf_sinc doubl x int gsl_sf_sinc_ doubl x gsl_sf_result result routin comput mathsincx sinpi x pi x valu datax except return valu none trigonometr function complex argument index singl complex sine function special function function int gsl_sf_complex_sin_ doubl zr doubl zi gsl_sf_result szr gsl_sf_result szi function comput complex sine mathsinz_r z_i store real imaginari part dataszr dataszi except return valu gsl_eovrflw index singl complex cosin function special function function int gsl_sf_complex_cos_ doubl zr doubl zi gsl_sf_result czr gsl_sf_result czi function comput complex cosin mathcosz_r z_i store real imaginari part dataczr dataczi except return valu gsl_eovrflw index singl complex log sine function special function function int gsl_sf_complex_logsin_ doubl zr doubl zi gsl_sf_result lszr gsl_sf_result lszi function comput logarithm complex sine mathlogsinz_r z_i store real imaginari part datalszr datalszi except return valu gsl_edom gsl_eloss hyperbol trigonometr function index logarithm sinh function special function function doubl gsl_sf_lnsinh doubl x int gsl_sf_lnsinh_ doubl x gsl_sf_result result routin comput mathlogsinhx mathx domain x except return valu gsl_edom index singl logarithm cosh function special function function doubl gsl_sf_lncosh doubl x int gsl_sf_lncosh_ doubl x gsl_sf_result result routin comput mathlogcoshx datax except return valu none convers function index singl polar rectangular convers singl rectangular polar convers function int gsl_sf_polar_to_rect doubl r doubl theta gsl_sf_result x gsl_sf_result function convert polar coordin datar datatheta rectilinear coordin datax datay mathx rcostheta mathi rsintheta except return valu gsl_eloss function int gsl_sf_rect_to_polar doubl x doubl gsl_sf_result r gsl_sf_result theta function convert rectilinear coordin datax datay polar coordin datar datatheta mathx rcostheta mathi rsintheta argument datatheta lie rang mathpi pi except return valu gsl_edom restrict function index singl angular reduct singl reduct angular variabl function doubl gsl_sf_angle_restrict_symm doubl theta int gsl_sf_angle_restrict_symm_ doubl theta routin forc angl datatheta lie rang mathpipi note mathemat valu mathpi slightli greater macrom_pi machin number macrom_pi macrom_pi includ rang except return valu gsl_eloss function doubl gsl_sf_angle_restrict_po doubl theta int gsl_sf_angle_restrict_pos_ doubl theta routin forc angl datatheta lie rang math pi note mathemat valu mathpi slightli greater codem_pi machin number codem_pi includ rang except return valu gsl_eloss trigonometr function error estim function int gsl_sf_sin_err_ doubl x doubl dx gsl_sf_result result routin comput sine angl datax associ absolut error datadx mathsinx pm dx note function provid errorhandl form sinc purpos comput propag error function int gsl_sf_cos_err_ doubl x doubl dx gsl_sf_result result routin comput cosin angl datax associ absolut error datadx mathcosx pm dx note function provid errorhandl form sinc purpos comput propag error index singl exponenti function singl exp function describ section declar header file filegsl_sf_exph exponenti function function doubl gsl_sf_exp doubl x int gsl_sf_exp_ doubl x gsl_sf_result result routin provid exponenti function mathexpx use gsl semant error check except return valu gsl_eovrflw gsl_eundrflw function int gsl_sf_exp_e_ doubl x gsl_sf_result_ result function comput exponenti mathexpx use typegsl_sf_result_ type return result extend rang function may use valu mathexpx would overflow numer rang codedoubl except return valu gsl_eovrflw gsl_eundrflw function doubl gsl_sf_exp_mult doubl x doubl int gsl_sf_exp_mult_ doubl x doubl gsl_sf_result result routin exponenti datax multipli factor datay return product mathi expx except return valu gsl_eovrflw gsl_eundrflw function int gsl_sf_exp_mult_e_ const doubl x const doubl gsl_sf_result_ result function comput product mathi expx use typegsl_sf_result_ type return result extend numer rang except return valu gsl_eovrflw gsl_eundrflw rel exponenti function function doubl gsl_sf_expm doubl x int gsl_sf_expm_ doubl x gsl_sf_result result routin comput quantiti mathexpx use algorithm accur small mathx except return valu gsl_eovrflw function doubl gsl_sf_exprel doubl x int gsl_sf_exprel_ doubl x gsl_sf_result result routin comput quantiti mathexpxx use algorithm accur small datax small datax algorithm base expans mathexpxx x x x dot except return valu gsl_eovrflw function doubl gsl_sf_exprel_ doubl x int gsl_sf_exprel__ doubl x gsl_sf_result result routin comput quantiti mathexpxxx use algorithm accur small datax small datax algorithm base expans mathexpxxx x x x dot except return valu gsl_eovrflw function doubl gsl_sf_exprel_n int n doubl x int gsl_sf_exprel_n_ int n doubl x gsl_sf_result result routin comput mathnrel exponenti datanth gener function funcgsl_sf_exprel funcgsl_sf_exprel_ mathnrel exponenti given texinfo math hboxexprel_nx nxn leftexpx sum_kn xkkrightcr xn xnn dotscr _f_nxcr texinfo exprel_nx nxn expx sum_kn xkk xn xnn f nx except return valu exponenti error estim function int gsl_sf_exp_err_ doubl x doubl dx gsl_sf_result result function exponenti datax associ absolut error datadx except return valu function int gsl_sf_exp_err_e_ doubl x doubl dx gsl_sf_result_ result function exponenti quantiti datax associ absolut error datadx use typegsl_sf_result_ type return result extend rang except return valu function int gsl_sf_exp_mult_err_ doubl x doubl dx doubl doubl dy gsl_sf_result result routin comput product mathi expx quantiti datax datay associ absolut error datadx datadi except return valu gsl_eovrflw gsl_eundrflw function int gsl_sf_exp_mult_err_e_ doubl x doubl dx doubl doubl dy gsl_sf_result_ result routin comput product mathi expx quantiti datax datay associ absolut error datadx datadi use typegsl_sf_result_ type return result extend rang except return valu gsl_eovrflw gsl_eundrflw index singl coulomb wave function singl hydrogen atom prototyp coulomb function declar header file filegsl_sf_coulombh bound state scatter solut avail normal hydrogen bound state function doubl gsl_sf_hydrogenicr_ doubl z doubl r int gsl_sf_hydrogenicr__ doubl z doubl r gsl_sf_result result routin comput lowestord normal hydrogen bound state radial wavefunct mathr_ z sqrtz expz r function doubl gsl_sf_hydrogenicr int n int l doubl z doubl r int gsl_sf_hydrogenicr_ int n int l doubl z doubl r gsl_sf_result result routin comput datanth normal hydrogen bound state radial wavefunct texinfo math r_n z n leftz r nrightl sqrtnl nl expz rn ll_nlz r n texinfo r_n zn sqrtnlnl expz rn zrnl ll_nlzrn mathla_bx refgener laguerr polynomi laguerrefunct normal chosen wavefunct mathpsi given mathpsinlr r_n y_lm coulomb wave function coulomb wave function mathf_letax mathg_letax describ abramowitz stegun chapter larg dynam rang valu function overflow handl grace overflow occur codegsl_eovrflw signal expon return modifi paramet dataexp_f dataexp_g full solut reconstruct follow relat texinfo math f_letax fck_l expexp_f g_letax gck_l expexp_g math f_letax fcpk_l expexp_f g_letax gcpk_l expexp_g texinfo f_letax fck_l expexp_f g_letax gck_l expexp_g f_letax fcpk_l expexp_f g_letax gcpk_l expexp_g function int gsl_sf_coulomb_wave_fg_ doubl eta doubl x doubl l_f int k gsl_sf_result f gsl_sf_result fp gsl_sf_result g gsl_sf_result gp doubl exp_f doubl exp_g function comput coulomb wave function mathf_letax mathg_lketax deriv mathf_letax mathg_lketax respect mathx paramet restrict mathl lk mathx integ mathk note mathl restrict integ result store paramet f g function valu datafp datagp deriv valu overflow occur codegsl_eovrflw return scale expon store modifi paramet dataexp_f dataexp_g function int gsl_sf_coulomb_wave_f_array doubl l_min int kmax doubl eta doubl x doubl fc_array doubl f_expon function comput coulomb wave function mathf_letax mathl lmin dot lmin kmax store result datafc_array case overflow expon store dataf_expon function int gsl_sf_coulomb_wave_fg_array doubl l_min int kmax doubl eta doubl x doubl fc_array doubl gc_array doubl f_expon doubl g_expon function comput function mathf_letax mathg_letax mathl lmin dot lmin kmax store result datafc_array datagc_array case overflow expon store dataf_expon datag_expon function int gsl_sf_coulomb_wave_fgp_array doubl l_min int kmax doubl eta doubl x doubl fc_array doubl fcp_array doubl gc_array doubl gcp_array doubl f_expon doubl g_expon function comput function mathf_letax mathg_letax deriv mathf_letax mathg_letax mathl lmin dot lmin kmax store result datafc_array datagc_array datafcp_array datagcp_array case overflow expon store dataf_expon datag_expon function int gsl_sf_coulomb_wave_sphf_array doubl l_min int kmax doubl eta doubl x doubl fc_array doubl f_expon function comput coulomb wave function divid argument mathf_leta xx mathl lmin dot lmin kmax store result datafc_array case overflow expon store dataf_expon function reduc spheric bessel function limit matheta coulomb wave function normal constant coulomb wave function normal constant defin abramowitz function int gsl_sf_coulomb_cl_ doubl l doubl eta gsl_sf_result result function comput coulomb wave function normal constant mathc_leta mathl function int gsl_sf_coulomb_cl_array doubl lmin int kmax doubl eta doubl cl function comput coulomb wave function normal constant mathc_leta mathl lmin dot lmin kmax mathlmin index licens gsl gnu gener public licens introduct gnu scientif librari gsl collect routin numer comput routin written scratch c present modern applic program interfac api c programm allow wrapper written high level languag sourc code distribut gnu gener public licens routin avail gsl librari cover wide rang topic numer comput routin avail follow area complex number root polynomi special function vector matric permut combin sort bla support linear algebra cbla librari fast fourier transform eigensystem random number quadratur random distribut quasirandom sequenc histogram statist mont carlo integr ntupl differenti equat simul anneal numer differenti interpol seri acceler chebyshev approxim rootfind discret hankel transform leastsquar fit minim ieee floatingpoint physic constant basi spline wavelet spars bla support spars linear algebra use routin describ manual chapter provid detail definit function follow exampl program refer articl algorithm base possibl routin base reliabl publicdomain packag fftpack quadpack develop gsl reimplement c modern code convent index singl free softwar explan gsl free softwar subroutin gnu scientif librari free softwar mean everyon free use redistribut free program librari public domain copyright condit distribut condit design permit everyth good cooper citizen would want allow tri prevent other share version softwar might get specif want make sure right share copi program given use gnu scientif librari receiv sourc code els get want chang program use piec new free program know thing make sure everyon right forbid depriv anyon els right exampl distribut copi code use gnu scientif librari must give recipi right receiv must make sure receiv get sourc code librari code use must tell right mean librari redistribut proprietari program also protect must make certain everyon find warranti gnu scientif librari program modifi someon els pass want recipi know distribut problem introduc other reflect reput precis condit distribut softwar relat gnu scientif librari found gnu gener public licens httpswwwgnuorgsoftwaregslmanualhtml_nodegnugeneralpubliclicensehtmlgnugeneralpubliclicense_ inform licens avail gnu project webpag frequent ask question gnu gpl httpwwwgnuorgcopyleftgplfaqhtml_ free softwar foundat also oper licens consult servic commerci user contact detail avail httpwwwfsforg index obtain gsl download gsl mail list gsl announc infogsl mail list obtain gsl sourc code librari obtain differ way copi friend purchas cdrom download internet list public ftp server carri sourc code found gnu websit httpwwwgnuorgsoftwaregsl prefer platform librari gnu system allow take advantag addit featur gnu c compil gnu c librari howev librari fulli portabl compil system c compil announc new releas updat relev event made infogslgnuorg mail list subscrib lowvolum list send email follow form infogslrequestgnuorg subject subscrib receiv respons ask repli order confirm subscript index warranti none warranti softwar describ manual warranti provid respons valid behavior routin accuraci use sourc code provid purchas support warranti commerci redistributor consult gnu gener public licens httpswwwgnuorgsoftwaregslmanualhtml_nodegnugeneralpubliclicensehtmlgnugeneralpubliclicense_ detail index report bug gsl bug report buggsl mail list mail list buggsl report bug list known bug found filebug file includ gsl distribut onlin gsl bug tracker f_ detail compil problem found fileinstal file find bug list file pleas report buggslgnuorg bug report includ version number gsl hardwar oper system compil use includ version number compil option descript bug behavior short program exercis bug use check whether problem occur librari compil without optim thank error omiss manual also report address index mail list archiv singl websit develop inform contact gsl develop inform addit inform includ onlin copi manual link relat project mail list archiv avail websit mention question use instal librari ask mail list helpgslgnuorg subscrib list send email follow form helpgslrequestgnuorg subject subscrib mail list use ask question cover manual contact develop librari would like refer gnu scientif librari journal articl recommend way cite refer manual eg galassi et al gnu scientif librari refer manual rd ed isbn want give url use httpwwwgnuorgsoftwaregsl index singl convent use manual singl exampl convent use singl shell prompt singl shell prompt convent use manual index singl dollar sign shell prompt manual contain mani exampl type keyboard command enter termin shown like command first charact line termin prompt type dollar sign use standard prompt manual although system may use differ charact exampl assum use gnu oper system may minor differ output system command set environ variabl use bourn shell syntax standard gnu shell codebash rubric footnot f httpsavannahgnuorgbugsgroupgsl index singl laguerr function singl confluent hypergeometr function gener laguerr polynomi sometim refer associ laguerr polynomi defin term confluent hypergeometr function texinfo math la_nx a_n n _f_nax texinfo la_nx a_n n fnax matha_n refpochhamm symbol pochhammersymbol rise factori relat plain laguerr polynomi mathl_nx mathl_nx l_nx mathlk_nx k dkdxk l_nkx inform see abramowitz stegun chapter function describ section declar header file filegsl_sf_laguerreh function doubl gsl_sf_laguerre_ doubl doubl x doubl gsl_sf_laguerre_ doubl doubl x doubl gsl_sf_laguerre_ doubl doubl x int gsl_sf_laguerre__ doubl doubl x gsl_sf_result result int gsl_sf_laguerre__ doubl doubl x gsl_sf_result result int gsl_sf_laguerre__ doubl doubl x gsl_sf_result result routin evalu gener laguerr polynomi mathla_x mathla_x mathla_x use explicit represent except return valu none function doubl gsl_sf_laguerre_n const int n const doubl const doubl x int gsl_sf_laguerre_n_ int n doubl doubl x gsl_sf_result result routin evalu gener laguerr polynomi mathla_nx matha mathn ge domain n evalu gener laguerr polynomi except return valu gsl_edom index clausen function clausen function defin follow integr texinfo math cl_x int_x dt logleft sint right texinfo cl_x int_x dt log sint relat refdilogarithm dilogfunct mathcl_theta im li_expitheta clausen function declar header file filegsl_sf_clausenh function doubl gsl_sf_clausen doubl x int gsl_sf_clausen_ doubl x gsl_sf_result result routin comput clausen integr mathcl_x index elementari oper index multipl follow function allow propag error combin quantiti multipl function declar header file filegsl_sf_elementaryh function doubl gsl_sf_multipli doubl x doubl int gsl_sf_multiply_ doubl x doubl gsl_sf_result result function multipli datax datay store product associ error dataresult except return valu gsl_eovrflw gsl_eundrflw function int gsl_sf_multiply_err_ doubl x doubl dx doubl doubl dy gsl_sf_result result function multipli datax datay associ absolut error datadx datadi product mathxi pm xy sqrtdxx dyy store dataresult except return valu gsl_eovrflw gsl_eundrflw index singl elementari function singl mathemat function elementari mathemat function chapter describ basic mathemat function function present system librari altern version given use substitut system function avail function macro describ chapter defin header file filegsl_mathh index singl mathemat constant defin macro singl numer constant defin macro singl constant mathemat defin macro singl macro mathemat constant mathemat constant librari ensur standard bsd mathemat constant defin refer list constant index singl e defin macro singl pi defin macro singl euler constant defin macro macrom_ base exponenti math macrom_log base logarithm math mathlog_ e macrom_log base logarithm math mathlog_ e macrom_sqrt squar root two mathsqrt macrom_sqrt_ squar root onehalf mathsqrt macrom_sqrt squar root three mathsqrt macrom_pi constant pi mathpi macrom_pi_ pi divid two mathpi macrom_pi_ pi divid four mathpi macrom_sqrtpi squar root pi mathsqrtpi macrom__sqrtpi two divid squar root pi mathsqrtpi macrom__pi reciproc pi mathpi macrom__pi twice reciproc pi mathpi macrom_ln natur logarithm ten mathln macrom_ln natur logarithm two mathln macrom_lnpi natur logarithm pi mathlnpi macrom_eul euler constant mathgamma index singl infin defin macro singl ieee infin defin macro infin notanumb macro gsl_posinf macro contain ieee represent posit infin mathinfti comput express code macro gsl_neginf macro contain ieee represent neg infin mathinfti comput express code index singl nan defin macro singl notanumb defin macro singl ieee nan defin macro macro gsl_nan macro contain ieee represent notanumb symbol codenan comput ratio code function int gsl_isnan const doubl x function return datax notanumb function int gsl_isinf const doubl x function return math datax posit infin math datax neg infin otherwis f_ function int gsl_finit const doubl x function return datax real number infinit notanumb elementari function follow routin provid portabl implement function found bsd math librari nativ version avail function describ use instead substitut made automat use codeautoconf compil applic see refportabilityfunct index singl logp singl logarithm comput accur near function doubl gsl_logp const doubl x function comput valu mathlogx way accur small datax provid altern bsd math function codelogpx index singl expm singl exponenti differ comput accur function doubl gsl_expm const doubl x function comput valu mathexpx way accur small datax provid altern bsd math function codeexpmx index singl hypot singl euclidean distanc function hypot singl length comput accur use hypot function doubl gsl_hypot const doubl x const doubl function comput valu mathsqrtx way avoid overflow provid altern bsd math function codehypotxi index singl euclidean distanc function hypot singl length comput accur use hypot function doubl gsl_hypot const doubl x const doubl const doubl z function comput valu mathsqrtx z way avoid overflow index singl acosh singl hyperbol cosin invers singl invers hyperbol cosin function doubl gsl_acosh const doubl x function comput valu matharccoshx provid altern standard math function codeacoshx index singl asinh singl hyperbol sine invers singl invers hyperbol sine function doubl gsl_asinh const doubl x function comput valu matharcsinhx provid altern standard math function codeasinhx index singl atanh singl hyperbol tangent invers singl invers hyperbol tangent function doubl gsl_atanh const doubl x function comput valu matharctanhx provid altern standard math function codeatanhx index ldexp function doubl gsl_ldexp doubl x int e function comput valu mathx e provid altern standard math function codeldexpx index frexp function doubl gsl_frexp doubl x int e function split number datax normal fraction mathf expon math mathx f e math f function return mathf store expon math mathx zero mathf math set zero function provid altern standard math function codefrexpx e small integ power common complaint standard c librari lack function calcul small integ power gsl provid simpl function fill gap reason effici function check overflow underflow condit function doubl gsl_pow_int doubl x int n doubl gsl_pow_uint doubl x unsign int n routin comput power mathxn integ datan power comput efficientlyfor exampl mathx comput mathx requir multipl version function also comput numer error result avail funcgsl_sf_pow_int_ function doubl gsl_pow_ const doubl x doubl gsl_pow_ const doubl x doubl gsl_pow_ const doubl x doubl gsl_pow_ const doubl x doubl gsl_pow_ const doubl x doubl gsl_pow_ const doubl x doubl gsl_pow_ const doubl x doubl gsl_pow_ const doubl x function use comput small integ power mathx mathx etc effici function inlin macrohave_inlin defin use function effici explicitli write correspond product express includ gslgsl_mathh doubl gsl_pow_ comput test sign number macro gsl_sign x macro return sign datax defin codex note definit sign zero posit regardless ieee sign bit test odd even number macro gsl_is_odd n macro evalu datan odd datan even argument datan must integ type macro gsl_is_even n macro opposit macrogsl_is_odd evalu datan even datan odd argument datan must integ type maximum minimum function note follow macro perform multipl evalu argument use argument side effect call random number gener index maximum two number macro gsl_max b macro return maximum dataa datab defin codea b ab index minimum two number macro gsl_min b macro return minimum dataa datab defin codea b ab function extern inlin doubl gsl_max_dbl doubl doubl b function return maximum doubl precis number dataa datab use inlin function use function allow type check argument extra safeti featur platform inlin function avail macro macrogsl_max automat substitut function extern inlin doubl gsl_min_dbl doubl doubl b function return minimum doubl precis number dataa datab use inlin function use function allow type check argument extra safeti featur platform inlin function avail macro macrogsl_min automat substitut function extern inlin int gsl_max_int int int b extern inlin int gsl_min_int int int b function return maximum minimum integ dataa datab use inlin function platform inlin function avail macro macrogsl_max macrogsl_min automat substitut function extern inlin long doubl gsl_max_ldbl long doubl long doubl b extern inlin long doubl gsl_min_ldbl long doubl long doubl b function return maximum minimum long doubl dataa datab use inlin function platform inlin function avail macro macrogsl_max macrogsl_min automat substitut approxim comparison float point number sometim use abl compar two float point number approxim allow round truncat error follow function implement approxim floatingpoint comparison algorithm propos de knuth section seminumer algorithm rd edit index singl approxim comparison float point number singl safe comparison float point number singl float point number approxim comparison function int gsl_fcmp doubl x doubl doubl epsilon function determin whether datax datay approxim equal rel accuraci dataepsilon rel accuraci measur use interv size math delta mathdelta k epsilon mathk maximum base expon mathx mathi comput function funcfrexp mathx mathi lie within interv consid approxim equal function return otherwis mathx function return math mathx function return math note mathx mathi compar rel accuraci function suitabl test whether valu approxim zero implement base packag codefcmp tc beld rubric footnot f note c standard requir system funcisinf function return nonzero valu without sign infin implement earlier version gsl use system funcisinf function may behavior platform therefor advis test sign datax separ need rather reli sign return valu funcgsl_isinf index singl run statist singl onlin statist run statist chapter describ routin comput run statist also known onlin statist data routin suitabl handl larg dataset may inconveni impract store memori data process singl pass one point time time data point ad accumul intern paramet updat order comput current mean varianc standard deviat skew kurtosi statist exact updat numer stabl singlepass algorithm median arbitrari quantil also avail howev calcul use algorithm provid approxim grow accur data ad accumul function describ chapter declar header file filegsl_rstath initi accumul type gsl_rstat_workspac workspac contain paramet use calcul variou statist updat data point ad accumul function gsl_rstat_workspac gsl_rstat_alloc void function alloc workspac comput run statist size workspac matho function void gsl_rstat_fre gsl_rstat_workspac w function free memori associ workspac dataw function int gsl_rstat_reset gsl_rstat_workspac w function reset workspac dataw initi state begin work new set data ad data accumul function int gsl_rstat_add const doubl x gsl_rstat_workspac w function add data point datax statist accumul updat calcul mean varianc standard deviat skew kurtosi median function size_t gsl_rstat_n const gsl_rstat_workspac w function return number data far ad accumul current statist function doubl gsl_rstat_min const gsl_rstat_workspac w function return minimum valu ad accumul function doubl gsl_rstat_max const gsl_rstat_workspac w function return maximum valu ad accumul function doubl gsl_rstat_mean const gsl_rstat_workspac w function return mean data ad accumul defin texinfo math hatmu n sum x_i texinfo hatmu n sum x_i function doubl gsl_rstat_vari const gsl_rstat_workspac w function return varianc data ad accumul defin texinfo math hatsigma n sum x_i hatmu texinfo hatsigma n sum x_i hatmu function doubl gsl_rstat_sd const gsl_rstat_workspac w function return standard deviat data ad accumul defin squar root varianc given function doubl gsl_rstat_sd_mean const gsl_rstat_workspac w function return standard deviat mean defin texinfo math hatsigma_hatmu hatsigma sqrtn texinfo sd_mean hatsigma sqrtn function doubl gsl_rstat_rm const gsl_rstat_workspac w function return root mean squar data ad accumul defin math rm sqrt n sum x_i function doubl gsl_rstat_skew const gsl_rstat_workspac w function return skew data ad accumul defin texinfo math skew n sum left x_i hatmu hatsigma right texinfo skew n sum x_i hatmuhatsigma function doubl gsl_rstat_kurtosi const gsl_rstat_workspac w function return kurtosi data ad accumul defin texinfo math kurtosi left n sum leftx_i hatmu hatsigma right right texinfo kurtosi n sum x_i hatmuhatsigma function doubl gsl_rstat_median gsl_rstat_workspac w function return estim median data ad accumul quantil function section estim quantil dynam without store entir dataset use algorithm jain chlamtec five point marker store repres minimum maximum data well current estim mathp mathp mathpquantil time new data point ad marker posit height updat type gsl_rstat_quantile_workspac workspac contain paramet estim quantil current dataset function gsl_rstat_quantile_workspac gsl_rstat_quantile_alloc const doubl p function alloc workspac dynam estim datapquantil datap math math median correspond mathp size workspac matho function void gsl_rstat_quantile_fre gsl_rstat_quantile_workspac w function free memori associ workspac dataw function int gsl_rstat_quantile_reset gsl_rstat_quantile_workspac w function reset workspac dataw initi state begin work new set data function int gsl_rstat_quantile_add const doubl x gsl_rstat_quantile_workspac w function updat estim mathpquantil new data point datax function doubl gsl_rstat_quantile_get gsl_rstat_quantile_workspac w function return current estim mathpquantil exampl basic exampl use statist function includ examplesrstatc code program produc follow output includ examplesrstattxt code next program estim lower quartil median upper quartil sampl random rayleigh distribut use mathp algorithm jain chlamtec comparison exact valu also comput sort dataset includ examplesrquantilec code program produc follow output includ examplesrquantiletxt code refer read algorithm use dynam estim mathpquantil describ paper r jain chlamtac p algorithm dynam calcul quantil histogram without store observ commun acm volum octob number p index singl psi function singl digamma function singl polygamma function polygamma function order mathn defin texinfo math psinx leftd dxrightn psix leftd dxrightn loggammax texinfo psinx ddxn psix ddxn loggammax mathpsix gammaxgammax known digamma function function declar header file filegsl_sf_psih digamma function function doubl gsl_sf_psi_int int n int gsl_sf_psi_int_ int n gsl_sf_result result routin comput digamma function mathpsin posit integ datan digamma function also call psi function domain n integ n except return valu gsl_edom function doubl gsl_sf_psi doubl x int gsl_sf_psi_e doubl x gsl_sf_result result routin comput digamma function mathpsix gener datax mathx ne domain x except return valu gsl_edom gsl_eloss function doubl gsl_sf_psi_piy doubl int gsl_sf_psi_piy_ doubl gsl_sf_result result routin comput real part digamma function line math mathrepsi except none except return valu none trigamma function function doubl gsl_sf_psi__int int n int gsl_sf_psi__int_ int n gsl_sf_result result routin comput trigamma function mathpsin posit integ mathn domain n integ n except return valu gsl_edom function doubl gsl_sf_psi_ doubl x int gsl_sf_psi__ doubl x gsl_sf_result result routin comput trigamma function mathpsix gener datax domain x except return valu gsl_edom gsl_eloss polygamma function function doubl gsl_sf_psi_n int n doubl x int gsl_sf_psi_n_ int n doubl x gsl_sf_result result routin comput polygamma function mathpsinx mathn ge mathx domain n x except return valu gsl_edom index random number gener random number gener includ includerst librari provid larg collect random number gener access uniform interfac environ variabl allow select differ gener seed runtim easili switch gener without need recompil program instanc gener keep track state allow gener use multithread program addit function avail transform uniform random number sampl continu discret probabl distribut gaussian lognorm poisson distribut function declar header file filegsl_rngh need explain differ serial parallel random number gener gener comment random number park miller wrote paper entitl random number gener good one hard find commun acm fortun excel random number gener avail though poor one still common use may happi systemsuppli random number gener comput awar comput get faster requir random number gener increas nowaday simul call random number gener million time often finish make hall coffe machin back nice review random number gener written pierr lecuy chapter book handbook simul jerri bank ed wiley chapter avail postscript lecuy ftp site see refer knuth volum seminumer algorithm origin publish devot page random number gener recent updat rd edit brilliant classic dont stop read right run nearest bookstor buy good random number gener satisfi theoret statist properti theoret properti often hard obtain requir real math one prefer random number gener long period low serial correl tendenc fall mainli plane statist test perform numer simul gener random number gener use estim quantiti theori probabl provid exact answer comparison exact answer provid measur random random number gener interfac import rememb random number gener real function like sine cosin unlik real function success call random number gener yield differ return valu cours want random number gener achiev effect gener must keep track kind state variabl sometim state integ sometim valu previous gener random number often complic may involv whole array number possibl indic thrown use random number gener need know detail compris state besid vari algorithm algorithm type gsl_rng_type gsl_rng random number gener librari use two special struct typegsl_rng_typ hold static inform type gener typegsl_rng describ instanc gener creat given typegsl_rng_typ function describ section declar header file filegsl_rngh random number gener initi function gsl_rng gsl_rng_alloc const gsl_rng_type function return pointer newlycr instanc random number gener type datat exampl follow code creat instanc tausworth gener gsl_rng r gsl_rng_alloc gsl_rng_tau insuffici memori creat gener function return null pointer error handler invok error code macrogsl_enomem gener automat initi default seed datagsl_rng_default_se zero default chang either directli use environ variabl macrogsl_rng_se detail avail gener type describ later chapter function void gsl_rng_set const gsl_rng r unsign long int function initi seed random number gener gener seed valu data two differ run stream random number gener success call routin differ valu math geq suppli gener stream random number complet differ seed data zero standard seed origin implement use instead exampl origin fortran sourc code coderanlux gener use seed choos data equal zero reproduc use datagsl_rng_ranlux use multipl seed gener choos seed valu greater zero avoid collis default set note gener accept bit seed higher valu reduc modulo math gener smaller rang maximum seed valu typic lower function void gsl_rng_free gsl_rng r function free memori associ gener datar sampl random number gener follow function return uniformli distribut random number either integ doubl precis float point number inlinefn obtain nonuniform distribut see refchap_randomnumberdistribut function unsign long int gsl_rng_get const gsl_rng r function return random integ gener datar minimum maximum valu depend algorithm use integ rang datamin datamax equal like valu datamin datamax determin use auxiliari function funcgsl_rng_max funcgsl_rng_min function doubl gsl_rng_uniform const gsl_rng r function return doubl precis float point number uniformli distribut rang rang includ exclud valu typic obtain divid result codegsl_rng_getr codegsl_rng_maxr doubl precis gener comput ratio intern provid float point number bit random maximum number bit portabl repres singl codeunsign long int function doubl gsl_rng_uniform_po const gsl_rng r function return posit doubl precis float point number uniformli distribut rang exclud number obtain sampl gener algorithm funcgsl_rng_uniform nonzero valu obtain use function need avoid singular function unsign long int gsl_rng_uniform_int const gsl_rng r unsign long int n function return random integ mathn inclus scale andor discard sampl gener datar integ rang mathn produc equal probabl gener nonzero minimum valu offset appli zero return correct probabl note function design sampl rang smaller rang underli gener paramet datan must less equal rang gener datar datan larger rang gener function call error handler error code macrogsl_einv return zero particular function intend gener full rang unsign integ valu math instead choos gener maxim integ rang zero minimum valu datagsl_rng_ranlxd datagsl_rng_mt datagsl_rng_tau sampl directli use funcgsl_rng_get rang gener found use auxiliari function describ next section auxiliari random number gener function follow function provid inform exist gener use prefer hardcod gener paramet code function const char gsl_rng_name const gsl_rng r function return pointer name gener exampl printf r generatorn gsl_rng_name r would print someth like r tau gener function unsign long int gsl_rng_max const gsl_rng r function return largest valu funcgsl_rng_get return function unsign long int gsl_rng_min const gsl_rng r function return smallest valu funcgsl_rng_get return usual valu zero gener algorithm return zero gener minimum valu function void gsl_rng_state const gsl_rng r size_t gsl_rng_size const gsl_rng r function return pointer state gener datar size use inform access state directli exampl follow code write state gener stream void state gsl_rng_state r size_t n gsl_rng_size r fwrite state n stream function const gsl_rng_type gsl_rng_types_setup void function return pointer array avail gener type termin null pointer function call start program need follow code fragment show iter array gener type print name avail algorithm const gsl_rng_type gsl_rng_types_setup printf avail generatorsn printf sn tname random number environ variabl librari allow choos default gener seed environ variabl macrogsl_rng_typ macrogsl_rng_se function funcgsl_rng_env_setup make easi tri differ gener seed without recompil program macro gsl_rng_type environ variabl specifi default random number gener name gener codetau codemt macro gsl_rng_seed environ variabl specifi default seed random number gener var gsl_rng_default global librari variabl specifi default random number gener initi macrogsl_rng_typ use funcgsl_rng_env_setup defin follow extern const gsl_rng_type gsl_rng_default var gsl_rng_default_se global librari variabl specifi seed default random number gener initi macrogsl_rng_se use funcgsl_rng_env_setup set zero default defin follow extern unsign long int gsl_rng_default_se function const gsl_rng_type gsl_rng_env_setup void function read environ variabl macrogsl_rng_typ macrogsl_rng_se use valu set correspond librari variabl datagsl_rng_default datagsl_rng_default_se valu macrogsl_rng_se convert codeunsign long int use c librari function funcstrtoul dont specifi gener macrogsl_rng_typ datagsl_rng_mt use default initi valu datagsl_rng_default_se zero short program show creat global gener use environ variabl macrogsl_rng_typ macrogsl_rng_se includ examplesrngc code run program without environ variabl use initi default codemt gener seed includ examplesrngtxt code set two variabl command line chang default gener seed gsl_rng_typetau gsl_rng_seed aout gsl_rng_typetau gsl_rng_seed gener type tau seed first valu copi random number gener state method expos random number state chang call call often use abl save restor state permit practic somewhat advanc function suppli includ function int gsl_rng_memcpi gsl_rng dest const gsl_rng src function copi random number gener datasrc preexist gener datadest make datadest exact copi datasrc two gener must type function gsl_rng gsl_rng_clone const gsl_rng r function return pointer newli creat gener exact copi gener datar read write random number gener state librari provid function read write random number state file binari data function int gsl_rng_fwrite file stream const gsl_rng r function write random number state random number gener datar stream datastream binari format return valu success macrogsl_efail problem write file sinc data written nativ binari format may portabl differ architectur function int gsl_rng_fread file stream gsl_rng r function read random number state random number gener datar open stream datastream binari format random number gener datar must preiniti correct random number gener type sinc type inform save return valu success macrogsl_efail problem read file data assum written nativ binari format architectur random number gener algorithm function describ make refer actual algorithm use deliber switch algorithm without chang applic sourc code librari provid larg number gener differ type includ simul qualiti gener gener provid compat librari histor gener past follow gener recommend use simul extrem long period low correl pass statist test reliabl sourc uncorrel number secondgener ranlux gener strongest proof random index mt random number gener var gsl_rng_mt mt gener makoto matsumoto takuji nishimura variant twist gener feedback shiftregist algorithm known mersenn twister gener mersenn prime period math math equidistribut dimens pass diehard statist test use word state per gener compar speed gener origin gener use default seed choos data equal zero funcgsl_rng_set reproduc later version switch default seed choos explicitli via funcgsl_rng_set instead requir inform see makoto matsumoto takuji nishimura mersenn twister dimension equidistribut uniform pseudorandom number gener acm transact model comput simul vol jan page gener datagsl_rng_mt use second revis seed procedur publish two author origin seed procedur could caus spuriou artifact seed valu still avail altern gener datagsl_rng_mt_ datagsl_rng_mt_ index ranlx random number gener var gsl_rng_ranlx gsl_rng_ranlx gsl_rng_ranlx gener coderanlx secondgener version ranlux algorithm luscher produc luxuri random number gener provid singl precis output bit three luxuri level coderanlx coderanlx coderanlx increas order strength use doubleprecis float point arithmet intern significantli faster integ version coderanlux particularli bit architectur period gener math algorithm mathemat proven properti provid truli decorrel number known level random higher luxuri level provid increas decorrel sampl addit safeti margin note rang allow seed gener math higher seed valu wrap modulo math index ranlxd random number gener var gsl_rng_ranlxd gsl_rng_ranlxd gener produc doubl precis output bit ranlx gener librari provid two luxuri level coderanlxd coderanlxd increas order strength index ranlux random number gener var gsl_rng_ranlux gsl_rng_ranlux coderanlux gener implement origin algorithm develop luscher use laggedfibonacciwithskip algorithm produc luxuri random number bit gener origin design singleprecis ieee float point number implement base integ arithmet secondgener version ranlx ranlxd describ provid floatingpoint implement faster mani platform period gener math algorithm mathemat proven properti provid truli decorrel number known level random default level decorrel recommend luscher provid datagsl_rng_ranlux datagsl_rng_ranlux give highest level random bit decorrel type gener use word state per gener inform see luscher portabl highqual random number gener lattic field theori calcul comput physic commun f jame ranlux fortran implement highqual pseudorandom number gener luscher comput physic commun index singl cmrg combin multipl recurs random number gener var gsl_rng_cmrg combin multipl recurs gener lecuy sequenc math z_n x_n y_n mod m_ two underli gener mathx_n mathy_n texinfo math x_n a_ x_n a_ x_n a_ x_n mod m_ y_n b_ y_n b_ y_n b_ y_n mod m_ texinfo x_n a_ x_n a_ x_n a_ x_n mod m_ y_n b_ y_n b_ y_n b_ y_n mod m_ coeffici matha_ matha_ matha_ mathb_ mathb_ mathb_ moduli mathm_ mathm_ period gener mathhboxlcmm_ m_ approxim math math use word state per gener inform see p lecuy combin multipl recurs random number gener oper research index singl mrg multipl recurs random number gener var gsl_rng_mrg fifthord multipl recurs gener lecuy blouin coutr sequenc math x_n a_ x_n a_ x_n mod matha_ matha_ a_ a_ matha_ mathm period gener math use word state per gener inform found follow paper p lecuy f blouin r coutr search good multipl recurs random number gener acm transact model comput simul index tausworth random number gener var gsl_rng_tau gsl_rng_tau maxim equidistribut combin tausworth gener lecuy sequenc texinfo math x_n s_n oplu s_n oplu s_n texinfo x_n s_n s_n s_n texinfo math s_n s_n oplu s_nll oplu s_ngg s_n s_n oplu s_nll oplu s_ngg s_n s_n oplu s_nll oplu s_ngg texinfo s_n s_ns_ns_n s_n s_n s_n s_n s_n s_ns_n s_n comput modulo math formula mathoplu denot exclusiveor note algorithm reli properti bit unsign integ implement use bitmask codexffffffff make work bit machin period gener math math use word state per gener inform see p lecuy maxim equidistribut combin tausworth gener mathemat comput gener datagsl_rng_tau use algorithm datagsl_rng_tau improv seed procedur describ paper p lecuy tabl maxim equidistribut combin lfsr gener mathemat comput gener datagsl_rng_tau use prefer datagsl_rng_tau index fourtap gener feedback shift regist var gsl_rng_gfsr codegfsr gener like laggedfibonacci gener produc number codexord sum four previou valu texinfo math r_n r_na oplu r_nb oplu r_nc oplu r_nd texinfo r_n r_na r_nb r_nc r_nd ziff ref note wide known twotap regist r describ seriou flaw obviou one threepoint correl come definit gener nice mathemat properti deriv gfsr numer bear claim tap gfsr appropri chosen offset random measur use author test implement use valu suggest exampl p ziff articl matha mathb mathc mathd offset appropri chosen one one implement sequenc said maxim mean period mathd mathd longest lag one less mathd permit zero codera array implement mathd work math note implement gener use bit integ amount parallel implement onebit gener one consequ period bit gener onebit gener moreov independ mean bit pattern equal like particular allow random valu grate heiko bauk clarifi us properti gfsr random number gener inform see robert ziff fourtap shiftregistersequ randomnumb gener comput physic julaug pp unix random number gener standard unix random number gener coderand coderandom coderand provid part gsl although gener wide avail individu often arent avail platform make difficult write portabl code use includ complet set unix gener gsl conveni note gener dont produc highqual random arent suitabl work requir accur statist howev wont measur statist quantiti want introduc variat program gener quit accept index singl rand bsd random number gener singl unix random number gener rand singl unix random number gener rand index bsd random number gener var gsl_rng_rand bsd coderand gener sequenc math x_n x_n c mod matha mathc mathm seed specifi initi valu mathx_ period gener math use word storag per gener var gsl_rng_random_bsd gsl_rng_random_libc gsl_rng_random_glibc gener implement coderandom famili function set linear feedback shift regist gener origin use bsd unix sever version coderandom use today origin bsd version eg suno libc version found older gnulinux system glibc version version use differ seed procedur thu produc differ sequenc origin bsd routin accept variabl length buffer gener state longer buffer provid higherqu random coderandom function implement algorithm buffer length byte algorithm largest length would fit usersuppli buffer use support algorithm addit gener avail follow name gsl_rng_random_bsd gsl_rng_random_bsd gsl_rng_random_bsd gsl_rng_random_bsd gsl_rng_random_bsd numer suffix indic buffer length origin bsd coderandom function use byte default buffer datagsl_rng_random_bsd made equival datagsl_rng_random_bsd correspond version codelibc codeglibc gener also avail name datagsl_rng_random_libc datagsl_rng_random_glibc etc index rand random number gener var gsl_rng_rand unix coderand gener sequenc math x_n x_n c mod defin bit unsign integ matha mathc mathm seed specifi upper bit initi valu mathx_ lower bit set codex function funcgsl_rng_get return upper bit term sequenc direct parallel origin coderand function forc result type codelong int reproduc output codemrand function funcgsl_rng_uniform use full bit intern state return doubl precis number mathx_nm equival function codedrand note version gnu c librari contain bug codemrand function caus produc differ result lower bit return valu set random number gener gener section provid compat exist librari convert exist program use gsl select gener check new implement origin one use random number gener verifi new program reproduc origin result switch higherqu gener note gener section base singl linear congruenc relat least sophist type gener particular linear congruenc poor properti use nonprim modulu sever routin eg power two modulu math math lead period least signific bit number higher bit random thu want produc random bitstream best avoid use least signific bit index singl ranf random number gener singl cray random number gener ranf var gsl_rng_ranf cray random number gener coderanf sequenc math x_n x_n mod defin bit unsign integ matha mathm seed specifi lower bit initi valu mathx_ lowest bit set prevent seed take even valu upper bit mathx_ set consequ procedur pair seed etc produc sequenc gener compat cray mathlib routin ranf produc doubl precis float point number ident origin ranf subtleti implement seed initi state revers one step multipli modular invers matha mod mathm done compat origin cray implement note seed gener integ math origin cray implement use nonport wide integ cover math state gener function funcgsl_rng_get return upper bit term sequenc function funcgsl_rng_uniform use full bit return doubl precis number mathx_nm period gener math index ranmar random number gener var gsl_rng_ranmar ranmar laggedfibonacci gener marsaglia zaman tsang bit gener origin design singleprecis ieee float point number includ cernlib highenergi physic librari index singl shiftregist random number gener singl r shiftregist random number gener var gsl_rng_r shiftregist gener kirkpatrick stoll sequenc base recurr texinfo math x_n x_n oplu x_n texinfo x_n x_n x_n mathoplu denot exclusiveor defin bit word period gener math use word state per gener inform see kirkpatrick e stoll fast shiftregist sequenc random number gener journal comput physic index tt random number gener var gsl_rng_tt earlier version twist gener feedback shiftregist gener supersed develop mt howev still accept gener right period math use word storag per gener inform see makoto matsumoto yoshiharu kurita twist gfsr gener ii acm transact model comput simul vol page follow gener includ histor reason reproduc result old program might use gener use real simul sinc poor statist properti modern standard index vax random number gener var gsl_rng_vax vax gener codemthrandom sequenc math x_n x_n c mod matha mathc mathm seed specifi initi valu mathx_ period gener math use word storag per gener var gsl_rng_transput random number gener inmo transput develop system sequenc math x_n x_n mod matha mathm seed specifi initi valu mathx_ index randu random number gener var gsl_rng_randu ibm coderandu gener sequenc math x_n x_n mod matha mathm seed specifi initi valu mathx_ period gener math becom textbook exampl poor gener index ranmar random number gener var gsl_rng_minstd park miller minim standard minstd gener simpl linear congruenc take care avoid major pitfal algorithm sequenc math x_n x_n mod matha mathm seed specifi initi valu mathx_ period gener math gener use imsl librari subroutin rnun matlab rand function past also sometim known acronym ggl im sure stand inform see park miller random number gener good one hard find commun acm octob volum page var gsl_rng_uni gsl_rng_uni reimplement bit slatec random number gener runif gener gener bit provid datagsl_rng_uni origin sourc code avail netlib var gsl_rng_slatec slatec random number gener rand ancient origin sourc code avail netlib var gsl_rng_zuf zufal lag fibonacci seri gener peterson sequenc texinfo math u_n u_n u_n hboxfloort texinfo u_n u_n u_n floort origin sourc code avail netlib inform see w petersen lag fibonacci random number gener nec sx intern journal high speed comput var gsl_rng_knuthran secondord multipl recurs gener describ knuth seminumer algorithm rd ed page sequenc math x_n a_ x_n a_ x_n mod matha_ matha_ mathm var gsl_rng_knuthran gsl_rng_knuthran secondord multipl recurs gener describ knuth seminumer algorithm rd ed section knuth provid c code updat routin datagsl_rng_knuthran revis th print correct weak earlier version implement datagsl_rng_knuthran var gsl_rng_borosh gsl_rng_fishman gsl_rng_fishman gsl_rng_lecuy gsl_rng_waterman multipl gener taken knuth seminumer algorithm rd ed page sequenc math x_n x_n mod seed specifi initi valu mathx_ paramet matha mathm follow boroshniederreit matha mathm fishman matha mathm fishman matha mathm lecuy matha mathm waterman matha mathm var gsl_rng_fishmanx lecuyerfishman random number gener taken knuth seminumer algorithm rd ed page sequenc math z_n x_n y_n mod mathm mathx_n mathy_n given codefishman codelecuy algorithm seed specifi initi valu mathx_ var gsl_rng_covey covey random number gener taken knuth seminumer algorithm rd ed section sequenc math x_n x_n x_n mod mathm seed specifi initi valu mathx_ perform made origin plot like benchmark tmp cat tmp perl n e ns split _ printf n print x se n larg number gener base singl linear congruenc repres coderandom gener gener fast lowest statist qualiti follow tabl show rel perform select avail random number gener fastest simul qualiti gener codetau codegfsr codemt gener offer best mathematicallyproven qualiti base ranlux algorithm k intssec k doublessec tau k intssec k doublessec gfsr k intssec k doublessec mt k intssec k doublessec ranlx k intssec k doublessec ranlx k intssec k doublessec mrg k intssec k doublessec ranlux k intssec k doublessec ranlxd k intssec k doublessec ranlx k intssec k doublessec cmrg k intssec k doublessec ranlux k intssec k doublessec ranlxd exampl follow program demonstr use random number gener produc uniform random number rang includ examplesrngunifc code output program includ examplesrnguniftxt code number depend seed use gener default seed chang macrogsl_rng_se environ variabl produc differ stream number gener chang use environ variabl macrogsl_rng_typ output program use seed valu multiplerecurs gener codemrg gsl_rng_seed gsl_rng_typemrg aout includ examplesrnguniftxt code refer read subject random number gener test review extens knuth seminumer algorithm donald e knuth art comput program seminumer algorithm vol rd ed addisonwesley isbn inform avail review paper written pierr lecuy p lecuy random number gener chapter handbook simul jerri bank ed wiley httpwwwiroumontrealcalecuyerpapershtml file filehandsimp sourc code diehard random number gener test also avail onlin diehard sourc code g marsaglia httpstatfsuedupubdiehard comprehens set random number gener test avail nist nist special public statist test suit valid random number gener pseudo random number gener cryptograph applic httpcsrcnistgovrng acknowledg thank makoto matsumoto takuji nishimura yoshiharu kurita make sourc code gener mt mmtn tt mmyk avail gnu gener public licens thank martin luscher provid note sourc code ranlx ranlxd gener lcg lcgn n mod first mrg qx x x x x mod x mod x x x x x cmrg qxxx mod x mod x x x qxxx mod x mod x x x initi q initi q tausworth bx rshxorlshx x qx xorlshandx bx bx rshxorlshx x qx xorlshandx bx bx rshxorlshx x qx xorlshandx bx version konrad griessing konradgatgmxnet index singl hermit polynomi singl hermit function mathhe_nx mathh_nx get greek charact index texinfo cindex mathpsi_nx hermit polynomi exist two variant probabilist version mathhe_nx physicistsvers mathh_nx defin deriv texinfo math he_nx n ex leftd dxrightn ex h_nx n ex leftd dxrightn ex texinfo he_nx n ex dxn ex h_nx n ex dxn ex connect via texinfo math he_nx n h_n left x sqrt right h_nx n he_n left sqrt x right texinfo he_nx n h_nx sqrt h_nx n he_nsqrt x satisfi ordinari differenti equat texinfo math he_nprimeprimex x he_nprimex n he_nx h_nprimeprimex x h_nprimex n h_nx texinfo he_nx x he_nx n he_nx h_nx x h_nx n h_nx close relat hermit function defin texinfo math psi_nx left n sqrtpi right ex he_n left sqrt x right texinfo psi_n n sqrtpi ex he_nsqrt x satisfi schrödinger equat quantum mechan harmon oscil texinfo math psi_nprimeprimex n x psi_nx texinfo psi_nx n x psi_nx mayb importantli hermit function mathpsi_n eigenfunct continu fourier transform inform see abramowitz stegun chapter szego gabor orthogon polynomi american mathemat societi hermit polynomi function defin header file filegsl_sf_hermiteh hermit polynomi function doubl gsl_sf_hermite_prob const int n const doubl x int gsl_sf_hermite_prob_ const int n const doubl x gsl_sf_result result routin evalu probabilist hermit polynomi mathhe_nx order datan posit datax function int gsl_sf_hermite_prob_array const int nmax const doubl x doubl result_array routin evalu probabilist hermit polynomi mathhe_nx order datanmax posit datax result store dataresult_array function doubl gsl_sf_hermite_prob_seri const int n const doubl x const doubl int gsl_sf_hermite_prob_series_ const int n const doubl x const doubl gsl_sf_result result routin evalu seri mathsum_jn a_j he_jx mathhe_j mathjth probabilist hermit polynomi use clenshaw algorithm function doubl gsl_sf_hermite_phi const int n const doubl x int gsl_sf_hermite_phys_ const int n const doubl x gsl_sf_result result routin evalu physicist hermit polynomi mathh_nx order datan posit datax function int gsl_sf_hermite_phys_array const int nmax const doubl x doubl result_array routin evalu physicist hermit polynomi mathh_n order datanmax posit datax result store dataresult_array function doubl gsl_sf_hermite_phys_seri const int n const doubl x const doubl int gsl_sf_hermite_phys_series_ const int n const doubl x const doubl gsl_sf_result result routin evalu seri mathsum_jn a_j h_jx mathh_j mathjth physicist hermit polynomi use clenshaw algorithm hermit function function doubl gsl_sf_hermite_func const int n const doubl x int gsl_sf_hermite_func_ const int n const doubl x gsl_sf_result result routin evalu hermit function mathpsi_nx order datan posit datax function int gsl_sf_hermite_func_array const int nmax const doubl x doubl result_array routin evalu hermit function mathpsi_nx order datanmax posit datax result store dataresult_array function doubl gsl_sf_hermite_func_seri const int n const doubl x const doubl int gsl_sf_hermite_func_series_ const int n const doubl x const doubl gsl_sf_result result routin evalu seri mathsum_jn a_j psi_jx mathpsi_j mathjth hermit function use clenshaw algorithm deriv hermit polynomi index singl hermit polynomi deriv function doubl gsl_sf_hermite_prob_d const int const int n const doubl x int gsl_sf_hermite_prob_der_ const int const int n const doubl x gsl_sf_result result routin evalu datamth deriv probabilist hermit polynomi mathhe_nx order datan posit datax function int gsl_sf_hermite_prob_array_d const int const int nmax const doubl x doubl result_array routin evalu datamth deriv probabilist hermit polynomi mathhe_nx order datanmax posit datax result store dataresult_array function int gsl_sf_hermite_prob_der_array const int mmax const int n const doubl x doubl result_array routin evalu deriv start datammaxth deriv probabilist hermit polynomi order datan mathhe_nx posit datax result store dataresult_array function doubl gsl_sf_hermite_phys_d const int const int n const doubl x int gsl_sf_hermite_phys_der_ const int const int n const doubl x gsl_sf_result result routin evalu datamth deriv physicist hermit polynomi mathh_nx order datan posit datax function int gsl_sf_hermite_phys_array_d const int const int nmax const doubl x doubl result_array routin evalu datamth deriv physicist hermit polynomi mathh_n order datanmax posit datax result store dataresult_array function int gsl_sf_hermite_phys_der_array const int mmax const int n const doubl x doubl result_array routin evalu deriv start datammaxth deriv physicist hermit polynomi order datan mathh_n posit datax result store dataresult_array deriv hermit function index singl hermit function deriv function doubl gsl_sf_hermite_func_d const int const int n const doubl x int gsl_sf_hermite_func_der_ const int const int n const doubl x gsl_sf_result result routin evalu datamth deriv hermit function mathpsi_nx order datan posit datax zero hermit polynomi hermit function index singl hermit polynomi zero singl hermit function zero routin calcul mathsth zero hermit polynomialfunct order mathn sinc zero symmetr around zero posit zero calcul order smallest largest start index odd polynomi order zeroth zero exist valu alway zero function doubl gsl_sf_hermite_prob_zero const int n const int int gsl_sf_hermite_prob_zero_ const int n const int gsl_sf_result result routin evalu datasth zero probabilist hermit polynomi mathhe_nx order datan function doubl gsl_sf_hermite_phys_zero const int n const int int gsl_sf_hermite_phys_zero_ const int n const int gsl_sf_result result routin evalu datasth zero physicist hermit polynomi mathh_nx order datan function doubl gsl_sf_hermite_func_zero const int n const int int gsl_sf_hermite_func_zero_ const int n const int gsl_sf_result result routin evalu datasth zero hermit function mathpsi_nx order datan index singl spars linear algebra singl linear algebra spars spars linear algebra chapter describ function solv spars linear system equat librari provid linear algebra routin oper directli typegsl_spmatrix typegsl_vector object function describ chapter declar header file filegsl_splinalgh index singl spars linear algebra overview overview chapter primarili concern solut linear system math x b matha gener squar mathnbymathn nonsingular spars matrix mathx unknown mathnbymath vector mathb given mathnbi right hand side vector exist mani method solv spars linear system broadli fall either direct iter categori direct method includ lu qr decomposit iter method start initi guess vector mathx updat guess iter converg gsl current provid direct spars solver index singl spars matric iter solver singl spars linear algebra iter solver singl spars iter solver spars iter solver overview mani practic iter method solv larg mathnbymathn spars linear system involv project approxim solut datax onto subspac mathbf rn defin mathmdimension subspac mathcal k subspac approxim solut datax mathm constraint must impos determin next approxim mathm constraint defin anoth mathmdimension subspac denot mathcal l subspac dimens mathm typic chosen much smaller mathn order reduc comput effort need gener next approxim solut vector mani iter algorithm exist differ mainli choic mathcal k mathcal l type spars iter solver spars linear algebra librari provid follow type iter solver type gsl_splinalg_itersolve_typ index gmre var gsl_splinalg_itersolve_gmr specifi gener minimum residu method gmre project method use mathcal k cal k_m mathcal l cal k_m mathcal k_m mathmth krylov subspac texinfo math cal k_m span left r_ r_ r_ right texinfo k_m span r_ r_ r_ mathr_ b x_ residu vector initi guess mathx_ mathm set equal mathn krylov subspac mathbf rn gmre provid exact solut datax howev goal method arriv good approxim datax use much smaller subspac mathcal k_m default gmre method select mathm minn user may specifi differ valu mathm gmre storag requir grow mathonm number flop grow matho n function funcgsl_splinalg_itersolve_iter one gmre iter defin project approxim solut vector onto krylov subspac mathcal k_ cal k_m mathm kept smaller restart method call funcgsl_splinalg_itersolve_iter multipl time provid updat approxim datax new call method adequ converg user may tri increas paramet mathm gmre consid robust gener purpos iter solver howev case method stagnat matrix positivedefinit fail reduc residu last project onto subspac mathcal k_n bf rn case precondit linear system help gsl current provid precondition iter spars linear system follow function provid alloc storag spars linear solver iter system solut function gsl_splinalg_itersolv gsl_splinalg_itersolve_alloc const gsl_splinalg_itersolve_typ const size_t n const size_t function alloc workspac iter solut datanbydatan spars matrix system iter solver type specifi datat argument datam specifi size solut candid subspac mathcal k_m dimens datam may set case reason default valu use function void gsl_splinalg_itersolve_fre gsl_splinalg_itersolv w function free memori associ workspac dataw function const char gsl_splinalg_itersolve_nam const gsl_splinalg_itersolv w function return string pointer name solver function int gsl_splinalg_itersolve_iter const gsl_spmatrix const gsl_vector b const doubl tol gsl_vector x gsl_splinalg_itersolv w function perform one iter iter method spars linear system specfi matrix dataa right hand side vector datab solut vector datax input datax must set initi guess solut output datax updat give current solut estim paramet datatol specifi rel toler residu norm norm datab order check converg follow condit satisfi texinfo math x b le tol time b texinfo x b tol b method converg function return macrogsl_success final solut provid datax otherwis function return macrogsl_continu signal iter requir math cdot repres euclidean norm input matrix dataa may triplet compress format function doubl gsl_splinalg_itersolve_normr const gsl_splinalg_itersolv w function return current residu norm mathr x b updat call funcgsl_splinalg_itersolve_iter index singl spars linear algebra exampl exampl exampl program demonstr spars linear algebra routin solut simpl poisson equat math texinfo math ux dx fx pi sinpi x texinfo ux fx pi sinpi x boundari condit mathu u analyt solut simpl problem mathux sinpi x solv problem finit differenc left hand side give texinfo math h left u_i u_i u_i right f_i texinfo h u_i u_i u_i f_i defin grid mathn point mathh n finit differ equat mathu_ u_n known boundari condit put equat mathi n matrix system result mathn time n matrix equat texinfo math h left beginarraycccccc ldot ldot ldot vdot vdot ddot ddot ddot vdot ldot ldot ldot ldot ldot endarray right left beginarrayc u_ u_ u_ vdot u_n u_n endarray right left beginarrayc f_ f_ f_ vdot f_n f_n endarray right exampl program construct solv system given system solv use iter gmre solver output program iter residu e converg show method converg singl iter calcul solut shown numreffig_splinalgpoisson _fig_splinalgpoisson figur imagessparse_poissonpng solut pde includ examplespoissonc code index singl spars linear algebra refer refer read implement gmre iter solver close follow public h f walker implement gmre method use household transform siam j sci stat comput saad iter method spars linear system nd edit siam index singl histogram singl bin data histogram chapter describ function creat histogram histogram provid conveni way summar distribut set data histogram consist set bin count number event fall given rang continu variabl mathx gsl bin histogram contain floatingpoint number use record integ noninteg distribut bin use arbitrari set rang uniformli space bin default one twodimension histogram support histogram creat also convert probabl distribut function librari provid effici routin select random sampl probabl distribut use gener simul base real data function declar header file filegsl_histogramh filegsl_histogramdh histogram struct histogram defin follow struct type gsl_histogram size_t n number histogram bin doubl rang rang bin store array coden element point rang doubl bin count bin store array datan element point databin bin floatingpoint number increment noninteg valu necessari rang codebini given coderangei coderangei mathn bin coden entri array datarang bin inclus lower end exclus upper end mathemat mean bin defin follow inequ texinfo math hboxbini correspond rangei le x hboxrangei texinfo bini correspond rangei x rangei diagram correspond rang bin numberlin mathx bin bin bin bin bin x r r r r r r pictur valu datarang array denot mathr lefthand side bin squar bracket code denot inclus lower bound mathr le x round parenthes code righthand side denot exclus upper bound mathx r thu sampl fall upper end histogram exclud want includ valu last bin need add extra bin histogram typegsl_histogram struct associ function defin header file filegsl_histogramh histogram alloc function alloc memori histogram follow style funcmalloc funcfre addit also perform error check insuffici memori avail alloc histogram function call error handler error number macrogsl_enomem addit return null pointer thu use librari error handler abort program isnt necessari check everi histogram codealloc function gsl_histogram gsl_histogram_alloc size_t n function alloc memori histogram datan bin return pointer newli creat typegsl_histogram struct insuffici memori avail null pointer return error handler invok error code macrogsl_enomem bin rang initi prepar use one rangeset function order make histogram readi use deftypefun gsl_histogram gsl_histogram_calloc size_t n function alloc memori histogram datan bin return pointer newli initi typegsl_histogram struct bin uniformli space total rang c le x n math x n shown tabl tex beforedisplay matrix hboxbinhboxcorrespond le x cr hboxbinhboxcorrespond le x cr dotsdotsdotscr hboxbinnhboxcorrespond ton le x n afterdisplay end tex ifinfo display bin correspond x bin correspond x dot binn correspond n x n end display end ifinfo noindent bin initi zero histogram readi use insuffici memori avail null pointer return error handler invok error code macrogsl_enomem end deftypefun deftypefun gsl_histogram gsl_histogram_calloc_uniform size_t n doubl xmin doubl xmax function alloc memori histogram datan uniformli space bin dataxmin dataxmax return pointer newli initi typegsl_histogram struct insuffici memori avail null pointer return error handler invok error code macrogsl_enomem end deftypefun deftypefun gsl_histogram gsl_histogram_calloc_rang size_t n doubl rang function alloc histogram size datan use mathn bin rang specifi array datarang end deftypefun function int gsl_histogram_set_rang gsl_histogram h const doubl rang size_t size function set rang exist histogram datah use array datarang size datas valu histogram bin reset zero datarang array contain desir bin limit rang arbitrari subject restrict monoton increas follow exampl show creat histogram logarithm bin rang gsl_histogram h gsl_histogram_alloc bin cover rang x bin cover rang x bin cover rang x doubl rang gsl_histogram_set_rang h rang note size datarang array defin one element bigger number bin addit element requir upper valu final bin function int gsl_histogram_set_ranges_uniform gsl_histogram h doubl xmin doubl xmax function set rang exist histogram datah cover rang dataxmin dataxmax uniformli valu histogram bin reset zero bin rang shown tabl texinfo math beginarrayccc hboxbinhboxcorrespond xmin le x xmin hboxbin hboxcorrespond xmin le x xmin dotsdotsdot hboxbinn hboxcorrespond xmin nd le x xmax endarray texinfo bin correspond xmin x xmin bin correspond xmin x xmin binn correspond xmin nd x xmax mathd bin space mathd xmaxxminn function void gsl_histogram_fre gsl_histogram h function free histogram datah memori associ copi histogram function int gsl_histogram_memcpi gsl_histogram dest const gsl_histogram src function copi histogram datasrc preexist histogram datadest make datadest exact copi datasrc two histogram must size function gsl_histogram gsl_histogram_clon const gsl_histogram src function return pointer newli creat histogram exact copi histogram datasrc updat access histogram element two way access histogram bin either specifi mathx coordin use binindex directli function access histogram mathx coordin use binari search identifi bin cover appropri rang function int gsl_histogram_incr gsl_histogram h doubl x function updat histogram datah ad one bin whose rang contain coordin datax datax lie valid rang histogram function return zero indic success datax less lower limit histogram function return macrogsl_edom none bin modifi similarli valu datax greater equal upper limit histogram function return macrogsl_edom none bin modifi error handler call howev sinc often necessari comput histogram small rang larger dataset ignor valu outsid rang interest function int gsl_histogram_accumul gsl_histogram h doubl x doubl weight function similar funcgsl_histogram_incr increas valu appropri bin histogram datah floatingpoint number dataweight function doubl gsl_histogram_get const gsl_histogram h size_t function return content dataith bin histogram datah datai lie outsid valid rang indic histogram error handler call error code macrogsl_edom function return function int gsl_histogram_get_rang const gsl_histogram h size_t doubl lower doubl upper function find upper lower rang limit dataith bin histogram datah index datai valid correspond rang limit store datalow dataupp lower limit inclus ie event coordin includ bin upper limit exclus ie event coordin upper limit exclud fall neighbor higher bin exist function return indic success datai lie outsid valid rang indic histogram error handler call function return error code macrogsl_edom function doubl gsl_histogram_max const gsl_histogram h doubl gsl_histogram_min const gsl_histogram h size_t gsl_histogram_bin const gsl_histogram h function return maximum upper minimum lower rang limit number bin histogram datah provid way determin valu without access typegsl_histogram struct directli function void gsl_histogram_reset gsl_histogram h function reset bin histogram datah zero search histogram rang follow function use access updat routin locat bin correspond given mathx coordin function int gsl_histogram_find const gsl_histogram h doubl x size_t function find set index datai bin number cover coordin datax histogram datah bin locat use binari search search includ optim histogram uniform rang return correct bin immedi case datax found rang histogram function set index datai return macrogsl_success datax lie outsid valid rang histogram function return macrogsl_edom error handler invok index singl histogram statist singl statist histogram singl maximum valu histogram singl minimum valu histogram histogram statist function doubl gsl_histogram_max_v const gsl_histogram h function return maximum valu contain histogram bin function size_t gsl_histogram_max_bin const gsl_histogram h function return index bin contain maximum valu case sever bin contain maximum valu smallest index return function doubl gsl_histogram_min_v const gsl_histogram h function return minimum valu contain histogram bin function size_t gsl_histogram_min_bin const gsl_histogram h function return index bin contain minimum valu case sever bin contain maximum valu smallest index return index singl mean valu histogram function doubl gsl_histogram_mean const gsl_histogram h function return mean histogram variabl histogram regard probabl distribut neg bin valu ignor purpos calcul accuraci result limit bin width index singl standard deviat histogram singl varianc histogram function doubl gsl_histogram_sigma const gsl_histogram h function return standard deviat histogram variabl histogram regard probabl distribut neg bin valu ignor purpos calcul accuraci result limit bin width function doubl gsl_histogram_sum const gsl_histogram h function return sum bin valu neg bin valu includ sum histogram oper function int gsl_histogram_equal_bins_p const gsl_histogram h const gsl_histogram h function return individu bin rang two histogram ident otherwis function int gsl_histogram_add gsl_histogram h const gsl_histogram h function add content bin histogram datah correspond bin histogram datah ie mathh_i h_i h_i two histogram must ident bin rang function int gsl_histogram_sub gsl_histogram h const gsl_histogram h function subtract content bin histogram datah correspond bin histogram datah ie mathh_i h_i h_i two histogram must ident bin rang function int gsl_histogram_mul gsl_histogram h const gsl_histogram h function multipli content bin histogram datah content correspond bin histogram datah ie mathh_i h_i h_i two histogram must ident bin rang function int gsl_histogram_div gsl_histogram h const gsl_histogram h function divid content bin histogram datah content correspond bin histogram datah ie mathh_i h_i h_i two histogram must ident bin rang function int gsl_histogram_scal gsl_histogram h doubl scale function multipli content bin histogram datah constant datascal ie texinfo math h_i h_i hboxit scale texinfo h_i h_i scale function int gsl_histogram_shift gsl_histogram h doubl offset function shift content bin histogram datah constant dataoffset ie texinfo math h_i h_i hboxit offset texinfo h_i h_i offset read write histogram librari provid function read write histogram file binari data format text function int gsl_histogram_fwrit file stream const gsl_histogram h function write rang bin histogram datah stream datastream binari format return valu success macrogsl_efail problem write file sinc data written nativ binari format may portabl differ architectur function int gsl_histogram_fread file stream gsl_histogram h function read histogram datah open stream datastream binari format histogram datah must prealloc correct size sinc function use number bin datah determin mani byte read return valu success macrogsl_efail problem read file data assum written nativ binari format architectur function int gsl_histogram_fprintf file stream const gsl_histogram h const char range_format const char bin_format function write rang bin histogram datah linebylin stream datastream use format specifi datarange_format databin_format one codeg code codef format float point number function return success macrogsl_efail problem write file histogram output format three column column separ space like rang rang bin rang rang bin rang rang bin rangen rangen binn valu rang format use datarange_format valu bin format use databin_format line contain lower upper limit rang bin valu bin sinc upper limit one bin lower limit next duplic valu line allow histogram manipul lineori tool function int gsl_histogram_fscanf file stream gsl_histogram h function read format data stream datastream histogram datah data assum threecolumn format use funcgsl_histogram_fprintf histogram datah must prealloc correct length sinc function use size datah determin mani number read function return success macrogsl_efail problem read file index singl resampl histogram singl sampl histogram singl probabl distribut histogram resampl histogram histogram made count event regard measur probabl distribut allow statist error height bin repres probabl event valu mathx fall rang bin probabl distribut function onedimension form mathpxdx math px n_i n w_i equat mathn_i number event bin contain mathx mathw_i width bin mathn total number event distribut event within bin assum uniform index singl probabl distribut histogram singl sampl histogram singl random sampl histogram singl histogram random sampl histogram probabl distribut struct probabl distribut function histogram consist set bin measur probabl event fall given rang continu variabl mathx probabl distribut function defin follow struct actual store cumul probabl distribut function natur quantiti gener sampl via invers transform method onetoon map cumul probabl distribut rang shown take uniform random number rang find correspond coordin cumul probabl distribut obtain sampl desir probabl distribut type gsl_histogram_pdf codesize_t n number bin use approxim probabl distribut function codedoubl rang rang bin store array mathn element point datarang codedoubl sum cumul probabl bin store array datan element point datasum follow function allow creat typegsl_histogram_pdf struct repres probabl distribut gener random sampl function gsl_histogram_pdf gsl_histogram_pdf_alloc size_t n function alloc memori probabl distribut datan bin return pointer newli initi typegsl_histogram_pdf struct insuffici memori avail null pointer return error handler invok error code macrogsl_enomem function int gsl_histogram_pdf_init gsl_histogram_pdf p const gsl_histogram h function initi probabl distribut datap content histogram datah bin datah neg error handler invok error code macrogsl_edom probabl distribut contain neg valu function void gsl_histogram_pdf_fre gsl_histogram_pdf p function free probabl distribut function datap memori associ function doubl gsl_histogram_pdf_sampl const gsl_histogram_pdf p doubl r function use datar uniform random number zero one comput singl random sampl probabl distribut datap algorithm use comput sampl math given follow formula texinfo math hboxrangei delta hboxrangei hboxrangei texinfo rangei delta rangei rangei mathi index satisfi mathsumi le r sumi mathdelta mathr sumisumi sumi exampl program histogram follow program show make simpl histogram column numer data suppli codestdin program take three argument specifi upper lower bound histogram number bin read number codestdin one line time add histogram data read print accumul histogram use funcgsl_histogram_fprintf includ exampleshistogramc code exampl program use gener random sampl cauchi distribut width histogram rang use bin gslrandist cauchi gslhistogram histogramdat numreffig_histogram show familiar shape cauchi distribut fluctuat caus finit sampl size _fig_histogram figur imageshistogrampng scale histogram output exampl program index singl two dimension histogram singl histogram two dimension histogram two dimension histogram consist set bin count number event fall given area mathxi plane simplest way use two dimension histogram record twodimension posit inform mathnxi anoth possibl form joint distribut record relat variabl exampl detector might record posit event mathx amount energi deposit math could histogram joint distribut mathnx histogram struct two dimension histogram defin follow struct type gsl_histogramd codesize_t nx ny number histogram bin x direct codedoubl xrang rang bin xdirect store array codenx element point dataxrang codedoubl yrang rang bin ydirect store array codeni element point datayrang codedoubl bin count bin store array point databin bin floatingpoint number increment noninteg valu necessari array databin store two dimension array bin singl block memori accord map codebinij codebini ny j rang codebinij given codexrangei codexrangei xdirect codeyrangej codeyrangej ydirect bin inclus lower end exclus upper end mathemat mean bin defin follow inequ texinfo math beginarraycc hboxbinij correspond hboxit xrangei le x hboxit xrangei hboxand hboxit yrangej le hboxit yrangej endarray texinfo binij correspond xrangei x xrangei yrangej yrangej note sampl fall upper side histogram exclud want includ valu side bin need add extra row column histogram typegsl_histogramd struct associ function defin header file filegsl_histogramdh histogram alloc function alloc memori histogram follow style funcmalloc funcfre addit also perform error check insuffici memori avail alloc histogram function call error handler error number macrogsl_enomem addit return null pointer thu use librari error handler abort program isnt necessari check everi histogram codealloc function gsl_histogramd gsl_histogramd_alloc size_t nx size_t ny function alloc memori twodimension histogram datanx bin x direct datani bin direct function return pointer newli creat typegsl_histogramd struct insuffici memori avail null pointer return error handler invok error code macrogsl_enomem bin rang must initi one function histogram readi use deftypefun gsl_histogramd gsl_histogramd_calloc size_t nx size_t ny function alloc memori twodimension histogram datanx bin x direct datani bin direct function return pointer newli initi typegsl_histogramd struct bin uniformli space total rang c le x nx math x nx xdirect c le ny math ny ydirect shown tabl bin initi zero histogram readi use insuffici memori avail null pointer return error handler invok error code macrogsl_enomem end deftypefun deftypefun gsl_histogramd gsl_histogramd_calloc_uniform size_t nx size_t ny doubl xmin doubl xmax doubl ymin doubl ymax function alloc histogram size datanxbydatani uniformli cover rang dataxmin dataxmax dataymin dataymax mathx mathi direct respect end deftypefun deftypefun gsl_histogramd gsl_histogramd_calloc_rang size_t nx size_t ny doubl xrang doubl yrang function alloc histogram size datanxbydatani use mathnx mathni bin rang specifi array dataxrang datayrang end deftypefun function int gsl_histogramd_set_rang gsl_histogramd h const doubl xrang size_t xsize const doubl yrang size_t ysize function set rang exist histogram datah use array dataxrang datayrang size dataxs datays respect valu histogram bin reset zero function int gsl_histogramd_set_ranges_uniform gsl_histogramd h doubl xmin doubl xmax doubl ymin doubl ymax function set rang exist histogram datah cover rang dataxmin dataxmax dataymin dataymax uniformli valu histogram bin reset zero function void gsl_histogramd_fre gsl_histogramd h function free histogram datah memori associ copi histogram function int gsl_histogramd_memcpi gsl_histogramd dest const gsl_histogramd src function copi histogram datasrc preexist histogram datadest make datadest exact copi datasrc two histogram must size function gsl_histogramd gsl_histogramd_clon const gsl_histogramd src function return pointer newli creat histogram exact copi histogram datasrc updat access histogram element access bin twodimension histogram either specifi pair mathxi coordin use bin indic mathij directli function access histogram mathxi coordin use binari search x direct identifi bin cover appropri rang function int gsl_histogramd_incr gsl_histogramd h doubl x doubl function updat histogram datah ad one bin whose x rang contain coordin datax datay point mathxi lie insid valid rang histogram function return zero indic success mathxi lie outsid limit histogram function return macrogsl_edom none bin modifi error handler call sinc often necessari comput histogram small rang larger dataset ignor coordin outsid rang interest function int gsl_histogramd_accumul gsl_histogramd h doubl x doubl doubl weight function similar funcgsl_histogramd_incr increas valu appropri bin histogram datah floatingpoint number dataweight function doubl gsl_histogramd_get const gsl_histogramd h size_t size_t j function return content datai datajth bin histogram datah datai dataj lie outsid valid rang indic histogram error handler call error code macrogsl_edom function return function int gsl_histogramd_get_xrang const gsl_histogramd h size_t doubl xlower doubl xupper int gsl_histogramd_get_yrang const gsl_histogramd h size_t j doubl ylower doubl yupper function find upper lower rang limit dataith datajth bin x direct histogram datah rang limit store dataxlow dataxupp dataylow datayupp lower limit inclus ie event coordin includ bin upper limit exclus ie event valu upper limit includ fall neighbor higher bin exist function return indic success datai dataj lie outsid valid rang indic histogram error handler call error code macrogsl_edom function doubl gsl_histogramd_xmax const gsl_histogramd h doubl gsl_histogramd_xmin const gsl_histogramd h size_t gsl_histogramd_nx const gsl_histogramd h doubl gsl_histogramd_ymax const gsl_histogramd h doubl gsl_histogramd_ymin const gsl_histogramd h size_t gsl_histogramd_ni const gsl_histogramd h function return maximum upper minimum lower rang limit number bin x direct histogram datah provid way determin valu without access typegsl_histogramd struct directli function void gsl_histogramd_reset gsl_histogramd h function reset bin histogram datah zero search histogram rang follow function use access updat routin locat bin correspond given mathxi coordin function int gsl_histogramd_find const gsl_histogramd h doubl x doubl size_t size_t j function find set indic datai dataj bin cover coordin datax datay bin locat use binari search search includ optim histogram uniform rang return correct bin immedi case mathxi found function set indic datai dataj return macrogsl_success mathxi lie outsid valid rang histogram function return macrogsl_edom error handler invok histogram statist function doubl gsl_histogramd_max_v const gsl_histogramd h function return maximum valu contain histogram bin function void gsl_histogramd_max_bin const gsl_histogramd h size_t size_t j function find indic bin contain maximum valu histogram datah store result datai dataj case sever bin contain maximum valu first bin found return function doubl gsl_histogramd_min_v const gsl_histogramd h function return minimum valu contain histogram bin function void gsl_histogramd_min_bin const gsl_histogramd h size_t size_t j function find indic bin contain minimum valu histogram datah store result datai dataj case sever bin contain maximum valu first bin found return function doubl gsl_histogramd_xmean const gsl_histogramd h function return mean histogram x variabl histogram regard probabl distribut neg bin valu ignor purpos calcul function doubl gsl_histogramd_ymean const gsl_histogramd h function return mean histogram variabl histogram regard probabl distribut neg bin valu ignor purpos calcul function doubl gsl_histogramd_xsigma const gsl_histogramd h function return standard deviat histogram x variabl histogram regard probabl distribut neg bin valu ignor purpos calcul function doubl gsl_histogramd_ysigma const gsl_histogramd h function return standard deviat histogram variabl histogram regard probabl distribut neg bin valu ignor purpos calcul function doubl gsl_histogramd_cov const gsl_histogramd h function return covari histogram x variabl histogram regard probabl distribut neg bin valu ignor purpos calcul function doubl gsl_histogramd_sum const gsl_histogramd h function return sum bin valu neg bin valu includ sum histogram oper function int gsl_histogramd_equal_bins_p const gsl_histogramd h const gsl_histogramd h function return individu bin rang two histogram ident otherwis function int gsl_histogramd_add gsl_histogramd h const gsl_histogramd h function add content bin histogram datah correspond bin histogram datah ie mathh_ij h_ij h_ij two histogram must ident bin rang function int gsl_histogramd_sub gsl_histogramd h const gsl_histogramd h function subtract content bin histogram datah correspond bin histogram datah ie mathh_ij h_ij h_ij two histogram must ident bin rang function int gsl_histogramd_mul gsl_histogramd h const gsl_histogramd h function multipli content bin histogram datah content correspond bin histogram datah ie mathh_ij h_ij h_ij two histogram must ident bin rang function int gsl_histogramd_div gsl_histogramd h const gsl_histogramd h function divid content bin histogram datah content correspond bin histogram datah ie mathh_ij h_ij h_ij two histogram must ident bin rang function int gsl_histogramd_scal gsl_histogramd h doubl scale function multipli content bin histogram datah constant datascal ie texinfo math h_ij h_ij hboxit scale texinfo h_ij h_ij scale function int gsl_histogramd_shift gsl_histogramd h doubl offset function shift content bin histogram datah constant dataoffset ie texinfo math h_ij h_ij hboxit offset texinfo h_ij h_ij offset read write histogram librari provid function read write two dimension histogram file binari data format text function int gsl_histogramd_fwrit file stream const gsl_histogramd h function write rang bin histogram datah stream datastream binari format return valu success macrogsl_efail problem write file sinc data written nativ binari format may portabl differ architectur function int gsl_histogramd_fread file stream gsl_histogramd h function read histogram datah stream datastream binari format histogram datah must prealloc correct size sinc function use number x bin datah determin mani byte read return valu success macrogsl_efail problem read file data assum written nativ binari format architectur function int gsl_histogramd_fprintf file stream const gsl_histogramd h const char range_format const char bin_format function write rang bin histogram datah linebylin stream datastream use format specifi datarange_format databin_format one codeg code codef format float point number function return success macrogsl_efail problem write file histogram output format five column column separ space like xrang xrang yrang yrang bin xrang xrang yrang yrang bin xrang xrang yrang yrang bin xrang xrang yrangeni yrangeni binni xrang xrang yrang yrang bin xrang xrang yrang yrang bin xrang xrang yrang yrang bin xrang xrang yrangeni yrangeni binni xrangenx xrangenx yrang yrang binnx xrangenx xrangenx yrang yrang binnx xrangenx xrangenx yrang yrang binnx xrangenx xrangenx yrangeni yrangeni binnxni line contain lower upper limit bin content bin sinc upper limit bin lower limit neighbor bin duplic valu allow histogram manipul lineori tool function int gsl_histogramd_fscanf file stream gsl_histogramd h function read format data stream datastream histogram datah data assum fivecolumn format use funcgsl_histogramd_fprintf histogram datah must prealloc correct length sinc function use size datah determin mani number read function return success macrogsl_efail problem read file resampl histogram onedimension case twodimension histogram made count event regard measur probabl distribut allow statist error height bin repres probabl event mathxmathi fall rang bin twodimension histogram probabl distribut take form mathpxi dx dy math pxi n_ij n a_ij equat mathn_ij number event bin contain mathxi matha_ij area bin mathn total number event distribut event within bin assum uniform type gsl_histogramd_pdf codesize_t nx ny number histogram bin use approxim probabl distribut function x direct codedoubl xrang rang bin xdirect store array codenx element point dataxrang codedoubl yrang rang bin ydirect store array codeni point datayrang codedoubl sum cumul probabl bin store array datanx datani element point datasum follow function allow creat typegsl_histogramd_pdf struct repres two dimension probabl distribut gener random sampl function gsl_histogramd_pdf gsl_histogramd_pdf_alloc size_t nx size_t ny function alloc memori twodimension probabl distribut size datanxbydatani return pointer newli initi typegsl_histogramd_pdf struct insuffici memori avail null pointer return error handler invok error code macrogsl_enomem function int gsl_histogramd_pdf_init gsl_histogramd_pdf p const gsl_histogramd h function initi twodimension probabl distribut calcul datap histogram datah bin datah neg error handler invok error code macrogsl_edom probabl distribut contain neg valu function void gsl_histogramd_pdf_fre gsl_histogramd_pdf p function free twodimension probabl distribut function datap memori associ function int gsl_histogramd_pdf_sampl const gsl_histogramd_pdf p doubl r doubl r doubl x doubl function use two uniform random number zero one datar datar comput singl random sampl twodimension probabl distribut datap exampl program histogram program demonstr two featur twodimension histogram first twodimension histogram creat x run sampl point ad histogram height height height histogram three event use gener random sampl simul event print includ exampleshistogramdc code follow plot show distribut simul event use higher resolut grid see origin underli histogram also statist fluctuat caus event uniformli distribut area origin bin figur imageshistogramdpng scale distribut simul event exampl program fileio todo updat newest implement fileio implement help overcom previou limit io pickl format use hdf file one main differ pickl hdf hdf structur data pickl necessari retriev data order data save hdf data structur similarli dictionari necessari assign label everi data element therefor access index label structur similarli python dictionari fileio facilit transit pickl hdf prove unifi interfac pickl hdf file also provid convers mechan pickl hdf follow exampl pretend illustr transit current pickl io format hdf current usag pickl load code python opendatadata_forces_mxnpkl rb ifil forces_init w ytild ytild theta pickleloadifil store code python opendatadata_forces_mxnpkl wb ifil pickledumpforces_init w ytild ytild theta ifil fileio use pickl format load code python bioen import fileio fio forces_init w ytild ytild theta fioloaddatadata_forces_mxnpkl store code python bioen import fileio fio fiodumpdatadata_forces_mxnpkl forces_init w ytild ytild theta fileio use hdf format return dictionari transform data list list dictionari load code python bioen import fileio fio mydict fioloaddatah forces_init w ytild ytild theta fioget_list_from_dictmydictforces_init w ytild ytild theta code python bioen import fileio fio mydict fioloaddatah mylist forces_init w ytild ytild theta forces_init w ytild ytild theta fioget_list_from_dictmydict mylist store code python bioen import fileio fio mydict fioget_dict_from_listforces_initforces_init ww yy ytildeytild ytildeytild thetatheta fiodump datah mydict option use transit current listlik format dictionarylik fileio convert pickl file new hdf file code python bioen import fileio fio mylistforces_initwyytildeytildetheta fioconvert_to_hdfdatapkldatahmylist recommend three step transit transform current pickl file hdf file use convers tool suppervis convers tagslabel data must specifi eg code python bioen import fileio fio tag data mylistforces_initwyytildeytildetheta convert pickl new h file fioconvert_to_hdfdatapkldatahmylist replac pickl call fileio pickl call code python previou pickl opendatadata_forces_mxnpkl rb ifil forces_init w ytild ytild theta pickleloadifil fileio pickl bioen import fileio fio forces_init w ytild ytild theta fioloaddatadata_forces_mxnpkl replac filenam extens pkl h call data type convert dictlistdictlist code python bioen import fileio fio mydict fioloaddatah ginit g ytild ytild w theta fioget_list_from_dictnew_mydictginit g ytild ytild w theta orphan api transit redes current version implement major api chang therefor util previou script could affect introduct differ definit librari method renam order creat unifi context notat librari minim method algorithm current bioenoptim perform optim combin extern packag work interfac scipi gsl liblbfg extern packageslibrari user must decid compil time includ one extend bioenoptim function depend instal option abl use three minim scipi mandatori gsl option lbfg option minim appli differ algorithm scipi bfg lbfg cg gsl conjugate_fr conjugate_pr bfg bfg steepest_desc lbfsg lbfg everi combin minim algorithm set argument affect behaviour optimiz eg toler step_siz max_iter api optim new argument contain configur optim need current version argument structur set contain definit minim algorithm algorithm specif paramet bioenoptim extend featur algorithm specif configur user decid minim use basic structur contain default configur obtain minim modul config bioenoptimizeminimizeparametersgsl set print also shown readabl way bioen_optimzieminimizeshow_paramsconfig minim gsl debug true verbos true param step_siz tol max_iter algorithm gsl_multimin_fdfminimizer_vector_bfg use_c_funct true n_thread cache_ytilde_transpos auto structur contain specif field name param specif configur algorithm possibl modifi valu within structur except minim field order modifi valu simpli index content contain follow configalgorithm conjugate_pr configparamsstep_s configparamsmax_iter extend featur along algorithm specif configur follow option debug extra paramet return minim verbos extra inform print execut use_c_funct scipi exclus paramet select python c implement n_thread explicit number implicit environ variabl omp_num_thread cache_ytilde_transpos true perform improv higher memori consumpt truefalseauto usag appli optim import bioenoptim bop bopforcesfind_optimum forces_init w ytild ytild theta config boplog_weightsfind_optimum ginit g ytild ytild theta config modul submodul bioen python packag toctre maxdepth bioen automodul bioen member undocmemb todo add modul bioenvers automodul bioenvers member undocmemb bioenanalyz automodul bioenanalyz member undocmemb bioenanalyzeprocedur automodul bioenanalyzeprocedur member undocmemb bioenanalyzerun_bioen automodul bioenanalyzerun_bioen member undocmemb bioenanalyzeutil automodul bioenanalyzeutil member undocmemb bioenanalyzeobserv automodul bioenanalyzeobserv member undocmemb bioenanalyzeobservablesobserv automodul bioenanalyzeobservablesobserv member undocmemb bioenanalyzeobservablesd automodul bioenanalyzeobservablesd member undocmemb bioenanalyzeobservablesdeerd automodul bioenanalyzeobservablesdeerd member undocmemb bioenanalyzeobservablesgener automodul bioenanalyzeobservablesgener member undocmemb bioenanalyzeobservablesgenericgener automodul bioenanalyzeobservablesgenericgener member undocmemb bioenanalyzeobservablesscatt automodul bioenanalyzeobservablesscatt member undocmemb bioenanalyzeobservablesscatteringscatt automodul bioenanalyzeobservablesscatteringscatt member undocmemb bioenanalyzeshow_plot automodul bioenanalyzeshow_plot member undocmemb bioenanalyzeshow_plotshow_plot automodul bioenanalyzeshow_plotshow_plot member undocmemb bioenoptim automodul bioenoptim member undocmemb bioenoptimizeminim automodul bioenoptimizeminim member undocmemb bioenoptimizelog_weight automodul bioenoptimizelog_weight member undocmemb bioenoptimizeforc automodul bioenoptimizeforc member undocmemb bioenoptimizeutil automodul bioenoptimizeutil member undocmemb bioenoptimizeextc_bioen automodul bioenoptimizeextc_bioen member undocmemb hpcmd document master file creat sphinxquickstart tue jul adapt file complet like least contain root toctre direct welcom bioen document toctre maxdepth caption content introduct tbd instal bioen written python compat python prepar instal standard way use setuppi usag tbd see redesignrst optim part toctre maxdepth fileiorst sourc document document link gener automat docstr present bioen sourc code toctre maxdepth modulesrst copyright licens copyright katrin reichel jürgen köfinger klau reuter césar alland luka stelzl gerhard hummer licens gnu gpl version see file licensetxt copi detail indic tabl refgenindex refmodindex refsearch