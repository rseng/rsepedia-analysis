changelog v bug fix pool object recycl function v new highperform optim implement flatcombin synchron techniqu new implement provid synch framework written scratch api fix v readmemd updat ad joss paper repositori v headerfil cleanup order provid better consist api ad synch prefix struct provid runtimeprimit endus ad synch prefix function provid runtimeprimit endus extens document api creat doxygen configur file autogener manpagesdocument api document provid github page httpsnkallimagithubiosimuniversalconstructionindexhtml code coverag report provid codecovio valid script support instal framework improv build environ expans contributingmd provid short discuss see performancemd expect perform variou object provid framework benchsh validatesh script use similar argument provid benchmark v ad lcrq queue implement adam morrison yehuda afek ppopp httpmcgcstauacilprojectslcrq memori reclam simstack support ad support bit compareswap document improv memori reclam section ad readmemd v improv validatesh better error report enhanc readmemd improv logo v introduc validatesh smokevalid script verifi mani provid data structur improv benchmark order conform validatesh introduc logo repositori enhanc readmemd v execut paus instruct spinningloop x architectur spinlock lockfre algorithm may perform benefit smt architectur document improv v new implement poolc function stack queue implement support memori reclam except simstack simqueu lfstack msqueue implement code cleanup sim famili algorithm improv hsynch famili algorithm enhanc numa support numaawar datastructur homogen code stack queue implement better output benchsh script numer perform optim bugfix especi machin weak memori model document improv v improv output messag buildsystem ad support clang makefil ieus make clang build sourc clang compil bugfix minor improv drop support intel icc compil ad support intel icx compil test intelr oneapi dpc compil v signific enhanc benchsh new folderfil librari structur ftime replac clock_gettim v remov deadcod unsupport sparcsolari architectur papi numa librari automat use depend user set configh pid fix sync famili algorithm v initi support armv riscv machin architectur signific perform optim synch famili algorithm modern numa machin produc binari run number threadsfib without recompil produc benchmark binari accept argument number thread number benchmark iter etc enhanc runtim handl numa characterist modern multiprocessor better thread affin polici numa machin new script call run_allsh provid automat test produc binari clangformat file provid order maintain stylingconsist sourc code numer perform optim bugfix v test perform riscv aarch machin architectur bug fix perform improv v support armv riscv machin architectur v last version support solarissparc architectur sparcsolari architectur unsupport checkbuildhttpsgithubcomnkallimasimuniversalconstructionactionsworkflowscheckbuildymlbadgesvghttpsgithubcomnkallimasimuniversalconstructionactionsworkflowscheckbuildyml validatehttpsgithubcomnkallimasimuniversalconstructionactionsworkflowsvalidateymlbadgesvghttpsgithubcomnkallimasimuniversalconstructionactionsworkflowsvalidateyml codecovhttpscodecovioghnkallimasimuniversalconstructionbranchcodecovgraphbadgesvgtokenvaboabmhttpscodecovioghnkallimasimuniversalconstruct statushttpsjosstheojorgpapersbfbabdcccfeestatussvghttpsjosstheojorgpapersbfbabdcccfe p aligncent img srcresourceslogo_synchpng altth synch framework width p summari opensourc framework concurr datastructur benchmark provid framework contain substanti set concurr datastructur queue stack combiningobject hashtabl lock etc framework also provid userfriendli runtim develop benchmark concurr datastructur among featur runtim provid function creat thread easili posix userlevel thread tool measur perform etc provid concurr datastructur runtim highli optim contemporari numa multiprocessor amd epyc intel xeon current version code optim x_ machin architectur code also success test machin architectur armv riscv benchmark perform much better architectur nativ support fetchadd instruct eg x_ etc collect synch framework provid larg set highli effici concurr datastructur combiningobject concurr queue stack concurr hashtabl lock cornerston synch framework combin object combin object concurr objectdatastructur abl simul concurr object eg stack queue atom counter barrier etc synch framework provid psim waitfre combin object block combin object ccsynch dsmsynch hsynch block combin object base techniqu present moreov synch framework provid osci block combin techniqu achiev good perform use userlevel thread sinc v synch framework offer new high perform implement flatcombin synchron techniqu novel version implement scratch optim version origin code provid term concurr queue synch framework provid simqueu waitfre queue implement base psim combin object ccqueue dsmqueue hqueue block queue implement base ccsynch dsmsynch hsynch combin object block queue implement base clh lock lockfre implement present also provid sinc v synch framework provid lcrq queue implement term concurr stack synch framework provid simstack waitfre stack implement base psim combin object ccstack dsmstack hstack block stack implement base ccsynch dsmsynch hsynch combin object moreov lockfre stack implement block implement base clh lock provid synch framework also provid concurr queue stack implement ie osciqueu oscistack implement achiev high perform use userlevel thread sinc v synch framework provid stack queue implement ie fcstack fcqueue base implement flatcombin provid synch framework furthermor synch framework provid scalabl lock implement ie mc queuelock present clh queuelock present final synch framework provid two exampleimplement concurr hashtabl specif provid simpl implement base clh queuelock implement base dsmsynch combin techniqu follow tabl present summari concurr datastructur offer synch framework concurr object provid implement combin object ccsynch dsmsynch hsynch psim osci oyama fc new implement flatcombin concurr queue ccqueue dsmqueue hqueue simqueu osciqueu clhqueue msqueue lcrq fcqueue concurr stack ccstack dsmstack hstack simstack oscistack clhstack lfstack fcstack lock clh mc hash tabl clhhash hashtabl base dsmsynch requir modern bit machin current bit architectur support current version code optim x_ machin architectur code also success test machin architectur armv riscv benchmark perform much better architectur nativ support fetchadd instruct eg x_ etc recent linux distribut synch environ may also buildrun unixlik system ie bsd etc case result guarante sinc environ test system linux compil gcc version greater recommend may also tri use icx clang build requir follow develop packag libatom libnuma libpapi case synch_track_cpu_count flag enabl libconcurrentconfigh build document ie manpag doxygen requir configur compil instal framework libconcurrentconfigh file user configur basic option framework enabledis debug mode support numa machin enabl perform statist etc provid default configur work well mani case howev default configur may provid best perform get best perform modifi libconcurrentconfigh may need see performanceoptim section case want compil librari provid implement concurr algorithm execut make root directori sourc file step necessari case want run benchmark howev extra make option provid case user want compil framework system default compil clean binari file etc follow tabl provid list avail make option command descript make autodetect current architectur compil sourcecod work user make cccc compil sourcecod current architectur use cc compil make clang compil sourcecod use clang compil make icx compil sourcecod use intel icx compil make unknown compil sourcecod architectur x_ eg riscv arm etc make clean cleaningup binari file make doc creat document ie manpag make instal instal framework default locat ie optsynch make instal dirdir instal framework dirsynch locat make uninstal uninstal framework build document ie manpag user execut make doc notic build document system equip doxygen document tool instal framework user execut make instal case framework instal default locat optsynch notic case user write access opt directori sudo access make instal dirdir command instal framework dirsynch path make uninstal uninstal framework access man page user manual setup manpath environment variabl appropri eg export manpathmanpathoptsynchdocsman run benchmark run benchmark use benchsh script file provid main directori sourc tree exampl usag benchsh filerun option valu option valu benchmark report time need complet averag throughput oper perform perform statist debug option enabl framework build benchsh script measur strong scale benchmark execut follow option avail option descript max_thread set maximum number number posix thread use last set iter benchmark default number system core step set step extra number thread use set iter benchmark default number processor f fiber set number userlevel thread per posix thread r repeat set total number oper execut benchmark default iter set number time benchmark execut default w workload set amount workload ie dummi loop iter among two consecut oper benchmark object default l list display list avail benchmark n numa_nod set number numa node may differ actual hw numa node hierarch algorithm take account b backoff backoff_high set upper backoff bound lockfre simbas algorithm bl backoff_low set lower backoff bound msqueuebench lfstackbench lfuobjectbench benchmark h help display help exit framework provid validatesh validationsmok script validatesh script compil sourc debug mode run big set benchmark variou number thread run benchmark script evalu debug output case success print pass case failur script simpli print fail order see avail option validationsmok script execut validatesh h given validatesh validationsmok script depend binari compil debug mode instal use make instal follow imag show execut default behavior validatesh resourcesvalidate_examplegif framework provid anoth simpl fast smoke test run_allsh quickli run avail benchmark default option store result resultstxt file performanceoptim get best perform provid benchmark alway easi task get best perform modif makefil may need compil flag etc import paramet benchmark andor librari place libconcurrentconfigh file use guid consid order get better perform modern multiprocessor follow case target machin numa machin make sure synch_numa_support enabl libconcurrentconfigh usual option enabl give much better perform numa machin howev older machin option may induc perform overhead whenev synch_numa_support option enabl runtim detect system number numa node setup environ appropri howev signific perform benefit observ manual settingup number numa node manual see numa_nod option exampl perform hsynch famili algorithm amd epyc machin consist x epyc processor ie hardwar thread much better set numa_nod equal notic runtim success report avail numa node valu optim hsynch configur experiment analysi differ valu numa_nod may need check perform impact synch_compact_alloc option libconcurrentconfigh modern amd multiprocessor ie equip epyc processor option give tremend perform boost contrast amd processor option introduc seriou perform overhead intel xeon processor thu care experiment analysi need order show possibl benefit option check cach line size cache_line_s s_cache_lin option includessystemh option greatli affect perform modern processor intel machin behav better cache_line_s equal greater modern amd machin achiev better perform valu equal notic cache_line_s s_cache_lin depend synch_compact_alloc option see includessystemh use backoff avail mani provid algorithm could use backoff order provid better perform eg sim lfstack msqueue simqueu simstack etc case crucial import use b case bl argument order get best perform ensur use recent gcccompat compil eg gcc compil version greater highli recommend check perform impact differ avail compil optim case gcc ofast option give best perform addit algorithm ie sim osci simstack oscistack simqueu osciqueu benefit enabl mavx option case avx instruct support hardwar check system oversubscript userlevel fiber enhanc perform mani algorithm ie sim osci famili algorithm show tremend perform boost use oversubscript userlevel thread case use fiber option expect perform expect perform synch framework discuss performancemdperformancemd file memori reclam stack queue synch framework provid pool mechan see includespoolh effici alloc dealloc memori provid concurr stack queue implement alloc mechan pool implement lowoverhead provid stack queue implement use function pool mechan order support memori reclam safe manner concurr object guarante memori object go dealloc access thread go free gener dealloc thu reclaim memori easi mani block object sinc lock protect dealloc memori object current synch framework support memori reclam follow concurr stack queue implement concurr queue ccqueue dsmqueue hqueue osciqueu clhqueue concurr stack ccstack dsmstack hstack oscistack clhstack simstack sinc v note dealloc thu recycl memori lockfre waitfre object easi task sinc v simstack support memori reclam use function poolh techniqu similar present blelloch weiin notic msqueue lcrq queue implement lfstack stack implement support memori reclam hazardpoint howev current version synch framework provid implement hazardpoint case user want use memori reclam object custom hazardpoint implement integr environ default memoryreclam enabl case need disabl memori reclam synch_pool_node_recycling_dis option enabl configh follow tabl show memori reclam characterist provid stack queue implement concurr object provid implement memori reclam concurr queue ccqueue dsmqueue hqueue support simqueu support osciqueu support clhqueue support msqueue hazard pointer provid synch lcrq hazard pointer provid synch fcqueue support concurr stack ccstack dsmstack hstack support simstack support sinc v oscistack support clhstack support lfstack hazard pointer provid synch fcstack support memori reclam limit current design reclam mechan thread use singl privat pool reclaim memori producerconsum scenario set thread perform enqueu oper push oper case stack thread perform dequeu oper pop oper case stack insuffici memori reclam perform sinc memori pool access thread own aim improv futur version synch framework api document complet api document provid httpsnkallimagithubiosimuniversalconstructionindexhtmlhttpsnkallimagithubiosimuniversalconstructionindexhtml code exampl simpl benchmark describ simpl examplebenchmark use applic program interfac api provid runtim simpl benchmark measur perform fetchadd instruct multicor machin purpos simpl benchmark measur perform fetchadd implement hardwar softwar c includ stdioh includ stdinth includ primitivesh includ threadtoolsh includ barrierh defin n_thread defin run volatil int_t object cache_align int_t cache_align synchbarri bar cache_align inlin static void executevoid arg long id longarg synchbarrierwaitbar id synchgettimemilli run synchfaaobject synchbarrierwaitbar id synchgettimemilli return null int mainint argc char argv object synchbarriersetbar n_thread synchstartthreadsnn_thread execut synch_dont_use_uthread synchjointhreadsnn_thread printftim ld mstthroughput f million opssecn run n_thread return examplebenchmark creat n_thread execut run fetchadd oper share bit integ end benchmark throughput ie fetchadd oper per second calcul sete varou valu n_thread benchmark abl measur strong scale synchstartthreadsn function provid api defin threadtoolsh main creat n_thread thread execut execut function declar file synch_dont_use_uthreads_ argument impos synchstartthreadsn creat posix thread case user set correspond fiber argument synchstartthreadsn creat n_thread posix thread creat userlevel ie fiber thread synchjointhreadsn function also provid threadtool h wait posix fiber thread finish execut execut function fetchadd instruct bit integ perform synchfaa function provid api primitivesh thread execut execut function use synchbarri reentrant barrier object simultan start perform fetchadd instruct share variabl object barrier also reus end execut function order allow thread id measur amount time benchmark need complet synchbarrierset function main initi synchbarri object synchbarrierset take argument pointer barrier object number thread n_thread go use synchbarrierset synchbarrierwait provid api barrierh end benchmark main calcul print averag throughput fetchadd oper per second achiev benchmark want cite us latex articlekallimani doi joss url httpsdoiorgjoss year publish open journal volum number page author nikolao kallimani titl synch framework concurr datastructur benchmark journal journal open sourc softwar releas extens list recent releas featur provid httpsgithubcomnkallimasimuniversalconstructionreleaseshttpsgithubcomnkallimasimuniversalconstructionreleas licens synch framework provid lgpl licensehttpsgithubcomnkallimasimuniversalconstructionblobmainlicens code conduct code conducthttpsgithubcomnkallimasimuniversalconstructionblobmaingithubcode_of_conductmd refer panagiota fatour nikolao kallimani revisit combin synchron techniqu acm sigplan notic vol acm ppopp panagiota fatour nikolao kallimani highlyeffici waitfre univers construct proceed twentythird annual acm symposium parallel algorithm architectur spaa panagiota fatour nikolao kallimani lock oscil boost perform concurr data structur proceed st intern confer principl distribut system opodi yoshihiro oyama kenjiro taura akinori yonezawa execut parallel program synchron bottleneck effici proceed intern workshop parallel distribut comput symbol irregular applic vol travi craig build fifo priorityqueu spin lock atom swap technic report tr depart comput scienc univers washington februari peter magnusson ander landin erik hagersten queue lock cach coher multiprocessor parallel process symposium proceed eighth intern ieee mage michael michael l scott simpl fast practic nonblock block concurr queue algorithm proceed fifteenth annual acm symposium principl distribut comput acm r kent treiber system program cope parallel intern busi machin incorpor thoma j watson research center john mellorcrummey michael l scott algorithm scalabl synchron sharedmemori multiprocessor acm transact comput system toc panagiota fatour nikolao kallimani highlyeffici waitfre synchron theori comput system adam morrison yehuda afek fast concurr queue x processor proceed th acm sigplan symposium principl practic parallel program adam morrison yehuda afek sourc code lcrq httpmcgcstauacilprojectslcrq guy e blelloch yuanhao wei brief announc concurr fixeds alloc free constant time th intern symposium distribut comput disc schloss dagstuhlleibnizzentrum für informatik danni hendler itai incz nir shavit moran tzafrir flat combin synchronizationparallel tradeoff proceed twentysecond annual acm symposium parallel algorithm architectur spaa pp danni hendler itai incz nir shavit moran tzafrir sourc code flatcomb httpsgithubcommitcarbonflatcombin contact inform pleas hesit send email nkallima icsforthgr feedback alway valuabl contribut sourc code structur synch framework consist main part ie runtimeprimit librari concurr datastructur benchmark see figur runtimeprimit part provid basic function creat manag thread function basic atom primit eg compareswap fetchadd fenc simpl synchron barrier etc mechan basic memori allocationmanag eg memori pool etc function measur time report cpu counter etc furthermor runtimeprimit provid simpl lightweight librari user levelthread use order evalu provid datastructur algorithm concurr librari util build block runtimeprimit layer order provid concurr datastructur eg combin object queue stack etc almost everi concurr datastructur synchron mechan synch provid least one benchmark evalu perform p aligncent img srcresourcescode_structurepng altth codestructur synch framework width p first discuss issu contribut repositori encourag first discuss issu chang contribut wish make order pleas open issu send email open discuss new idea improv contribut pleas note code conducthttpsgithubcomnkallimasimuniversalconstructionblobmaingithubcode_of_conductmd consid interact project readi make chang fork repositori creat new branch patch make updateschang open pull request submit pull request target current develop branch ie branch highest version number get review code convent commit new patch follow step check code style patch ensur instal clangformat packag version clone repositori need run git config local corehookspath git_hook enabl recommend code style check place clang_format file git commit tool discov inconsist creat patch file pleas follow instruct appli patch open pull request gener pleas conform code style follow convent ident style pleas avoid use tab use space instead tab comment comment start expos document doxygen start comment struct selfexplanatori name struct doubleendedqueuestruct tell develop struct use use capitallett first charact struct pleas use typedef simplifi structnam eg doubleendedqueuestruct instead struct doubleendedqueuestruct public struct provid runtimeprimit endus start synch prefix start v eg synchmemorystruct etc function function follow rule hold selfexplanatori name function getmemori tell develop return well getthreadid etc avoid use capitallett first charact function public function provid runtimeprimit endus start synch prefix start v ie synchgetmemori intern function start synch prefix ie getmemori definit use capit letter definit strongli recommend public definit start synch_ prefix memori alloc align memori manag pleas use malloc calloc etc function directli pleas use memori manag function provid primitivesh case function primitivesh meet need patch pleas consid expand atom primit processor primit use asm assembl code compil intrins directli code pleas use primit provid primitivesh case function primitivesh meet need patch pleas consid expand filenam convent sourcecod concurr datastructur provid place libconcurrentconcurr directori concurr datastructur provid public api h headerfil place libconcurrentinclud directori concurr datastructur least one benchmark provid benchmark directori benchmark place benchmark directori sourcecod benchc suffix prefix name concurr datastructur benchmark ie benchmarksccsynchbenchc file benchmark ccsynch combin object api code document strongli recommend suffici comment code least ensur public function patch provid adequ document doxygen basic correct valid whenev debug macro defin libconcurrentconfigh provid benchmark make basic sanitycheck order ensur provid concurr datastructur behav appropri exampl concurr stack benchmark thread execut specif amount pushpop pair oper concurr stack debug macro ensur end benchmark stack empti element given amount element initi phase benchmark zero validatesh script compil sourc debug mode run big set benchmark variou number thread run benchmark script evalu debug output case success print pass case failur script simpli print fail case want contribut new concurr datastructur provid sanitycheck code benchmark activ whenev debug macro defin pleas dont forget updat validatesh script appropri final step pull request updat readmemd detail log contributionchang changelogmd file increas version number need examplefil readmemd new version pull request would repres version scheme use releas later v semverhttpssemverorg short given version number majorminorpatch increment major version make incompat api chang minor version add function backward compat manner patch version make backward compat bug fix expect perform document provid brief discuss expect perform concurr object provid synch framework detail perform analysi provid object reader encourag look evalu testb provid brief perform analysi perform core amd epyc multiprocessor abbr epyc consist epyc processor abl handl thread processor consist silicon die silicon die consist numa node die contain process core core handl thread thu amd multiprocessor consist numa node numa node consist process core combin object perform first experi ccsynch dsmsynch hsynch psim combin object compar univers object base mc spinlock provid mcsbenchrun benchmark simpl lockfre implement provid lfuobjectbenchrun benchmark flatcombin abbr fc techniqu provid experi follow figur perform evalu combin object present perform fetchmultipli synthet benchmark benchmark simpl concurr object support atom fetchmultipli float object implement object simpl enough exhibit overhead synchron techniqu may induc simul simpl concurr object high content figur show averag throughput fetchmultipli oper per second synchron techniqu achiev execut fetchmultipli oper ie set r sinc differ valu thread thread execut fetchmultipli oper experi measur strong scale specif horizont axi repres number thread vertic axi display throughput million oper per second synchron techniqu achiev valu experi perform time averag calcul use benchsh script random number dummi loop iter ie set w insert execut two consecut fetchmultipli oper thread way random work load larg enough avoid unrealist low cach miss ratio long run simul howev workload big enough substanti reduc content experi perform epyc machin hsynch outperform synchron techniqu sinc exploit hierarch numa natur epyc machin specif hsynch achiev time higher throughput flatcombin outperform ccsynch factor simpl lockfre implement fetchmultipli slightli slower psim faster flatcombin also ccsynch time faster object base mc spinlock ccsynch perform also well perform close dsmsynch par lockfre implement p aligncent img srcresourcesfam_epyc_wpng width p experi illustr follow figur behavior evalu object differ amount random work ie differ number dummi loop iter insert execut two fetchmultipli studi fix number thread perform experi differ random work valu k shown wide rang valu big differ throughput exhibit evalu algorithm reason valu synchron cost domin perform factor case random work high greater k throughput algorithm degrad perform differ among becom minim sinc amount random work becom domin perform factor p aligncent img srcresourcesfam_epyc_local_workpng width p perform stack queue figur illustr perform concurr stack implement provid synch framework specif figur present perform hstack dsmstack ccstack clhstack simpl stack implement base clh queuelock waitfre simstack lockfre stack fcstack stack implement base flatcombin thread execut pair push pop oper start empti data structur experi perform differ valu similarli first experi random local work dummi loop iter simul execut two consecut oper thread stack initi empti hstack leverag hierarch numa characterist epyc machin outperform ccstack factor time faster fcstack ccstack outperform dsmqueue time faster simstack p aligncent img srcresourcesstacks_epyc_wpng width p similarli previou experi stack follow figur show perform concurr queue implement provid synch framework specif figur present perform hqueue dsmqueue ccqueue clhqueue two lock queue implement michael scott waitfre simqueu lock free queue implement present michael scott fcqueue queue implement base flatcombin thread execut pair enqueu dequeu oper start empti data structur experi perform differ valu similarli previou experi random local work dummi loop iter simul execut two consecut oper thread queue initi empti hqueue queue implement base hsynch leverag hierarch natur epyc machin outperform queue implement specif hqueue outperform ccqueue factor time faster fcqueue ccqueue dsmqueue achiev similar perform faster simqueu p aligncent img srcresourcesqueues_epyc_wpng width p refer panagiota fatour nikolao kallimani revisit combin synchron techniqu acm sigplan notic vol acm ppopp panagiota fatour nikolao kallimani highlyeffici waitfre univers construct proceed twentythird annual acm symposium parallel algorithm architectur spaa panagiota fatour nikolao kallimani lock oscil boost perform concurr data structur proceed st intern confer principl distribut system opodi yoshihiro oyama kenjiro taura akinori yonezawa execut parallel program synchron bottleneck effici proceed intern workshop parallel distribut comput symbol irregular applic vol travi craig build fifo priorityqueu spin lock atom swap technic report tr depart comput scienc univers washington februari peter magnusson ander landin erik hagersten queue lock cach coher multiprocessor parallel process symposium proceed eighth intern ieee mage michael michael l scott simpl fast practic nonblock block concurr queue algorithm proceed fifteenth annual acm symposium principl distribut comput acm r kent treiber system program cope parallel intern busi machin incorpor thoma j watson research center john mellorcrummey michael l scott algorithm scalabl synchron sharedmemori multiprocessor acm transact comput system toc panagiota fatour nikolao kallimani highlyeffici waitfre synchron theori comput system danni hendler itai incz nir shavit moran tzafrir flat combin synchronizationparallel tradeoff proceed nd annual acm symposium parallel algorithm architectur page danni hendler itai incz nir shavit moran tzafrir code flat combin httpgithubcommitcarbonflatcombin contributor coven code conduct pledg member contributor leader pledg make particip commun harassmentfre experi everyon regardless age bodi size visibl invis disabl ethnic sex characterist gender ident express level experi educ socioeconom statu nation person appear race religion sexual ident orient pledg act interact way contribut open welcom divers inclus healthi commun standard exampl behavior contribut posit environ commun includ demonstr empathi kind toward peopl respect differ opinion viewpoint experi give grace accept construct feedback accept respons apolog affect mistak learn experi focus best us individu overal commun exampl unaccept behavior includ use sexual languag imageri sexual attent advanc kind troll insult derogatori comment person polit attack public privat harass publish other privat inform physic email address without explicit permiss conduct could reason consid inappropri profession set enforc respons commun leader respons clarifi enforc standard accept behavior take appropri fair correct action respons behavior deem inappropri threaten offens harm commun leader right respons remov edit reject comment commit code wiki edit issu contribut align code conduct commun reason moder decis appropri scope code conduct appli within commun space also appli individu offici repres commun public space exampl repres commun includ use offici email address post via offici social media account act appoint repres onlin offlin event enforc instanc abus harass otherwis unaccept behavior may report commun leader respons enforc nkallima gmailcom complaint review investig promptli fairli commun leader oblig respect privaci secur report incid enforc guidelin commun leader follow commun impact guidelin determin consequ action deem violat code conduct correct commun impact use inappropri languag behavior deem unprofession unwelcom commun consequ privat written warn commun leader provid clariti around natur violat explan behavior inappropri public apolog may request warn commun impact violat singl incid seri action consequ warn consequ continu behavior interact peopl involv includ unsolicit interact enforc code conduct specifi period time includ avoid interact commun space well extern channel like social media violat term may lead temporari perman ban temporari ban commun impact seriou violat commun standard includ sustain inappropri behavior consequ temporari ban sort interact public commun commun specifi period time public privat interact peopl involv includ unsolicit interact enforc code conduct allow period violat term may lead perman ban perman ban commun impact demonstr pattern violat commun standard includ sustain inappropri behavior harass individu aggress toward disparag class individu consequ perman ban sort public interact within commun attribut code conduct adapt contributor covenanthomepag version avail httpswwwcontributorcovenantorgversioncode_of_conducthtml commun impact guidelin inspir mozilla code conduct enforc ladderhttpsgithubcommozilladivers homepag httpswwwcontributorcovenantorg answer common question code conduct see faq httpswwwcontributorcovenantorgfaq translat avail httpswwwcontributorcovenantorgtransl name bug report creat report help us improv titl bug label assigne code version version code machin architecturesetup describ setup ie machin architectur number coresprocessor etc compil report compil use compil sourc version describ bug clear concis descript bug reproduc step reproduc bug expect behavior clear concis descript expect happen screenshot applic add screenshot help explain problem addit context add context problem name featur request suggest idea project titl featur label enhanc assigne featur request relat problem pleas describ clear concis descript problem ex im alway frustrat describ solut youd like clear concis descript want happen describ altern youv consid clear concis descript altern solut featur youv consid addit context add context screenshot featur request