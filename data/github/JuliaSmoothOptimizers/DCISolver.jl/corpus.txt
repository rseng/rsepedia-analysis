dcisolv dynam control infeas solver document ci coverag releas doi docsstabledocsstableimgdocsstableurl docsdevdocsdevimgdocsdevurl buildcibuildciimgbuildciurl codecovcodecovimgcodecovurl releasereleaseimgreleaseurl doidoiimgdoiurl docsstableimg httpsimgshieldsiobadgedocsstablebluesvg docsstableurl httpsjuliasmoothoptimizersgithubiodcisolverjlst docsdevimg httpsimgshieldsiobadgedocsdevpurplesvg docsdevurl httpsjuliasmoothoptimizersgithubiodcisolverjldev buildciimg httpsgithubcomjuliasmoothoptimizersdcisolverjlworkflowscibadgesvgbranchmain buildciurl httpsgithubcomjuliasmoothoptimizersdcisolverjlact codecovimg httpscodecovioghjuliasmoothoptimizersdcisolverjlbranchmaingraphbadgesvg codecovurl httpscodecovioghjuliasmoothoptimizersdcisolverjl releaseimg httpsimgshieldsiogithubvreleasejuliasmoothoptimizersdcisolverjlsvgstyleflatsquar releaseurl httpsgithubcomjuliasmoothoptimizersdcisolverjlreleas doiimg httpsjosstheojorgpapersjossstatussvg doiurl httpsdoiorgjoss dci solver equalityconstrain nonlinear problem ie optim problem form min fx st cx use juliasmoothoptim packag develop particular nlpmodelsjlhttpsgithubcomjuliasmoothoptimizersnlpmodelsjl use defin problem solvercorehttpsgithubcomjuliasmoothoptimizerssolvercorejl output use ldlfactorizationsjlhttpsgithubcomjuliasmoothoptimizersldlfactorizationsjl default comput factor tangent step follow hsljlhttpsgithubcomjuliasmoothoptimizershsljl instal altern feasibl step factorizationfre use iter method krylovjlhttpsgithubcomjuliasmoothoptimizerskrylovjl refer bielschowski r h gome f dynam control infeas equal constrain optim siam journal optim shttpsdoiorg cite use dcisolverjl work pleas cite use format given citationbibhttpsgithubcomjuliasmoothoptimizersdcisolverjlblobmaincitationbib instal ldlfactorizationsjlhttpsgithubcomjuliasmoothoptimizersldlfactorizationsjl use default follow hsljlhttpsgithubcomjuliasmoothoptimizershsljl instal altern pkg add dcisolv exampl julia use dcisolv adnlpmodel rosenbrock nlp adnlpmodelx x x x stat dcinlp constrain nlp adnlpmodelx x x x xx x stat dcinlp bug report discuss think found bug feel free open issuehttpsgithubcomjuliasmoothoptimizersdcisolverjlissu focus suggest request also open issu open pull request start issu discuss topic pleas want ask question suit bug report feel free start discuss herehttpsgithubcomjuliasmoothoptimizersorganizationdiscuss forum gener discuss repositori juliasmoothoptimizershttpsgithubcomjuliasmoothoptim question packag welcom refer content content page referencemd index index page referencemd autodoc modul dcisolv advancedusag dci content content page finetunedcimd main function export packag function dci whose basic usag illustr previous also possibl finetun paramet use implement two differ way exampl dcisolverjl export function dci dcinlp abstractnlpmodel dcinlp abstractnlpmodel x abstractvector dcinlp abstractnlpmodel meta metadci x abstractvector dcinlp abstractnlpmodel meta metadci workspac dciworkspac metadci structur handl paramet use algorithm dciworkspac prealloc memori use iter process therefor possibl either call dcinlp x kwarg keyword argument pass metadci constructor build instanc metadci directli exampl ex use adnlpmodel dcisolv nlp adnlpmodel x x x x xx x name rosenbrock x₁x₂ altern would stat dci nlp nlpmetax max_tim linear_solv ldlfact tr_compute_step tr_lsmr altern would exampl ex meta dcisolvermetadci nlpmetax nlpmetay max_tim linear_solv ldlfact tr_compute_step tr_lsmr stat dcinlp meta nlpmetax dciworkspac allow reus memori one would resolv problem dimens exampl ex workspac dcisolverdciworkspacenlp meta nlpmetax stat dcinlp meta workspac worspacex one chang initi guess resolv stat dcinlp meta workspac list possibl option find list main option dci toler problem use ϵ atol rtol dualnorm paramet type default descript atol abstractfloat e absolut toler rtol abstractfloat e rel toler ctol abstractfloat e feasibl toler unbounded_threshold abstractfloat e threshold problem unbound max_ev integ maximum number con obj evalu max_tim abstractfloat maximum number second max_it integ maximum number iter max_iter_normal_step integ typemaxint maximum number iter normal step comput lagrang multipli paramet type default descript comp_λ symbol cgl evalcomp_λ use comput lagrang multipli λ_struct comp_λ_cgl comp_λ_cglslengthx lengthi typeofx companion structur comp_λ tangent step paramet type default descript linear_solv symbol ldlfact solver factor option decrease_γ abstractfloat regular factor reduc γ possibl epst tangent step increase_γ abstractfloat regular factor γ possibl epst factor δmin abstractfloat epst regular factor smallest valu δ use regular tan_δ abstractfloat tangent step trustregion paramet initi trustregion radiu tan_η₁ abstractfloat e tangent step trustregion paramet decreas trustregion radiu aredpr η₁ tan_η₂ abstractfloat tangent step trustregion paramet increas trustregion radiu aredpr η₂ tan_σ₁ abstractfloat tangent step trustregion paramet decreas coeffici trustregion radiu tan_σ₂ abstractfloat tangent step trustregion paramet increas coeffici trustregion radiu tan_small_d abstractfloat epst tangent step trustregion paramet small increase_δtg abstractfloat tangent step trustregion paramet increas possibl epst δtg tangent step normal step paramet type default descript feas_step symbol feasibility_step normal step feas_η₁ abstractfloat e feasibl step decreas trustregion radiu aredpr η₁ feas_η₂ abstractfloat feasibl step increas trustregion radiu aredpr η₂ feas_σ₁ abstractfloat feasibl step decreas coeffici trustregion radiu feas_σ₂ abstractfloat feasibl step increas coeffici trustregion radiu feas_δ₀ abstractfloat feasibl step initi radiu feas_expected_decreas abstractfloat feasibl step bad step cz cx feas_expected_decreas bad_steps_lim integ feasibl step consecut bad step use second order step tr_compute_step symbol tr_lsmr comput direct feasibl step option tr_dogleg tr_compute_step_struct uniontr_lsmr_struct tr_dogleg_struct tr_lsmr_structlengthx lengthi typeofx comput direct feasibl step option tr_dogleg_structlengthx lengthi typeofx paramet updat ρ redefin function compute_ρ paramet type default descript compρ_p abstractfloat updat ρ ρ maxminngp p ρmax ϵ compρ_p abstractfloat updat ρ ρ primalnorm p suffici feasibl ρbar abstractfloat radiu larger cylind ρbar ρ comput ρ also modifi import compute_ρdualnorm primalnorm normfx ρmax ϵ iter metametadci dcisolv dynam control infeas solver dci solver equalityconstrain nonlinear problem ie optim problem form math min_x fx quad textst quad cx base paper bielschowski r h gome f dynam control infeas equal constrain optim siam journal optim shttpsdoiorg dcisolv juliasmoothoptimizerscompli solver take abstractnlpmodelhttpsgithubcomjuliasmoothoptimizersnlpmodelsjl input return genericexecutionstatshttpsgithubcomjuliasmoothoptimizerssolvercorejlblobfcffcacdddddbbbsrcstatsjl refer juliasmoothoptimizersgithubiohttpsjuliasmoothoptimizersgithubio tutori nlpmodel api framework allow usag model ampl use amplnlreaderjlhttpsgithubcomjuliasmoothoptimizersamplnlreaderjl cutest use cutestjlhttpsgithubcomjuliasmoothoptimizerscutestjl jump use nlpmodelsjumpjlhttpsgithubcomjuliasmoothoptimizersnlpmodelsjumpjl pdeconstrain optim problem use pdenlpmodelsjlhttpsgithubcomjuliasmoothoptimizerspdenlpmodelsjl model defin automat differenti use adnlpmodelsjlhttpsgithubcomjuliasmoothoptimizersadnlpmodelsjl instal dcisolv regist packag instal packag open julia repl ie execut julia binari type enter packag mode instal dcisolv follow add dcisolv dci algorithm iter method flavor project gradient algorithm could character relax feasibl point method dynam control infeas combin two step tangent step feasibl step use ldlfactorizationsjlhttpsgithubcomjuliasmoothoptimizersldlfactorizationsjl default comput factor tangent step follow hsljlhttpsgithubcomjuliasmoothoptimizershsljl instal altern feasibl step factorizationfre use iter method krylovjlhttpsgithubcomjuliasmoothoptimizerskrylovjl exampl consid exampl miniz rosenbrock function equal constraint math min_x x₂ x₁²² x₁ ² quad textst quad x₁x₂ problem model use adnlpmodelsjl default initi point solv use dci exampl use dcisolv adnlpmodel log nlp adnlpmodel x x x x x x x name rosenbrock x₁x₂ stat with_loggernulllogg dcinlp end printlnstat bug report discuss think found bug feel free open issuehttpsgithubcomjuliasmoothoptimizersdcisolverjlissu focus suggest request also open issu open pull request start issu discuss topic pleas want ask question suit bug report feel free start discuss herehttpsgithubcomjuliasmoothoptimizersorganizationdiscuss forum gener discuss repositori juliasmoothoptimizershttpsgithubcomjuliasmoothoptim question packag welcom benchmark cutest benchmark jsocompli solver dci run solver set problem explor result compar jsocompli solver use special benchmark tool follow tutori solverbenchmarkjlhttpsjuliasmoothoptimizersgithubiosolverbenchmarkjlvtutori run benchmark jsocompli solver exampl ex use cutest test implement dci use packag cutestjlhttpsgithubcomjuliasmoothoptimizerscutestjl implement cutestmodel instanc abstractnlpmodel exampl ex use solverbenchmark let us select equalityconstrain problem cutest maximum variabl constraint remov problem fix variabl exampl constant object infeas residu exampl ex _pname cutestselect max_var min_con max_con only_free_var true only_equ_con true objtyp remov problem end ne ipopt handl pnamesn _pnamesfindallxoccursinrneb x _pname pname setdiff_pnam pnamesn cutest_problem cutestmodelp p pname lengthcutest_problem number problem compar dcisolv ipopthttpslinkspringercomarticlesi wächter biegler l implement interiorpoint filter linesearch algorithm largescal nonlinear program mathemat program via nlpmodelsipoptjlhttpsgithubcomjuliasmoothoptimizersnlpmodelsipoptjl thin wrapper dcisolv subset cutest problem exampl ex use dcisolv nlpmodelsipopt make stop condit compar set ipopt paramet dual_inf_tolinf constr_viol_tolinf compl_inf_tolinf disabl addit stop condit relat toler acceptable_it disabl search accept point exampl ex time limit solver max_tim minut tol e solver dict ipopt nlp ipopt nlp print_level dual_inf_tol inf constr_viol_tol inf compl_inf_tol inf acceptable_it max_cpu_tim max_tim x nlpmetax tol tol dcildl nlp dci nlp nlpmetax linear_solv ldlfact max_tim max_tim max_it typemaxint max_ev typemaxint atol tol ctol tol rtol tol stat bmark_solverssolv cutest_problem function bmark_solv return dict datafram detail inform execut output save data file exampl ex use jld save ipopt_dcildl_stringlengthpnamesjld stat result benchmark explor via tabl exampl ex pretty_statsstatsdcildl also use make perform profil exampl ex use plot gr legend dict neval_obj number f eval neval_con number c eval neval_grad number f eval neval_jac number c eval neval_jprod number cv eval neval_jtprod number cᵀv eval neval_hess number ²f eval elapsed_tim elaps time perf_titlecol perform profil cutest wrt stringlegendcol style soliddashdotdashdot auto solid dash dot dashdot dashdotdot function print_pp_columncolsymbol stat ϵ minimumminimumfilterx x df col df valuesstat first_orderdf dfstatu first_ord unboundeddf dfstatu unbound solveddf first_orderdf unboundeddf costdf maxdf col ϵ solveddf inf p performance_profil stat cost titleperf_titlecol legendbottomright linestylesstyl end print_pp_columnelapsed_tim stat respect time exampl ex print_pp_columnneval_jac stat respect number jacobian evalu cutest benchmark knitro second part present result similar benchmark maximum variabl constraint problem includ solver knitrohttpslinkspringercomchapter_ byrd r h noced j waltz r k nitro integr packag nonlinear optim largescal nonlinear optim pp springer boston via nlpmodelsknitrojlhttpsgithubcomjuliasmoothoptimizersnlpmodelsknitrojl script includ benchmarkscript_knitrojlhttpsgithubcomjuliasmoothoptimizersdcisolverjlbenchmarkscript_knitrojl report perform profil respect elaps time solv problem sum evalu object constrain function see benchmarkfiguresjlhttpsgithubcomjuliasmoothoptimizersdcisolverjlbenchmarkfiguresjl code gener profil wall assetsipopt_knitro_dcildl_png