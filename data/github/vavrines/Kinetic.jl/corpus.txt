div aligncent hkineticjlh img srchttpsipostimgccncxfgjxddancingcirclesgif altkinet logo width img versionhttpsjuliahubcomdocskineticversionsvghttpsjuliahubcomuipackageskineticwrvmu httpsimgshieldsiobadgedocslatestcornflowerbluehttpsxiaotianbaicomkineticjldev httpsimgshieldsiobadgedocsstablebluehttpsxiaotianbaicomkineticjlst statushttpsjosstheojorgpapersdefefcafcccdceastatussvgstyleflatsquarehttpsjosstheojorgpapersdefefcafcccdcea visit badgehttpsbadgespuflerdevvisitsvavrineskineticjlhttpsbadgespuflerdev div httpsimgshieldsiogithubvtagvavrineskineticjlinclude_prereleaseslabellatestversionlogogithubsortsemv httpsimgshieldsiobadgelicensemityellowsvg httpszenodoorgbadgesvgstyleflatsquar colprac contributor guid collabor practic commun packageshttpsimgshieldsiobadgecolpraccontributorsguideblueviolethttpsgithubcomscimlcolprac github commit sinc tag versionhttpsimgshieldsiogithubcommitssincevavrineskineticjlvsvgstylesociallogogithubhttpsgithubcomvavrineskineticjl div aligncent img srchttpsipostimgccncxfgjxddancingcirclesgif altkinet logo widthimg div kineticjl img srchttpsipostimgccncxfgjxddancingcirclesgif width kinet lightweight juliahttpsjulialangorg toolbox studi comput fluid dynam main modul split portabl compon kitbasejlhttpsgithubcomvavrineskitbasejl basic physic numer scheme kitmljlhttpsgithubcomvavrineskitmljl neural dynam machin learn method kitfortjlhttpsgithubcomvavrineskitfortjl altern highperform fortran backend option modul altern fortran backend manual import current ecosystem ultim execut effici pursu python wrapper kineticpyhttpsgithubcomvavrineskineticpi built well call struct method pyjuliahttpsgithubcomjuliapypyjulia kinetichttpsgithubcomvavrineskineticjl kitbasehttpsgithubcomvavrineskitbasejl kitmlhttpsgithubcomvavrineskitmljl kitforthttpsgithubcomvavrineskitfortjl cihttpsimgshieldsiogithubworkflowstatusvavrineskineticjlcistyleflatsquar cihttpsimgshieldsiogithubworkflowstatusvavrineskitbasejlcistyleflatsquar cihttpsimgshieldsiogithubworkflowstatusvavrineskitmljlcistyleflatsquar cihttpsimgshieldsiogithubworkflowstatusvavrineskitfortjlcistyleflatsquar codecovhttpsimgshieldsiocodecovcgithubvavrineskineticjlstyleflatsquarehttpscodecovioghvavrineskineticjl codecovhttpsimgshieldsiocodecovcgithubvavrineskitbasejlstyleflatsquarehttpscodecovioghvavrineskitbasejl codecovhttpsimgshieldsiocodecovcgithubvavrineskitmljlstyleflatsquarehttpscodecovioghvavrineskitmljl codecovhttpsimgshieldsiocodecovcgithubvavrineskitfortjlstyleflatsquarehttpscodecovioghvavrineskitfortjl instal kineticjl regist packag offici julia packag registryhttpsgithubcomjuliaregistriesgener recommend instal julia packag manag julia repl get packag manag press add packag julia julia v pkg add kinet automat instal current stabl releas depend similarli previous instal version updat latest tag releas julia v pkg updat kinet physic kineticjl focus theoret numer studi manyparticl system gase photon plasma neutron etc employ finit volum method fvm conduct dimension numer simul cpu gpu advectiondiffusiontyp equat solv within framework special attent paid hilbert sixth problem ie build numer passag kinet theori gase eg boltzmann equat continuum mechan eg euler navierstok equat partial list current support model equat includ boltzmann equat radi transfer equat fokkerplancklandau equat direct simul mont carlo advectiondiffus equat burger equat euler equat navierstok equat magnetohydrodynam equat maxwel equat document detail inform implement usag packag check documentationhttpsxiaotianbaicomkineticjldev cite benefit kineticjl research teach activ would happi could mention cite articlexiao doi joss url httpsdoiorgjoss year publish open journal volum number page author tianbai xiao titl kineticjl portabl finit volum toolbox scientif neural comput journal journal open sourc softwar contribut question regard kineticjl got idea improv pleas feel free get touch open issu pull request youd like work new featur even your new opensourc want find cool littl project issu work fit interest happi help along way known issu fft doesnt work well offset array titl kineticjl portabl finit volum toolbox scientif neural comput tag kinet theori comput fluid dynam scientif machin learn julia author name tianbai xiao orcid affili affili name karlsruh institut technolog karlsruh germani index date januari bibliographi paperbib summari kineticjl lightweight finit volum toolbox written julia program languag studi comput physic scientif machin learn opensourc project host github distribut mit licens main modul consist kitbasejl basic physic kitmljl neural dynam function librari provid rich set numer flux sourc term differenti integr equat advectiondiffus type mechan neural equat set solv within framework machin learn method seamlessli integr build datadriven closur model acceler calcul nonlinear term packag design balanc program flexibl scientif research algorithm effici applic simplic educ usag statement need physic system perform wonder divers set act differ characterist scale challeng propos univers theori appli describ multiscal physic evolut quantit exampl particl transport depict statist fluid mechan macroscop level batchelor need follow detail kinet theori gase molecular mean free path scale chapman rapidli advanc comput power finit volum method fvm provid preval method conduct direct numer simul base first physic principl exist fvm librari eg openfoam jasak dedic solv euler navierstok equat limit work done phasefield model zhu kraus sinc classic fluid dynam basic requir oneshot simul process initi final solut field librari mostli written compil languag cc fortran approach enjoy good execut effici sacrific flexibl secondari develop make cumbersom integr exist numer solver scientif machin learn sciml packag interact program becom mainstream practic data scienc also caus consider difficulti gener educ user familiar packag configur environ compil binari one compromis made use combin static dynam languag clawpack highlevel frontend lowlevel comput backend split methodolog benefit gener user research still need work backend new featur requir socal twolanguag problem introduc addit tradeoff develop execut exampl twotier system bring unavoid challeng type domain transit memori manag special attent need paid optim highlevel code eg vector massiv comput part unnatur physic simul might gener addit temporari object addit interfac layer may add signific overhead make wholeprogram optim much difficult bezanson unlik packag kineticjl built upon julia program languag bezanson dynam type design high perform comput broad rang devic base type infer multipl dispatch promis choic solv twolanguag problem kineticjl focus theoret numer studi manyparticl system gase photon plasma neutron etc xiao xiaoa hierarchi abstract implement librari highest level feasibl model simul fluid dynam problem within ten line code lowest level design method gener number array possibl cooper exist packag julia ecosystem exampl fluxjl flux use creat train scientif machin learn model innov packag julia stack encount twolanguag problem comprehens support kinet theori phasespac equat lightweight design ensur flexibl secondari develop close coupl scientif machin learn kitbasejl main modul kineticjl split two piec reduc justintim jit compil time domain specif applic basic physic law finit volum method implement kitbasejl provid varieti solver boltzmann equat maxwel equat advectiondiffus equat burger equat euler navierstok equat etc differ parallel comput techniqu provid eg multithread distribut comput cuda program follow present illustr exampl solv liddriven caviti problem boltzmann equat two initi method ie configur text julia script avail set solver configur file configtoml set toml setup matter ga materi case caviti case space dfv phase flux kfv flux function collis bgk intermolecular collis nspeci number speci interpord interpol order accuraci limit vanleer limit function boundari maxwel boundari condit cfl cfl number maxtim maxim simul time physic space x start point x x end point x nx number cell x start point end point ny number cell pmeshtyp uniform mesh type nxg number ghost cell x nyg number ghost cell veloc space umin start point u umax end point u nu number cell u vmin start point v vmax end point v nv number cell v vmeshtyp rectangl mesh type nug number ghost cell u nvg number ghost cell v ga properti knudsen knudsen number mach mach number prandtl prandtl number ink molecular inner degre freedom omega viscos index hardspher ga alpharef viscos index hardspher ga refer state omegaref viscos index hardspher ga ub refer state boundari condit ulid uveloc move wall vlid vveloc move wall tlid temperatur wall execut follow code julia use kinet set ctr xface yface initializeconfigtoml solveset ctr xface yface plot_contourset ctr code comput setup store set solut control volum repres array ctr xface yface record interfac flux along x direct exampl structur mesh gener automat kineticjl nonstructur mesh file also import use comput result visual builtin function plot_contour present distribut ga densiti veloc temperatur insid caviti fig cavitypng fig macroscop variabl liddriven caviti top left densiti top right uveloc bottom left vveloc bottom right temperatur kitmljl machin learn increas momentum scientif comput given nonlinear structur differenti integr equat promis incorpor univers function approxim machin learn surrog model govern equat achiev better balanc effici accuraci kitmljl implement strategi construct hybrid mechanicalneur differenti oper form structurepreserv datadriven closur model detail background found xiaob extens numer simul nonlinear model differenti equat essenti connect supercomput highperform comput hpc consid exist hardwar architectur eg sunway taihulight chinesedesign sw processor provid optim specif languag develop accompani packag kitfortjl default compon kineticjl manual import addit wrapper kineticpi built locat structur method python ecosystem acknowledg current work fund alexand von humboldt foundat refchnhfstp refer reconstruct doc reconstruct reconstruct solver interpol piecewis solut desir order accuraci reconstruct stencil base cell doc reconstruct reconstruct reconstruct reconstruct avail scheme doc vanleer minmod superbe vanalbaba weno guid contributor thank consid contribut kinet short guid give idea contribut help make contribut pleas feel free ask us question chat us time your unsur anyth tackl exist issu tri run kinet play around simul favorit fluid kinet physic run problem find difficult use understand pleas open issu write exampl tutori someth use kinet like set new physic configur improv document comment found someth hard use implement new featur need use kinet your interest work someth let us know comment exist issu open new issu make sure one els work issu help guid case anyth need know beforehand philosophi pull request consist logic collect chang includ multipl bug fix singl pull request relat unrel chang pleas submit multipl pull request commit chang file irrelev featur bugfix eg gitignor will accept critic work improv code dont want break user code care must taken introduc bug discuss pull request keep work believ weve done good job awar pull request review process immedi gener proport size pull request report bug easiest way get involv report issu encount use kinet request someth think miss head issu kitbasehttpsgithubcomvavrineskitbasejlissu kitmlhttpsgithubcomvavrineskitmljlissu page search see issu alreadi exist even solv previous inde new issu request click new issu button pleas specif possibl includ version code use well oper system run output julia versioninfo statu help includ possibl includ complet minim exampl code reproduc problem set develop environ instal juliahttpsjulialangorg system instal git system alreadi instal xcode command line tool mac git bash window login github account make fork kitbasehttpsgithubcomvavrineskitbasejl kitmlhttpsgithubcomvavrineskitmljl click fork button clone fork kinet repositori termin maclinux git shell gui window locat youd like keep git clone httpsgithubcomyourusernamekitbasejlgit httpsgithubcomyourusernamekitmljlgit navig folder termin anaconda prompt your window connect repositori upstream main project git remot add kitbas httpsgithubcomvavrineskitbasejlgit git remot add kitml httpsgithubcomvavrineskitmljlgit creat develop environ open julia via julia project type instanti instal depend projecttoml file test make sure kinet work type test run test take develop environ readi pull request chang contribut made via github pull request master branch your done make chang commit chang made chri beam written guidehttpschrisbeamsiopostsgitcommit write good commit messag think chang readi merg main repositori push fork submit pull request httpsgithubcomvavrineskitbasejlcompar httpsgithubcomvavrineskitmljlcompar work first pull request learn video seri contribut open sourc project githubhttpseggheadiocourseshowtocontributetoanopensourceprojectongithub aaron meurer tutori git workflowhttpswwwasmeurercomgitworkflow guid contribut open sourcehttpsopensourceguidehowtocontribut document youv made awesom contribut time tell world use write document string realli import make sure other use function properli didnt write new function that fine sure document code touch still great shape uncommon find strang word clarif take care credit contributor guid base metpi contributor guidehttpsgithubcomunidatametpyblobmastercontributingmd oceananiganshttpsgithubcomclimaoceananigansjl illustr exampl thank brilliant express lowoverhead abstract julia provid differ level solut algorithm model simul advectiondiffus dynam highlevel solver abl solv complex physic line lowlevel api keep detail implement benefit secondari develop lowlevel method easi call python c follow present quick tutori illustr usag kinet exampl pleas refer exampl directori kineticjlhttpsgithubcomvavrineskineticjltreemasterexampl kitbasejlhttpsgithubcomvavrineskitbasejltreemainexampl kitmljlhttpsgithubcomvavrineskitmljltreemainexampl kitfort high perform comput numer simul nonlinear model differenti equat essenti connect supercomput highperform comput hpc perform supercomput softwar program commonli measur floatingpoint oper per second flop mileston astronomi research celestehttpsjuliacomputingcomcasestudiescelest julia enter petaflop club togeth cc fortran sinc julia experienc dramat rise hpc elsewher use julia organ kinet howev compar matur cc ecosystem equival execut effici isnt go happen time situat exist hardwar architectur eg sunway taihulighthttpsenwikipediaorgwikisunway_taihulight previou fastest supercomput tophttpswwwtoporg list built upon chinesedesign sw manycor bit risc processor specif optim julia therefor weve develop accompani packag kitfortjlhttpsgithubcomvavrineskitfortjl fortran code link julia syntax builtin ccall function default submodul kinet sinc believ julia code suffici gener user develop encount twolanguag problem howev manual import execut effici becom first prioriti execut julia julia v pkg add kitfort usingimport packag julia julia use kitfort updat latest tag releas packag manag execut julia v pkg updat kitfort math doc linspac heavisid fortsign mat_split central_diff central_diff upwind_diff upwind_diff unstruct_diff kitbaselgwt kitbaseextract_last kineticjl kinet portabl juliahttpsjulialangorg toolbox studi comput fluid dynam scientif machin learn default modul consist kitbasejlhttpsgithubcomvavrineskitbasejl basic physic kitmljlhttpsgithubcomvavrineskitmljl neural dynam highperform fortran librari kitfortjlhttpsgithubcomvavrineskitfortjl manual import ultim effici pursu besid wrapper kineticpyhttpsgithubcomvavrineskineticpi built locat data hierarchi method python scope applic kinet interest evolut manyparticl system eg gase photon plasma neutron electron etc base finit volum method fvm provid effici tool dimension theoret model numer simul conduct advectiondiffus type equat hook within framework special attent paid kinet theoryhttpsenwikipediaorgwikikinetic_theory_of_gas boltzmanntyp equat depict timespac evolut particl via ensembl averag mesoscop level partial list current support model equat follow linear boltzmann equat nonlinear boltzmann equat multicompon boltzmann equat fokkerplancklandau equat direct simul mont carlo advectiondiffus equat burger equat euler equat navierstok equat extend hydrodynam equat asymptot expans magnetohydrodynam equat maxwel equat design philosophi code hierarchi design intuit neat possibl dedic provid friendli interfac educ usag kinet theori rich function scientif research benefit brilliant express lowoverhead abstract provid julia program languagehttpsjulialangorg provid differ level api allow user focu physic cooper exist packag julia ecosystem new finit volum method proven approach simul conserv law compar exist opensourc softwar eg openfoamhttpsopenfoamorg suhttpssucodegithubio clawpackhttpswwwclawpackorg kinet hold novelti follow point julia stack encount twolanguag problem comprehens support kinet theori phasespac equat lightweight design ensur flexibl secondari develop close coupl scientif machin learn get help interest use kineticjl tri figur use pleas feel free get touch rais question open issu pull request question suggest solut multipl thread multithread comput built upon julia thread macro julia basethreadsthread end provid openmp type parallel iter space split among multipl task task parallel thread accord schedul polici barrier place end loop wait task finish execut kinet thread set front loop reconstruct evolut updat exampl evalu flux conduct follow julia inbound threadsthread idxidx flux_gk faceifw ctriw ctridx ctrisw ctriw ctridx ctrisw ksgasγ ksgask ksgasμᵣ ksgasω dt ctridx ctridx ctrisw ctrisw end automat make use multipl thread julia initi bash julia n besid thread finer dispatch made spawn macro julia basethreadsspawn creat run task avail thread wait task finish call wait result macro call fetch wait obtain return valu valu interpol spawn via copi valu directli construct underli closur allow user insert valu variabl isol aysnchron code chang variabl valu current task conduct lowlevel reconstruct flux step function instal instruct kinet regist julia packag offici entri recommend instal builtin julia packag manag automat instal current stabl tag releas julia repl add packag julia julia v pkg add kinet automat instal kinet depend need build packag manual also build depend remov mistak julia julia v pkg build kinet use import packag use load modul make export name avail direct use julia julia use kinet julia linspac element vectorfloat correspondingli import load modul name need access dot syntax julia julia import kinet julia kineticlinspac element vectorfloat kinet updat latest tag releas packag manag julia v pkg updat kinet tip use julia newer kinet match perfectli julia newer version instal older version julia locat incomplet function index type method index configur solver kinet organ data structur method gener conveni lowlevel method appli multidimension array directli provid set domainspecif struct handl multipl dispatch eleg way solver pend execut configur handl solverset abstractsolverset struct doc solverset contain six field set gener setup simul pspace physic space set vspace particl veloc space set ga properti simul substanc ib initi boundari condit outputfold file directori output result struct play key role solut algorithm benchmark provid benchmark ident perform variat julia fortran implement breviti direct make use dynam librari kitmodsohttpsgithubcomvavrineskitfortjltreemainsrcfortran ccall function julia compar effici comput numer flux benchmarktoolsjlhttpsgithubcomjuliacibenchmarktoolsjl julia use kinet benchmarktool begin u collect nu lengthu weight onesnu fw zero fh zerosnu fb zerosnu ink γ priml wl prim_conservepriml γ hl maxwellianu priml array bl hl shl zerosnu sbl zerosnu lenl primr wr prim_conserveprimr γ hr maxwellianu primr array br hr shr zerosnu sbr zerosnu lenr muref omega prandtl dt e end kfv btime ccall __kinetic_mod_flux_kfvs_fv kitmodso noth reffloat reffloat reffloat reffloat reffloat reffloat reffloat reffloat reffloat refint reffloat reffloat reffloat reffloat reffloat fw fh fb hl bl hr br u weight nu dt shl sbl shr sbr btime flux_kfvsfw fh fb hl bl hr br u weight dt shl sbl shr sbr ugk btime ccall __kinetic_mod_flux_ugks_fv kitmodso noth reffloat reffloat reffloat reffloat reffloat reffloat reffloat reffloat reffloat reffloat reffloat refint reffloat reffloat reffloat reffloat reffloat reffloat reffloat reffloat reffloat reffloat reffloat reffloat fw fh fb wl hl bl wr hr br u weight nu ink γ muref omega prandtl dt lenl lenr shl sbl shr sbr btime flux_ugksfw fh fb wl hl bl wr hr br u weight ink γ muref omega prandtl dt lenl lenr shl sbl shr sbr result intel nucibeh iu veloc point follow kineticjl kfv flux μs alloc kib ugk flux μs alloc kib kitfortjl kfv flux μs alloc byte ugk flux μs alloc kib present improv effici around advect diffus first exampl scalar advectiondiffus equat one dimension problem spatial domain x let first configur solver setup julia use kinet plot set setup matter scalar materi case advect test case space dfv phase space flux gk flux collis collis scalar conserv law none interpord interpol order boundari period boundari condit cfl cfl maxtim simul time gener comput mesh sinc solv macroscop transport equat phase space set noth julia ps pspace vs noth defin physic properti materi advectiondiffus equat two field advect speed viscos respect julia properti scalar e sine wave use initi condit julia ib ibx sinπ x properti breviti setup integr singl structur also alloc structur cellcent solut interfac flux julia ks solversetset ps vs properti ib ctr face init_fvmk solut algorithm process togeth visual julia dt kitbasetimestepk ctr nt kssetmaxtim dt int anim anim iter nt reconstructk ctr evolvek ctr face dt updatek ctr face dt plotk ctr xlabelx labelu ylim end gifanim advectiongif fp assetsadvectiongif physic space struct set abstractphysicalspac defin geometr setup simul structur topolog struct dimension physic space built doc pspace pspace contain x locat start point x locat end point nx ny number cell one direct x locat middl point cell dx dy interv cell point besid unstrctur mesh struct built support dimension geometri doc unstructpspac creat builtin mesh reader doc read_mesh finit volum data finit volum method data store separ throughout cell therefor provid abstractcontrolvolum abstractinterfac struct process incel edg inform use array struct ao numer simul consid onedimension physic space x provid follow control volum struct struct differ number particl distribut function doc controlvolum controlvolumedf controlvolumedf controlvolumedf controlvolumedf within cell differ number particl distribut function track interfac data store correspondingli doc interfac interfacedf interfacedf interfacedf interfacedf control volum struct implement well doc controlvolum controlvolumedf controlvolumedf controlvolumedf numer flux evalu abstractinterfac struct doc interfac interfacedf interfacedf liddriven caviti show liddriven caviti four dimension problem two physic domain xy anoth particl veloc domain uv similarli prepar configur file setup matter ga case caviti space dfv flux kfv collis bgk nspeci interpord limit vanleer boundari maxwel cfl maxtim phase space x x nx ny pmeshtyp uniform nxg nyg veloc space umin umax nu vmin vmax nv vmeshtyp rectangl nug nvg ga knudsen mach prandtl ink omega alpharef omegaref boundari ulid vlid tlid execut follow code conduct simul julia use kinet ks ctr afac afac initializeconfigtxt solvek ctr afac afac highlevel solver solv equival follow lowlevel procedur julia use progressmet re zero dt timestepk ctr nt floorkssetmaxtim dt int showprogress iter nt reconstructk ctr evolvek ctr afac afac dt mode symbolkssetflux bc symbolkssetboundari updatek ctr afac afac dt re coll symbolkssetcollis bc symbolkssetboundari end expand lowerlevel backend julia lowerlevel backend showprogress iter nt horizont flux inbound threadsthread j kspspaceni kspspacenx kitbaseflux_kfv afacei jfw afacei jfh afacei jfb ctri jh ctri jb ctri jh ctri jb ksvspaceu ksvspacev ksvspaceweight dt afacei jlen end end vertic flux vn ksvspacev vt ksvspaceu inbound threadsthread j kspspaceni kspspacenx kitbaseflux_kfv afacei jfw afacei jfh afacei jfb ctri jh ctri jb ctri jh ctri jb vn vt ksvspaceweight dt afacei jlen afacei jfw kitbaseglobal_frameafacei jfw end end boundari flux inbound threadsthread j kspspaceni kitbaseflux_boundary_maxwel afac jfw afac jfh afac jfb ksibbcl ctr jh ctr jb ksvspaceu ksvspacev ksvspaceweight ksgask dt ctr jdi kitbaseflux_boundary_maxwel afacekspspacenx jfw afacekspspacenx jfh afacekspspacenx jfb ksibbcr ctrkspspacenx jh ctrkspspacenx jb ksvspaceu ksvspacev ksvspaceweight ksgask dt ctrkspspacenx jdi end inbound threadsthread kspspacenx kitbaseflux_boundary_maxwel afacei fw afacei fh afacei fb ksibbcd ctri h ctri b vn vt ksvspaceweight ksgask dt ctri dx afacei fw kitbaseglobal_frameafacei fw kitbaseflux_boundary_maxwel afacei kspspacenyfw afacei kspspacenyfh afacei kspspacenyfb ctri kspspacenyh ctri kspspacenyb vn vt ksvspaceweight ksgask dt ctri kspspacenydi afacei kspspacenyfw kitbaseglobal_fram afacei kspspacenyfw end updat inbound j kspspaceni kspspacenx kitbasestep ctri jw ctri jprim ctri jh ctri jb afacei jfw afacei jfh afacei jfb afacei jfw afacei jfh afacei jfb afacei jfw afacei jfh afacei jfb afacei jfw afacei jfh afacei jfb ksvspaceu ksvspacev ksvspaceweight ksgask ksgasγ ksgasμᵣ ksgasω ksgaspr ctri jdx ctri jdi dt zero zero bgk end end end result visual builtin function plot_contour present contour ga densiti uveloc vveloc temperatur insid caviti julia kitbaseplot_contourk ctr assetscavitypng equival follow lowlevel backend julia begin use plot sol zero kspspacenx kspspaceni axessol j axessol sol j ctri jprim sol j ctri jprim end end contourfkspspacexkspspacenx kspspacey kspspaceni sol end phase space doc newton_cot legendre_quadratur octa_quadratur quadrature_weight shock tube problem use boltzmann equat solv shock tube problem ga dynam two dimension problem one physic domain x anoth particl veloc domain u first let us prepar configur file case matter ga case sod space dfv nspeci flux kfv collis bgk interpord limit vanleer boundari fix cfl maxtim physic space x x nx pmeshtyp uniform nxg veloc space vmeshtyp rectangl umin umax nu nug ga knudsen mach prandtl ink omega alpharef omegaref configur file understood follow simul case standard sod shock tube phase space physic veloc space creat two particl distribut function insid numer flux function kinet flux vector split method collis term use bgk relax reconstruct step employ van leer limit creat ndorder interpol two boundari fix dirichlet boundari condit timestep determin cfl number maximum simul time physic space span uniform cell veloc space span uniform cell refer knudsen number set e refer mach number absent refer prandtl number ga molecul contain two intern degre freedom viscos evalu follow formula math mu mu_ref leftfractt_refrightomega math mu_reffracalphaalpha sqrtpi alpha omega omega kn_ref configur file directli gener variabl runtim via metaprogram julia store text format txt toml cfg etc exampl configtxt creat execut follow code conduct simul julia use kinet set ctr face initializeconfigtxt solveset ctr face comput setup store set control volum solut store ctr face highlevel solver solv equival follow lowlevel procedur julia dt timestepk ctr nt intfloorkssetmaxtim dt re zero iter nt reconstructk ctr evolvek ctr face dt updatek ctr face dt re end result visual builtin function plot_lin present profil ga densiti veloc temperatur insid tube julia plot_lineset ctr assetssodpng updat updat solver calcul variabl n step base numer flux incel collis doc updat current solver support differ collis model exampl bgk bgk relax model shakhov shakhov relax model boltzmann boltzmann origin boltzmann collis integr boundari condit vari fix fix dirichlet boundari period period boundari extra extrapol maxwel maxwel diffus boundari current solver adopt implicitexplicit imex uniformli multistep time integr use conjunct method line differentialequationsjlhttpsgithubcomscimldifferentialequationsjl doc read_dict configur doc ib_rh ib_sod ib_briowu ib_cav gener framework kinet employ finit volum method fvm model simul gener solut algorithm conclud follow explicit implicit method implement assetssolver_processpng highlevel solver function doc solv detail solut procedur conclud follow preprocess timestep calcul reconstruct evolut updat postprocess initi boundari condit struct ib abstractcondit defin initi boundari condit simul contain valu conserv primit variabl particl distribut function left right domain initi boundari condit set way easili deal discontinu initi condit doc ib ibf ibf ibf ibf kitml scientif machin learn machin learn build momentum scientif comput given nonlinear structur differenti integr equat promis incorpor univers function approxim machin learn model govern equat achiev balanc effici accuraci kitml design scientif machin learn toolbox devot fuse mechan neural model exampl boltzmann collis oper divid combin relax model neural network ie socal univers boltzmann equat math fracdfdt int_mathcalr int_mathc mathcalbco beta gleftfleftmathbfuprimeright fleftmathbfu_primerightfmathbfu fleftmathbfu_rightright mathbfomega mathbfu_ simeq numathcalmfmathrmnn_thetamathcalmf ube follow benefit first automat ensur asymptot limit let consid chapmanenskog method solv boltzmann equat distribut function approxim expans seri math f simeq fffcdot quad fmathcalm take zeroth order truncat consid illustr multilay perceptron math mathrmnn_thetaxoperatornamelayer_nleftldot text layer _leftsigmalefttext layer _xrightrightright quad operatornamelayerxw x given zero input f contribut collis term absent moment equat natur lead euler equat math fracpartialparti tleftbeginarrayc rho rho mathbfu rho e endarrayrightnabla_mathbfx cdotleftbeginarrayc rho mathbfu rho mathbfu otim mathbfu mathbfurho ep endarrayrightintleftbeginarrayc mathbfu frac mathbfu endarrayrightleftmathcalm_tmathbfu cdot nabla_mathbfx mathcalmright mathbfu kitml provid two function construct univers boltzmann equat work seamlessli modern ode solver differentialequationsjlhttpsgithubcomscimldifferentialequationsjl doc ube_dfdt ube_dfdt besid provid input convex neural network icnn develop amo et al neural network paramet constrain output network convex function input structur icnn shown follow allow effici infer via optim input network given other appli set includ structur predict data imput reinforc learn other import entropybas model sinc minim principl work exclus convex function assetsicnnpng doc icnnlay icnnchain besid also provid scientif machin learn train interfac io method consist fluxjlhttpsgithubcomfluxmlfluxjl diffeqfluxjlhttpsgithubcomscimldiffeqfluxjl ecosystem doc sci_train sci_train load_data save_model particl veloc space struct vspace abstractsetup defin particl veloc setup simul struct dimension particl veloc space built doc vspace vspace vspace contain u v w locat start point u v w locat end point nu nv nw number cell one direct u v w locat middl point cell du dv dw interv cell point weight quadratur weight numer integr note onedimension veloc space use handl dimension unstructur topolog well addit veloc space struct multicompon substanc implement doc mvspace mvspace mvspace simul case phasespac evolut involv vspace set noth directli julia vspace noth parallel comput julia support differ categori parallel program nativ asynchron task coroutin multithread distribut comput kinet integr latter two mechan along cudabas gpu comput initi function built kinet julia function __init__ np nworker nt threadsnthread nt np info kinet run np processor nt thread els info kinet run serial end has_cuda info kinet run cuda dev enumeratecudadevic info cudanamedev end info scalar oper disabl cuda cudaallowscalarfals end end packag import report comput resourc processor thread cuda devic go util univers boltzmann equat follow present univers differenti equat strategi construct neural network enhanc boltzmann equat complic fivefold integr oper replac combin relax neural model promis complet differenti structur thu neural ode type train comput becom possibl approach reduc comput cost three order magnitud preserv perfect accuraci detail theori implement found tianbai xiao martin frank use neural network acceler solut boltzmann equationhttpsarxivorgpdfpdf first load packag need set configur julia use ordinarydiffeq flux diffeqflux plot use kitbas kitml begin case homogen maxtim tlen u u nu nug v v nv nvg w w nw nwg vmeshtyp rectangl nm knudsen ink alpha omega nh end dataset produc fast spectral method solv nonlinear boltzmann integr fast fourier transform julia begin tspan maxtim tran linspacetspan tspan tlen γ heat_capacity_ratioink vspace vspacedu u nu v v nv w w nw vmeshtyp f float π expvspaceu expvspaceu expvspacev expvspacew array prim conserve_primmoments_conservef vspaceu vspacev vspacew vspaceweight γ floatmaxwellianvspaceu vspacev vspacew prim array mu_ref ref_vhs_visknudsen alpha omega kn_bzm hs_boltz_knmu_ref τ mu_ref primend prim phi psi phipsi kernel_mod nm vspaceu vspacev vspacew vspacedu vspacedv vspacedw vspacenu vspacenv vspacenw alpha boltzmann prob odeproblemboltzmann_od f tspan kn_bzm nm phi psi phipsi data_boltz solveprob tsit saveat tran array bgk prob odeproblembgk_od f tspan τ data_bgk solveprob tsit saveat tran array data_boltz_d zerosfloat axesdata_boltz axesdata_boltz data_bgk_d zerosfloat axesdata_bgk axesdata_bgk j axesdata_boltz_d data_boltz_d j reduce_distributiondata_boltz j vspaceweight data_bgk_d j reduce_distributiondata_bgk j vspaceweight end f_d reduce_distributionf vspaceweight m_d reduce_distributionm vspaceweight x arrayfloatundef vspacenu axesx x f_d end arrayfloatundef vspacenu tlen axesi data_boltz_d end arrayfloatundef nu sizex axesm m_d end τ arrayfloatundef sizex axesτ τ τ end end defin neural network construct unifi model mechan neural part train conduct diffeqfluxjl adam optim julia begin model_univ diffeqfluxfastchain diffeqfluxfastdensenu nu nh tanh diffeqfluxfastdensenu nh nu p_model diffeqfluxinitial_paramsmodel_univ function dfdtf p df f τ model_univm f p end prob_ub odeproblemdfdt x tspan p_model function lossp sol_ub solveprob_ub midpoint u x p p saveat tran loss sumab arraysol_ub return loss end cb function p l displayl pushhi l return fals end end re diffeqfluxsciml_trainloss p_model adam cb cb maxit re diffeqfluxsciml_trainloss resminim adam cb cb maxit train hybrid boltzmann collis term could solv normal differenti equat desir solver consid midpoint rule exampl solut algorithm visual organ julia ube odeproblemkitmlube_dfdt f_d tspan m_d τ model_univ resminim sol solv ube midpoint u f_d p m_d τ model_univ resminim saveat tran plot vspaceu vspacenv vspacenw data_boltz_d lw label initi color gray xlabel u ylabel particl distribut plot vspaceu vspacenv vspacenw data_boltz_d lw label boltzmann color plot vspaceu vspacenv vspacenw data_bgk_d lw line dash label bgk color plot vspaceu vspacenv vspacenw m_d lw label maxwellian color scattervspaceu vspacenv vspacenw solu lw label ube color assetsubepng gpu comput thrive develop gpu provid altern choic scientif comput kinet enabl comput graphic architectur basi cudajlhttpsgithubcomjuliagpucudajl provid main program interfac work nvidia cuda gpu featur userfriendli array abstract compil write cuda kernel julia wrapper variou cuda librari follow present illustr test kinet flux vector split method evalu upwind flux boltzmann equat test conduct tesla k gpu nextjournalcomnextjournalcom first load modul cpubas comput julia import pkg pkgaddrevis pkgaddkitbas pkgaddcuda pkgaddbenchmarktool use revis cuda benchmarktool kitbas dt e priml primr u collect fl maxwellianu priml fr maxwellianu primr ff similarfl sfl zerofl sfr zerofr btime flux_kfvsff fl fr u dt sfl sfr benchmark result intel nucibeh desktop around μs alloc kib let turn gpu julia u collect cuarray fl maxwellianu priml fr maxwellianu primr ff similarfl sfl zerofl sfr zerofr btime flux_kfvsff fl fr u dt sfl sfr benchmark result around μs alloc kib seen due rel small input size gpu thread arent fulli occupi therefor cpu effici case let increas input vector size ie consid discret particl veloc point distribut function julia u collect fl maxwellianu priml fr maxwellianu primr ff similarfl sfl zerofl sfr zerofr btime flux_kfvsff fl fr u dt sfl sfr u collect cuarray fl maxwellianu priml fr maxwellianu primr ff similarfl sfl zerofl sfr zerofr btime flux_kfvsff fl fr u dt sfl sfr result becom around μs alloc kib cpu μs alloc kib gpu could increas comput size julia u collect fl maxwellianu priml fr maxwellianu primr ff similarfl sfl zerofl sfr zerofr btime flux_kfvsff fl fr u dt sfl sfr u collect cuarray fl maxwellianu priml fr maxwellianu primr ff similarfl sfl zerofl sfr zerofr btime flux_kfvsff fl fr u dt sfl sfr result becom around μs alloc mib cpu μs alloc kib gpu size comput gpu bring x effici increment evolut doc evolv evolut solver calcul interfac numer flux base two neighbor cell differ flux function use option model macroscop godunov lax roe hll wavepropag mesoscop upwind centralupwind gaskinet scheme avail flux solver list follow doc flux_lax flux_hll flux_ro flux_gk flux_gk flux_kfv flux_kcu flux_ugk flux_boundary_maxwel flux_boundary_specular flux_em flux_emx flux_emi refer bezanson j edelman karpinski shah v b julia fresh approach numer comput siam review chapman cowl g burnett mathemat theori nonuniform gase account kinet theori viscos thermal conduct diffus gase cambridg univers press landau ld lifshitz e fluid mechan london pergamon press blazek j comput fluid dynam principl applic butterworthheinemann xu k huang j c unifi gaskinet scheme continuum rarefi flow journal comput physic bird g molecular ga dynam direct simul ga flow molecular ga dynam direct simul ga flow xiao cai q xu k wellbalanc unifi gaskinet scheme multiscal flow transport gravit field journal comput physic xiao xu k cai q unifi gaskinet scheme multiscal multicompon flow transport appli mathemat mechan xiao liu c xu k cai q velocityspac adapt unifi ga kinet scheme continuum rarefi flow journal comput physic xiao frank use neural network acceler solut boltzmann equat arxiv amo b xu l kolter j z juli input convex neural network intern confer machin learn pp pmlr preprocess doc initi preprocess solver initi simul return solver set control volum interfac current time could new simul restart interrupt one new run txt cfg toml etc restart jld paramet set struct set abstractsetup defin gener setup simul doc setup contain matter fluid substanc case simul case name space n_ n_ f n_ v denot physic dimension number particl distribut function veloc dimension flux numer flux function name collis collis oper kinet equat nspeci number speci interpord order accuraci reconstruct limit limit function name boundari boundari condit cfl courantfriedrichslewi number determin time step maxtim maximum simul time postprocess postprocess solver handl simul data visual doc plot_lin plot_contour write_jld distribut comput distribut comput built upon julia distribut macro distribut modul julia use distribut distribut reduc var rang bodi end provid mpityp parallel leaner code size specifi rang partit local execut across worker case option reduc function specifi distribut perform local reduct worker final reduct call process without reduc function distribut execut asynchron ie spawn independ task avail worker return immedi without wait complet make wait complet prefix call sync like julia sync distribut var rang bodi end follow present exampl conduct distribut comput help julia sharedarray modul creat array share processor massiv comput made distributedarrayshttpsgithubcomjuliaparalleldistributedarraysjl first consid distribut comput julia use distribut sharedarray addproc everywher use kitbas begin var dictsymbolani varsmatt ga varscas sod varsspac dfv varsflux kfv varscollis bgk varsnspeci varsinterpord varslimit vanleer varsboundari fix varscfl varsmaxtim varsx varsx varsnx varspmeshtyp uniform varsnxg varsknudsen varsmach varsprandtl varsink varsomega varsalpharef varsomegaref end set kitbaseset_setupvar pspace kitbaseset_geometryvar vspace kitbaseset_velocityvar ga kitbaseset_propertyvar ib kitbaseset_ibvar set vspace ga folder __dir__ ks kitbasesolversetset pspace vspace ga ib folder dt kspspacedx kitbasesound_speedksibpriml ksgasγ nt floorkssetmaxtim dt int wp sharedarrayfloatkspspacenx initaazeroskspspacenx kspspacenx kspspacenx wpi ksibwl els wpi ksibwr end end fwp sharedarrayfloatkspspacenx initaazeroskspspacenx time iter nt sync distribut kspspacenx flux view fwpi kitbaseflux_gk flux wpi wpi ksgasγ ksgask ksgasμᵣ ksgasω dt kspspacedxi kspspacedxi end sync distribut kspspacenx j wpij fwpij fwpij kspspacedxi end end end benchmark result intel nucibeh desktop around second alloc mib gc time compar effici serial execut julia w zeroskspspacenx kspspacenx kspspacenx wi ksibwl els wi ksibwr end end fw zeroskspspacenx time iter nt kspspacenx flux view fwi kitbaseflux_gk flux wi wi ksgasγ ksgask ksgasμᵣ ksgasω dt kspspacedxi kspspacedxi end kspspacenx j wij fwij fwij kspspacedxi end end end result desktop around second alloc gib gc time grid cell use perform deviat expect signific call python maximum conveni wrapper kineticpyhttpsgithubcomvavrineskineticpi built locat method python use let start clone repositori chang directori bash git clone httpsgithubcomvavrineskineticpygit cd kineticpi next start python julia main modul instal initi python import kineticpi kineticpyinstal basic struct method store base modul import via python kineticpi import base exampl provid quick tutori kineticpi python kineticpi import base import numpi np u nplinspac veloc space prim_var nparray primit flow variabl basemaxwellianu prim_var comput maxwellian distribut mview array e e e e e e e e e e e e e e e e e e e e e e e e e e e timestep doc timestep timestep solver return time interv use upcom solut loop base current variabl physic space doc global_fram local_fram uniform_mesh meshgrid mesh_connectivity_d mesh_center_d mesh_area_d stepper doc kitbasestep basic physic microscop formul physic world show divers set behavior differ characterist scale consid molecular motion gase exampl finest scale manyparticl system newton second law depict particl motion via math mathbff mathbfa first order system read math fracd mathbf xdt mathbf v fracd mathbf vdt fracmathbf fm mathbf f extern forc particl mass intuit numer algorithm get numer particl board track trajectori typic exampl molecular dynamicshttpsenwikipediaorgwikimolecular_dynam go effici sinc e molecul per cubic meter normal atmospher thing get even complic count nbodi interact time method propos simplifi comput exampl direct simul mont carlohttpsenwikipediaorgwikidirect_simulation_monte_carlo employ certain molecular model conduct intermolecular collis stochast manner significantli reduc comput cost tradeoff artifici fluctuat mani realiz must simul success averag solut reduc error mesoscop formul altern strategi made ensembl averag coarsegrain model use provid bottomup view mean free path collis time scale molecul particl travel freeli time mild intermolecular collis dynam describ oper split approach ie kinet transport equat math fracparti fpartial mathbf v cdot nabla_mathbf x f mathbf cdot nabla_mathbf v f qf f denot probabl find particl certain locat phase space lefthand side equat model transport phenomena due inhomogen distribut particl extern forc field righthand side depict intermolecular collis differ collis model insert equat particl collid background materi one obtain linear boltzmann collis oper math qfint_mathbb r mathcal bmathbf v_ mathbf v left fmathbf v_fmathbf vright dmathbf v_ collis kernel mathcal b model strength collis differ veloc interact among particl consid collis oper becom nonlinear exampl twobodi collis result nonlinear boltzmann equat math qfint_mathbb r int_mathc mathcal bco beta mathbfvmathbfv_ left fmathbf vfmathbf v_fmathbf vfmathbf v_right dmathbf omega dmathbf v_ solv boltzmann equat discret phase space need introduc solut algorithm call discret ordin methodhttpsenwikipediaorgwikidiscrete_ordinates_method discret veloc method due complic fivefold integr nonlinear boltzmann collis oper sometim replac simplifi model discret veloc method eg relax model math qf nu mathcal f htheoremhttpsenwikipediaorgwikihtheorem learn isol system evolv direct entropi increment maxim entropi statu correspond wellknown maxwellian distribut math mathcal nleftfracmpi k trightdexp left fracmkt mathbf v mathbf v right k boltzmann constant mathbf v bulk veloc temperatur boltzmann dynam project onto lower dimension exampl onedimension veloc space formul highdimension particl distribut integr respect rest coordin math h_ int_inftyinfti int_inftyinfti f v dw h_ int_inftyinfti int_inftyinfti vw f dv dw h_ h_ call reduc distribut function form socal dfv system macroscop formul meanwhil enlarg model scale macroscop hydrodynam level accumul effect particl collis result equal local temperatur veloc moder nonequilibrium effect well describ viscou transport heat conduct mass diffus ie call transport phenomena largescal dynam present properti wave macroscop transport equat construct describ bulk behavior fluid typic exampl euler navierstok equat math fracparti mathbf wpartial nabla_mathbf x cdot mathbf f mathbf microscop particl transport macroscop fluid motion continu variat flow dynam pay special attent hilbert sixth problem ie build numer passag kinet theori gase continuum mechan burger could turn burger equat typic hyperbol conserv law discontinu solut emerg selfevolv system let consid initi configur advectiondiffus exampl julia use kinet plot set setup matter scalar materi case burger test case space dfv phase space flux gk flux collis collis scalar conserv law none interpord interpol order boundari period boundari condit cfl cfl maxtim simul time ps pspace vs noth properti scalar e ib ibx sinπ x properti ks solversetset ps vs properti ib ctr face init_fvmk solut algorithm process togeth visual julia dt kitbasetimestepk ctr nt kssetmaxtim dt int anim anim iter nt reconstructk ctr evolvek ctr face dt updatek ctr face dt plotk ctr xlabelx labelu ylim end gifanim burgersgif fp assetsburgersgif particl properti struct ga abstractproperti defin properti particl model current support follow model scalar gastyp molecul plasma doc scalar ga mixtur plasmad plasmad field denot exampl kn refer knudsen number refer mach number pr refer prandtl number k intern degre freedom molecul γ adiabat index ω viscos index αᵣ refer alpha viscos evalu ωᵣ refer omega viscos evalu μᵣ refer viscos mass particl np number particl viscos evalu follow hardspher model math mu mu_ref leftfractt_refrightomega math mu_reffracalphaalpha sqrtpi alpha omega omega kn_ref theori doc prim_conserv conserve_prim mixture_prim_conserv mixture_conserve_prim em_coeffici advection_flux burgers_flux euler_flux euler_jacobi gauss_moment mixture_gauss_mo moments_conserv mixture_moments_conserv pdf_slope mixture_pdf_slop moments_conserve_slop mixture_moments_conserve_slop discrete_mo stress heat_flux maxwellian mixture_maxwellian shakhov reduce_distribut full_distribut ref_vhs_vi vhs_collision_tim aap_hs_collision_tim aap_hs_prim aap_hs_diffeq shift_pdf hs_boltz_kn kernel_mod boltzmann_fft boltzmann_fft heat_capacity_ratio sound_spe