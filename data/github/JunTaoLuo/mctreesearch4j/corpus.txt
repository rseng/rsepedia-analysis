mctreesearchj statichttpsimgshieldsiostaticvlabeldocsmessagelatestcolorbluestyleflatsquar kotlinversionhttpskotlinversionawsicerockdevkotlinversiongroupcaaqtechnamemctreesearchj maven centralhttpsmavenbadgesherokuappcommavencentralcaaqtechmctreesearchjbadgesvgstyleplastichttpsmavenbadgesherokuappcommavencentralcaaqtechmctreesearchj doihttpszenodoorgbadgesvghttpszenodoorgbadgelatestdoi robust implement mont carlo tree search mct algorithm jvm object flexibl implement mont carlo tree search mct combin domain specif knowledg hybrid search algorithm power solut problem complex plan introduc mctreesearchj standard mct implement written standard jvm librari follow key design principl object orient program defin key class abstract allow mct librari flexibl adapt well defin markov decis process turnbas adversari game furthermor librari design modular extens util class inherit gener type standard custom algorithm definit demonstr design mct implement provid eas adapt uniqu heurist custom across vari markov decis process mdp domain addit implement reason perform accur standard mdp addit via implement mctreesearchj nuanc differ type mct algorithm discuss structur librari contain implement mct algorithm singl player adversari game project compil use gradl lib srcmainkotlin caaqtechmctreesearchj mdpkt nodekt solverkt statenodekt statefulsolverkt actionnodekt statelesssolverkt mct lib implement creat interfac implement markov decis process mdp class commun mct solver mct solver come two flavour statefulsolverkt statelesssolverkt statefulsolverkt record action histori state wherea statelesssolverkt record action taken infer state action taken defin mdp mdpkt defin interfac mdp run mct solver must extend mdpkt class jvm languag provid specif definit kotlin abstract class mdpstatetyp actiontyp abstract fun transitionst statetyp action actiontyp statetyp class method return legal state given current state statetyp action taken actiontyp abstract fun rewardpreviousst statetyp action actiontyp state statetyp doubl class method return reward doubl given state transit paramet abstract fun initialst statetyp return initi state mct statetyp abstract fun isterminalst statetyp boolean return boolean indic state termin abstract fun actionsst statetyp iterableactiontyp return iter legal action given current state exampl app folder repositori may see variou exampl game engin interfac mdp control run gradl exampl via gradl possibl run exampl directli via gradl simpli select list mdp game run list argument arg reversigam initi game reversi user ai complet user interfac reversiadversarialsim gener simul competit reversi ai pushyourlucksim initi mdp push luck produc polici singl state gridworld initi mdp produc polici state game gridworld game initi mdp produc polici state game game run task via gradl simpli run bash gradl run argsarg arg arg arg exampl string repres task run seper space exampl bash gradl run argsreversigam gridworld simpli run one exampl bash gradl run argsreversigam furthermor exampl mctreesearchj integr game connect exampl written scalahttpsgithubcomlarkzconnectscala compil core librari perform local compil core librari locat lib folder user must omit uploadarch step defin gradlebuild file sign jar artifcat via gpg key upload maven central repositori gpg key tie maven releas repositori intend local compil compil local jar without sign releas simpli run bash gradl clean build x uploadarch effect exclud upload maven step autom codebas allow user compil local jar test experiment complet releas maven repositori sign artifact pr main branch must submit review approv maven central jvm artifact avail directli via maven central repositori mctreesearchjhttpssearchmavenorgartifactcaaqtechmctreesearchj principl full compat jvm languag kotlin integr groovi groovi depend implement caaqtechmctreesearchj scala integr sbt sbt librarydepend seq caaqtech mctreesearchj cite mctreesearchj current cite framework pleas cite preprint articlemctreesearchj author liu larkin luo jun tao titl extens modular design implement mont carlo tree search jvm journal arxiv year url httpsarxivorgab contribut mctreesearchj love input want make contribut project easi transpar possibl whether report bug discuss current state code submit fix propos new featur becom maintain develop github use github host code track issu featur request well accept pull request code chang happen pull request pull request best way propos chang codebas activ welcom pull request fork repo creat branch main dev youv ad code test add test youv chang api updat document ensur test suit pass make sure code lint issu pull request dev branch code put trial period maven releas readi releas merg main branch report bug use github issueshttpsgithubcomaqtechcamctreesearchjissu use github issu track public bug report bug open new issu easi write bug report detail background sampl code examplehttpstackoverflowcomq good bug report here anoth exampl craig hockenberryhttpwwwopenradarm great app develop great bug report tend quick summari andor background step reproduc specif give sampl code expect would happen actual happen note possibl includ think might happen stuff tri didnt work licens contribut agre contribut licens mit licens short submit code chang submiss understood mit licensehttpchoosealicensecomlicensesmit cover project feel free contact maintain that concern use consist code style use standard kotlin code conventionshttpskotlinlangorgdocscodingconventionshtml continu support addit support question relat softwar may reach larkinaqtechca refer document adapt opensourc contribut guidelin briandkhttpsgistgithubcombriandkdebecdafaa titl mctreesearchj mont carlo tree search implement jvm tag java virtual machin mont carlo tree search markov decis process softwar design author name larkin liu orcid affili name jun tao luo orcid affili affili name univers toronto index name carnegi mellon univers index date august bibliographi paperbib summari introduc mctreesearchj mont carlo tree search mct implement written standard jvm java virtual machin librari follow key object orient program design principl modular extensibil implement mct provid power tool enabl discoveri approxim solut complex plan problem via rapid experiment mctreesearchj util class inherit gener type standard custom algorithm definit addit key class abstract design librari flexibl adapt welldefin markov decis process mdp turnbas adversari game furthermor mctreesearchj capabl custom across varieti mdp domain consequ enabl adopt mct heurist custom core librari eas statement need open sourc implement mont carlo tree search exist gain widespread adopt implement mct written java virtual machin jvm cc python yet mani provid easi access heurist implement extens modular state action space abstract cowl luca mctreesearchj aim build perform advantag compil languag famili jvm simultan extens modular therefor mani improv research experi could perform extend modifi capabl base softwar mctreesearchj design enabl research experi variou mct strategi standard function mct solver ensur reliabl experi reproduc solver compat common jvm runtim domain probabilist plan extens reproduc modular softwar packag exist solut space reinforc learn take inspir softwar librari acm acm tensorforc tensorforc notabl design concept librari function domain independ softwar librari gener solut varieti mdp mdp defin separ core librari commun via common interfac design concept also incorpor mctreesearchj within solut space mct probabilist determinist plan mont carlo tree search mont carlo tree search primarili make use determinist select action stochast simul estim reward function well defin markov decis process mdp mct tree search adapt ucb multiarm bandit strategi auer detail mab chang state action taken primarili focus optim explor explor new action versu exploit obtain reward known action mct extens optim explor vs exploit dynam state conting action taken action space present detail discuss liu mct algorithm distinctli divid phase select expans simul backpropag illustr fig reffigmctsdiagram select polici determinist select action play base previous expand state guid explor constant c expans phase state unexplor repres leaf node ad search tree subsequ simul phase simul stochast play final backpropag propag final reward either termin state node specifi depth limit back root node phase process repeat maximum number iter converg criteria establish mont carlo tree search key mechan brown labelfigmctsdiagrammctsdiagramvpngrawtru titl design principl mctreesearchj design follow three key design principl adapt adapt defin abil mdp domain easili integr mctreesearchj framework use provid class abstract implement seek simplifi adopt mct solut varieti domain jvm compat design librari fulli compat java virtual machin jvm consequ function jvm languag ie java scala kotlin etc extens design achiev high degre extens modular within framework extens defin abil key mechan reus redefin enhanc without sacrif interoper mctreesearchj serv framework standard develop mont carlo tree search develop research set simultan serv productionreadi softwar deploy mct jvm ecosystem mctreesearchj specif design extens standard modular standard key enabl scientist engin better reproduc result ai research furthermor reduc iter speed research novel algorithm ai domain abstract main abstract use defin mdp problem abstract class defin mdp abstract use gener type variabl method correspond specif behaviour discret mdp mctreesearchj use gener type statetyp actiontyp repres mdp state action respect abstract class five member must implement abstract class method defin function mdp mdp abstract use mct solver comput optim polici mdp interfac written jvm languag use kotlin scala paper scala implement liuconnect mdp abstract kotlin abstract class mdpstatetyp actiontyp abstract fun transitionstatetyp actiontyp statetyp abstract fun rewardstatetyp actiontyp statetyp doubl abstract fun initialst statetyp abstract fun isterminalstatetyp boolean abstract fun actionsstatetyp collectionactiontyp solver design mctreesearchj provid default implement known genericsolv altern statefulsolv abstract solver serv base class version defin set function solver implement must provid well set extens util similar mdp abstract solver use set type paramet provid strongli type method unifi simplifi solver implement programm free select data type data structur best defin state action repres mdp domain differ solver lie respect memori util abstract node type track state mct iter default genericsolv provid leaner implement action track explicit state store perman state track genericsolv dynam mdp transit must rerun travers search tree select order infer state statefulsolv keep explicit record visit state addit inform termin avail downstream action extra overhead store state explicitli mct node allow algorithm optim search use inform previous visit state particularli use determinist game recomput mdp transit necessari determin state agent take specif action result differ implement select step maintain ident implement expans simul backpropag softwar architecturesoftware_design_mctspngrawtru titl custom mctreesearchj maintain high degre modular exampl key mechan highlight fig reffigmctsdiagram rearrang allow scientist experi differ version mct furthermor intern function key mechan redefin complex meta heurist search algorithm implement add specif advantag solver specif mdp domain featur import give research flexibl design bespok mct algorithm respect research though default mct implement work well mani scenario situat knowledg specif problem domain appli improv mct perform improv mct heurist driven simul exploit domain knowledg improv solver perform demonstr reversi ai use heurist deriv guenther abl outperform basic mct implement contain mctreesearchj heurist program via extens point mctreesearchj solver implement key mechan alter augment heurist implement exampl introduc heuristicweight array array store domain specif rate everi posit reversi board repres desir posit board neg number repres like loss posit number repres like win repres fig reffigreversiheu valu taken consider travers simul tree heuristicweight array adjust propens explor posit agent base heurisitc belief desir posit alter mct simul phase overrid simul method creat new definit applic heuristicweight requir minor alter simul method illustr heurist implement exampl heurist implement exampl kotlin overrid fun simulatenod nodetyp doubl origin simul code whiletru val validact mdpactionscurrentst var bestactionscor intmin_valu begin heurist var bestact mutablelistofpoint action validact val score heuristicweightactionxactioni score bestactionscor bestactionscor score bestact mutablelistofact score bestactionscor bestactionsaddact val randomact bestactionsrandom end heurist val newstat mdptransitioncurrentst randomact origin simul code reversi heurist labelfigreversiheu reversiheupngrawtru titl result mct solver accur select optim solut continu compel agent explor optim subset state space reduc explor nonoptim subset state space provid quick exampl mdp domain gridworld detail liu cumul number visit correspond optim polici proport increas respect number mct iter wherea nonoptim solut cumul visit significantli lower solver avoid visit nonoptim state subspac converg visitsgw_visitspngrawtru titl real world applic mctreesearchj design run jvm therefor use research set jvm intend use alongsid either implement game core ai engin typic stateoftheart ai mct use combin deep learn algorithm mct drive explor hypothet game play order agent make better decis mct typic combin deep learn strategi achiev stateoftheart perform complex game whose solut typic intract via standard treesearch method exampl alphago silver mct combin two type neural network name valu network polici network achiev stateoftheart perform game go never achiev similarli area control theori mct act combin valu polici network produc state action space distribut shown impress perform probabilist plan selfdriv car demonstr tesla ai day event tesla util mct illustr accept mct standard repetoir probablisitc determinist plan need mct grow among industri research impetu creat mct softwar librari standard reliabl integr well gener softwar ecosystem jvm increas one key industri applic mctreesearchj fact jvm softwar allow integr legaci modern jvm softwar one key applic mobil game larg develop base android larg written kotlin within jvm mctreesearchj lightweight design guarante reliabl jvm compat test extens java java make prime candid robust ai turnbas game mobil devic futur contribut futur work mctreesearchj could potenti involv optim particularli memori consumpt algorithm addit speed improv improv via multithread parallel fulli support jvm fact mctreesearchj base jvm howev also serv downsid sinc java base program languag typic use research problem within ai combin jvm languag ad complex compar script languag python result mctreesearchj experienc slow adopt pure research set nevertheless key design principl mctreesearchj design could easili port anoth script base languag commonli found ai research name python mctreesearchj design serv foundat templat research mct jvm also serv reliabl import librari jvm applic implement mct conclus close mctreesearchj present framework enabl programm adapt mct solver varieti mdp domain import softwar applic main focu mctreesearchj furthermor mctreesearchj fulli compat jvm design decis made due excel support class structur gener variabl type kotlin jvm languag well support mobil applic yet importantli mctreesearchj modular extens key mechan mct broken programm abl inherit class member redefin andor reimplement certain section algorithm maintain high degre mct standard acknowledg research conduct without extern fund result conflict interest would like acknowledg maven central repositori provid import servic make jvm artifact access jvm project mctreesearchj avail mvnrepositorycomartifactcaaqtechmctreesearchjhttpsmvnrepositorycomartifactcaaqtechmctreesearchj refer