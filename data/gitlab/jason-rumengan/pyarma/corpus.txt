changelog v februari sizeonli constructor ie matrow col matsizex cuberow col slice cubesizeq initialis zero default convers numpi array requir data type ie numpi array integ convert pyarmadillo mat ad pyarma_rngset_seedvalu set_seed_random pyarma_rngset_seed_random linspacestart end n logspacestart end n take n unsign integ rangex renam spreadx prevent conflict python builtin rang function fix bug u h hessx return x well u h ad extra form lux qrx qr_econx qza b svd_econx fix bug cubesubcub threw typeerror ad pyarma_vers version inform ad randu randn zero one eye gener ad subscript size object remov excess newlin print matric cube remov excess newlin print librari solve_opts_typ fill_typ solve_optstyp filltyp ie solve_optsfast fillrandu intern type hidden fix bug clampucubeicub took wrong argument type v februari initi public releas adapt dens matric cube armadillo v intern develop releas pyarmadillo linear algebra librari python httpspyarmasourceforgeio copyright jason rumengan httpswwwjasonrumenganmyid copyright terri yue zhuo httpsterryyzgithubio copyright conrad sanderson httpsconradsandersonidau copyright data csiro pypi versionhttpsbadgefuryiopypyarmasvghttpsbadgefuryiopypyarma statushttpsjosstheojorgpaperseecdfebafdcstatussvghttpsjosstheojorgpaperseecdfebafdc build statushttpsciappveyorcomapiprojectsstatushlpvwuilnwhsvgtruehttpsciappveyorcomprojectjasonrumenganpyarma quick link download latest releasehttpspyarmasourceforgeio document function classeshttpspyarmasourceforgeiodocshtml bug report questionshttpspyarmasourceforgeiofaqhtml content introductionintroduct citat detailscitationdetail document examplesdocumentationandexampl instal via pipinstallationviapip instal sourceinstallationfromsourc distribut licensedistributionlicens bug report frequent ask questionsbugreportsandfrequentlyaskedquest introduct pyarmadillo streamlin linear algebra librari matrix math python languag emphasi eas use provid highlevel syntax function deliber similar matlab provid class matric cube integ float point complex element support reli armadillohttparmasourceforgenet underli c implement matrix object author jason rumengan httpswwwjasonrumenganmyid terri yue zhuo httpsterryyzgithubio conrad sanderson httpconradsandersonidau exampl program python pyarma import mat fillon b mat fillrandu c abt cprintc citat detail pleas cite follow paper use pyarmadillo research andor softwar citat use continu develop mainten librari jason rumengan terri yue zhuo conrad sanderson pyarmadillo streamlin linear algebra librari python journal open sourc softwar vol p httpsdoiorgjosshttpsdoiorgjoss document exampl document pyarmadillo function class avail httpspyarmasourceforgeiodocshtml document also docdocshtml file pyarmadillo archiv view web browser short exampl program name examplepi use pyarmadillo includ pyarmadillo archiv instal via pip precompil version pyarmadillo avail via python packag index pypi use follow command instal pip instal user pyarma pip instal pyarma pip found tri use follow altern python pip py pip upgrad pyarmadillo via pip pip instal upgrad user pyarma pip instal upgrad pyarma note possibl pip may erron find newest version case tri follow command pip instal nocachedir upgrad user pyarma pip instal nocachedir upgrad pyarma info pyarma packag pypi httpspypiorgprojectpyarma instal sourc preliminari instal pyarmadillo sourc requir least python minimum recommend version python c compil support least c standard least gb ram bit cpu prefer core openbla lapack compat implement linux base oper system eg fedora ubuntu cento red hat debian etc first instal openbla lapack python pip along correspond developmenthead file cento rhel cento powertool repositori may need enabl dnf configmanag seten powertool recommend packag instal instal pyarmadillo fedora cento rhel gccc libstdcdevel openblasdevel lapackdevel pythondevel pythonpip ubuntu debian g libopenblasdev liblapackdev pythondev pythonpip pip need updat pip instal user upgrad pip maco first instal xcode version later type follow command termin window xcodeselect instal xcode commandlin tool includ python develop file pip need updat pip instal user upgrad pip acceler framework use access bla lapack function window x first instal microsoft visual studio later use x nativ tool command prompt pyarmadillo contain precompil openblashttpsgithubcomxianyiopenblasreleas use access bla lapack function pip need updat py pip instal user upgrad pip altern implement andor distribut bla lapack avail httpsoftwareintelcomenusintelmkl httpiclcsutkedulapackforwindowslapack httpylzhaoblogspotcomaublaslapackprecompiledbinariesforhtml caveat bit window x current support run instal open termin window chang directori contain pyarmadillo sourc sourc obtain packag download sourceforg tar xf pyarmadillotarxz cd pyarmadillo chang match download version sourc obtain clone gitlab repo git clone httpsgitlabcomjasonrumenganpyarma cd pyarma execut follow command pip instal user note full stop charact end import see progress instal chang command pip instal verbos user pip found tri use follow altern python pip py pip instal may take minut due compil c sourc extens use templat metaprogram time taken depend number cpu core amount avail memori caveat system low memori lt gb parallel compil may fail due templat metaprogram requir larg amount memori avoid parallel compil first instal scikitbuild use pip instal user scikitbuild instal pyarmadillo use python setuppi instal j linktim optimis lto default lto reduc size pyarmadillo expens consider longer compil time enabl lto first instal scikitbuild ninja enabl pyarma_lto option instal pip instal user scikitbuild ninja python setuppi instal dpyarma_ltoon support intel mkl blaslapack implement pyarmadillo option use intel math kernel librari mkl highspe replac standard bla lapack intel mkl automat detect instal sourc blaslapack implement minor modif builtin armadillo sourc may requir specif extarmadilloincludearmadillo_bitsconfighpp may need edit ensur armadillo use integ size style function name use replac librari follow defin may need enabl disabl arma_blas_capit arma_blas_underscor arma_blas_long arma_blas_long_long see armadillohttparmasourceforgenet site inform httparmasourceforgenetfaqhtml httparmasourceforgenetdocshtmlconfig_hpp linuxbas system mkl might instal nonstandard locat opt caus problem link instal pyarmadillo system know mkl librari locat exampl optintelmkllibintel achiev set ld_library_path environ variabl perman solut ad directori locat etcldsoconf may also possibl store text file locat etcldsoconfd directori exampl etcldsoconfdmklconf etcldsoconf modifi etcldsoconfdmklconf creat sbinldconfig must run afterward exampl etcldsoconfdmklconf intel mkl instal optintel optintellibintel optintelmkllibintel mkl instal persist give problem link support mkl disabl edit extarmadillocmakeliststxt comment line contain includearma_findmkl delet extarmadillocmakecachetxt final rerun pyarmadillo instal distribut licens pyarmadillo open sourc softwar licens apach licens version licens copi licens includ licens file softwar incorpor distribut pyarmadillo sourc binari form must includ document andor materi provid softwar readabl copi attribut notic present notic file see licens detail content notic file inform purpos modifi licens bug report frequent ask question find bug librari document interest hear pleas make _small_ _selfcontained_ program expos bug send program sourc bug descript develop contact detail httpspyarmasourceforgeiocontacthtml inform pyarmadillo frequent ask question page httpspyarmasourceforgeiofaqhtml armadillo c librari linear algebra scientif comput httparmasourceforgenet copyright conrad sanderson httpconradsandersonidau copyright nation ict australia nicta copyright data csiro quick link download latest stabl releasehttparmasourceforgenetdownloadhtml document function classeshttparmasourceforgenetdocshtml bug report questionshttparmasourceforgenetfaqhtml content introductionintroduct citat detailscitationdetail distribut licensedistributionlicens compil extern dependenciescompilersandexternaldepend linux maco installationlinuxandmacosinstal linux maco compil linkinglinuxandmacoscompilingandlink window installationwindowsinstal window compil linkingwindowscompilingandlink support openbla intel mklsupportforopenblasandintelmkl support atlassupportforatla support openmpsupportforopenmp documentationdocument api stabil versioningapistabilityandvers bug report frequent ask questionsbugreportsandfrequentlyaskedquest mex interfac octavematlabmexinterfacetooctavematlab relat softwar use armadillorelatedsoftwareusingarmadillo introduct armadillo high qualiti c librari linear algebra scientif comput aim toward good balanc speed eas use use algorithm develop directli c andor quick convers research code product environ highlevel syntax function deliber similar matlab librari provid effici class vector matric cube well associ function cover essenti advanc function data process manipul matric variou matrix decomposit eigen svd qr etc provid integr lapack one high perform dropin replac eg openbla intel mkl appl acceler framework etc sophist express evalu via c templat metaprogram automat combin sever oper compil time increas speed effici librari use machin learn pattern recognit comput vision signal process bioinformat statist financ etc author conrad sanderson httpconradsandersonidau ryan curtin httpratmlorg citat detail pleas cite follow paper use armadillo research andor softwar citat use continu develop mainten librari conrad sanderson ryan curtin armadillo templatebas c librari linear algebra journal open sourc softwar vol pp conrad sanderson ryan curtin userfriendli hybrid spars matrix class c lectur note comput scienc lnc vol pp distribut licens armadillo use opensourc proprietari closedsourc softwar armadillo licens apach licens version licens copi licens includ licensetxt file softwar incorpor distribut armadillo sourc binari form must includ document andor materi provid softwar readabl copi attribut notic present noticetxt file see licens detail content noticetxt file inform purpos modifi licens compil extern depend armadillo x requir c compil support least c standard use armadillo compil support old cc standard function armadillo partli depend librari lapack bla prefer openbla arpack superlu lapack bla use dens matric arpack superlu use spars matric armadillo work without librari function reduc basic function avail eg matrix addit multipl oper like eigen decomposit matrix invers matrix multipl mainli big matric may fast armadillo templat librari recommend optimis enabl compil program use armadillo exampl gcc clang compil use linux maco instal step ensur c compil instal system maco system instal xcode version later type follow command termin window xcodeselect instal step ensur cmake tool instal system cmake download httpwwwcmakeorg prefer instal use packag manag system linuxbas system cmake instal use dnf yum apt aptitud maco system cmake instal macport homebrew step ensur openbla standard bla lapack instal system maco acceler framework use blaslapack maco option instal openbla better perform support spars matric requir also instal arpack superlu caveat superlu version use linuxbas system follow librari recommend present openbla lapack superlu arpack also necessari instal correspond develop file librari exampl instal libopenbla packag also instal libopenblasdev packag step run cmake instal open termin window chang directori creat unpack armadillo archiv simplest case run cmake use cmake note full stop separ cmake space import option cmake instal linux enabl detect flexibla use addit allow_flexiblas_linux option run cmake cmake dallow_flexiblas_linuxon maco enabl detect openbla use addit allow_openblas_maco option run cmake cmake dallow_openblas_macoson note depend instal openbla may masquerad standard bla detect standard bla lapack use allow_blas_lapack_maco option cmake dallow_blas_lapack_macoson default cmake assum armadillo librari correspond header file instal default system directori eg usr hierarchi linuxbas system instal librari header altern directori use addit option cmake_install_prefix form cmake dcmake_install_prefixpathalternative_directori cmake detect relev librari instal system eg openbla lapack superlu arpack etc modifi armadillo configur correspondingli cmake also gener armadillo runtim librari wrapper detect librari cmake need rerun good idea first delet cmakecachetxt file cmakeliststxt caveat armadillo instal nonsystem directori make sure c compil configur use lib includ subdirectori present within directori note lib directori might name differ system recent bit debian ubuntu system libx_linuxgnu recent bit fedora rhel system lib step access rootadministratorsuperus privileg ie abl use sudo didnt use cmake_install_prefix option type follow command sudo make instal dont rootadministratorsuperus privileg make sure use cmake_install_prefix option step type follow command make instal linux maco compil link instal armadillo via cmake instal use follow command g progcpp prog stdc larmadillo otherwis want use armadillo without instal ie without armadillo runtim librari use follow command g progcpp prog stdc homeblaharmadilloinclud darma_dont_use_wrapp lopenbla command assum armadillo archiv unpack homeblah command need adjust archiv unpack differ directori andor specif version armadillo ie need chang dont openbla linux chang lopenbla lbla llapack maco chang lopenbla framework acceler see question page info link httparmasourceforgenetfaqhtml exampl directori contain short exampl program use armadillo librari window instal instal compris step step copi entir includ folder conveni locat tell compil use locat header file addit locat use alreadi altern includ folder use directli step modifi includearmadillo_bitsconfighpp indic librari current avail system exampl lapack bla openbla arpack superlu present uncom follow line defin arma_use_lapack defin arma_use_bla defin arma_use_arpack defin arma_use_superlu support spars matric requir dont worri arpack superlu step configur compil link lapack bla option arpack superlu window compil link within exampl folder msvc project name example_win use compil examplecpp project need compil bit program activ solut platform must set x instead win msvc project test window bit visual studio c adapt may need made bit system later version window andor compil exampl option arma_blas_long arma_blas_underscor defin armadillo_bitsconfighpp may need either enabl disabl folder exampleslib_win contain copi lib dll file obtain precompil releas openbla httpsgithubcomxianyiopenblasreleasesdownloadvopenblasxzip compil done third parti use risk caveat high perform scientificengin workload strongli recommend use linux base oper system fedora httpfedoraprojectorg ubuntu httpwwwubuntucom cento httpcentosorg support openbla intel mkl armadillo use openbla intel math kernel librari mkl highspe replac bla lapack essenc involv link replac librari instead bla lapack minor modif includearmadillo_bitsconfighpp may requir ensur armadillo use integ size style function name use replac librari specif follow defin may need enabl disabl arma_use_wrapp arma_blas_capit arma_blas_underscor arma_blas_long arma_blas_long_long see document inform defin linuxbas system mkl might instal nonstandard locat opt caus problem link instal armadillo system know mkl librari locat exampl optintelmkllibintel achiev set ld_library_path environ variabl perman solut ad directori locat etcldsoconf may also possibl store text file locat etcldsoconfd directori exampl etcldsoconfdmklconf etcldsoconf modifi etcldsoconfdmklconf creat sbinldconfig must run afterward exampl etcldsoconfdmklconf intel mkl instal optintel optintellibintel optintelmkllibintel mkl instal persist give problem link support mkl disabl edit cmakeliststxt file delet cmakecachetxt rerun cmake base instal comment line contain includearma_findmkl support atla armadillo use atla librari faster version subset lapack bla function lapack still instal obtain full function caveat minimum recommend version atla earlier version produc incorrect result andor corrupt memori lead random crash support openmp armadillo use openmp automat speed comput expens elementwis function exp log co etc requir cc compil openmp support use gcc clang use follow option enabl c openmp stdc fopenmp document document armadillo function class avail httparmasourceforgenetdocshtml document also docshtml file folder view web browser api stabil version releas armadillo public api function class constant describ accompani api document docshtml specif releas releas armadillo full version specifi abc major version number b minor version number c patch level indic bug fix within major version eg minor version public api strongli strive backward compat sourc level public api preced minor version exampl user code written version work version etc howev later minor version may featur api extens preced minor version user code specif written version may work increas patch level major minor version retain indic modif code andor document aim fix bug without alter public api dont like chang exist public api strongli prefer break user softwar howev allow evolut reserv right alter public api futur major version armadillo remain backward compat mani case possibl eg major version may slightli differ public api major version caveat function class constant code _not_ explicitli describ public api document consid part underli intern implement detail may chang remov without notic word dont use intern function bug report frequent ask question armadillo gone extens test success use product environ howev almost softwar imposs guarante correct function find bug librari document interest hear pleas make _small_ _selfcontained_ program expos bug send program sourc bug descript develop small program must main function use functionsclass armadillo standard c librari librari contact detail httparmasourceforgenetcontacthtml inform armadillo frequent ask question page httparmasourceforgenetfaqhtml mex interfac octavematlab mex_interfac folder contain exampl interfac octavematlab c code use armadillo matric relat softwar use armadillo mlpack extens librari machin learn algorithm httpmlpackorg ensmallen c librari numer optimis method httpensmallenorg sigpack c signal process librari httpsigpacksourceforgenet rcpparmadillo integr armadillo r system environ httpdirkeddelbuettelcomcodercpparmadillohtml pyarmadillo linear algebra librari python httpspyarmasourceforgeio descript includ relev issu pr describ chang suggest changelog entri fill block expect restructuredtext entri delet entri need delet header rst block entri need collect via script rst upgrad guid need updat note thank interest project pleas refer follow section contribut code bug report report bug submit question bug report pleas take moment time ensur issu isnt alreadi discuss project document provid pybindreadthedocsorg issu tracker also check gitter see came assum identifi previous unknown problem import question essenti submit selfcontain minim piec code reproduc problem word extern depend isol function caus breakag submit match complet c python snippet easili compil run isol ideal make small pr fail test case use start point pull request contribut submit review accept use github pull request pleas refer articleus pull request detail adher follow rule make process smooth possibl make new branch everi featur your work make small clean pull request easi review make sure add valu add test new function run test suit cmake build build target pytest ensur exist featur break pleas run precommitprecommit check code match project style note gawk requir use precommit run allfil commit use installedmod check precommit doc verifi code pass push save time project strong focu provid gener solut use minim amount code thu small pull request greatli prefer licens contribut pybind provid bsdstyle licens found licens file use distribut contribut project agre term condit licens oblig whatsoev provid bug fix patch upgrad featur function perform sourc code enhanc anyon howev choos make enhanc avail either publicli directli author softwar without impos separ written licens agreement enhanc herebi grant follow licens nonexclus royaltyfre perpetu licens instal use modifi prepar deriv work incorpor comput softwar distribut sublicens enhanc deriv work thereof binari sourc code form develop pybind setup ideal develop environ run follow command system cmake bash python venv venv sourc venvbinactiv pip instal r testsrequirementstxt cmake b build ddownload_catchon ddownload_eigenon cmake build build j tip use virtualenv pypi instead venv python select name environ folder contain env ignor git dont cmake add cmake pip instal command use dpybind_findpythonon use findpython cmake classic mode may need set dpython_executablepathtopython findpython use dpython_root_dirpathto dpython_executablepathtopython configur option cmake configur option given option store build directori cmakecachetxt file rememb build directori two select special gener given g compil select base environ variabl cxx similar dcmake_cxx_compil unlik other chang initi run valid option dcmake_build_typ releas debug minsizerel relwithdebinfo dpybind_findpythonon use cmake findpython instead classic deprec custom findpythonlib dpybind_nopythonon disabl python search disabl test dbuild_testingon enabl test ddownload_catchon download catch build c test download_eigenon download eigen numpi test dpybind_installonoff enabl instal target default master project duse_python_install_diron tri instal python dir detailssummarya standard cmake trick click expandsummaryp use cmake build build v see command use build file use cmake build lh list cmake option help use ccmake avail see curs termin gui cmakegui complet graphic interfac present pypi packag use cmake build build j build core exampl use g name gener use someth differ cmake help list gener avail unix set cmake_generaterninja environ give automat mulithread cmake project open cmakeliststxt qtcreator gener ide use dcmake_export_compile_commandson gener json file tool expect pdetail run test build check target bash cmake build build target check target spell cmake also run individu test target pytest python test use pytesthttpsdocspytestorgenst framework cpptest c test test_cmake_build instal subdirectori test want build subset test use dpybind_test_overridetest_callbackscpptest_picklingcpp empti test built may also pass flag pytest target edit testspytestini use pytest_addopt environ variabl see pytest docshttpsdocspytestorgencustomizehtmladdingdefaultopt exampl bash env pytest_addoptscaptureno exitfirst cmake build build target pytest use abbrevi flag env pytest_addoptss x cmake build build target pytest format format handl precommit instal brew maco pip os bash os python pip instal precommit maco homebrew brew instal precommit run item youv ad stage area file bash precommit run precommit run allfil want alway use instal git hook henc name precommit bash precommit instal clangformat v pybind ship clangformatclangformat configur file top level repo filenam clangformat current format appli automat manual use clangformat newli develop file highli encourag check file need format bash clangformat stylefil dryrun somecpp output show thing fix actual format file bash clangformat stylefil somecpp note stylefil option search parent directori clangformat file ie command run subdirectori pybind repo clangtidi clangtidyclangtidi perform deeper static code analys complex run compar clangformat support clangtidi built pybind cmake configur run clangtidi follow recip work file modifi place use git monitor chang bash docker run rm v pwdpybind silkehclang aptget updat aptget instal pythondev pythonpytest cmake pybind b build dcmake_cxx_clang_tidywhich clangtidyfix cmake build build includ use run includ use instal brew instal includewhatyouus maco run bash cmake b buildiwyu dcmake_cxx_include_what_you_usewhich includewhatyouus cmake build build report sent stderr pipe file wish build recip build intel compil assum path along recent cmake python bash python venv venv venvbinactiv pip instal pytest cmake b buildintel dcmake_cxx_compilerwhich icpc ddownload_catchon ddownload_eigenon dpybind_werroron test pgi compil bash docker run rm v pwdpybind nvcriohpcpgicompilersc aptget updat aptget instal pythondev pythonpip pythonpytest wget qo httpscmakeorgfilesvcmakelinuxx_targz tar stripcompon xz c usrloc cmake pybind b build cmake build build explan sdistwheel build design detail _only_ packag python sourc git sdist wheel creat extra requir complet normal main object packag system creat sdist python sourc distribut packag wheel python binari distribut packag includ everyth need work pybind instal without addit depend complex appear order support cmake first class languag even use pypi packag must includ _generated_ cmake file requir cmake instal pybind packag also provid option instal standard locat envrootincludepybind envrootsharecmakepybind easi find cmake caus problem environ use pyprojecttoml requir solv two packag nice pybind packag store includ cmake file insid packag get access via function packag pybindglob packag includ via pybindglob want invas discover file locat want instal packag github sourc best pip newer window maco linux manylinux compat includ distribut build sdist run procedur make sdist intern like make wheel instal bash edit develop instal exampl python pip instal e sinc pip sdist command wheel instal may want use upcom build packag bash python pip instal build normal packag python build global extra pybind_global_sdist python build want use classic direct usag python setuppi need cmake either make ninja preinstal possibl via pip instal cmake ninja sinc directli run python setuppi pick instal pyprojecttoml requir long two thing though everyth work way would expect bash normal packag python setuppi sdist global extra pybind_global_sdist python setuppi sdist detail explan build procedur design develop want work maintain packag system follow build sourc directori invok setuppi command sourc directori includ pip wheel pip instal activ full sourc build made follow step tool pep compliant like pip creat temporari virtual environ instal build requir mostli cmake window maco manylinux compliant system disabl nobuildisol long cmake instal environ variabl pybind_global_sdist check set truthi make accessori pybindglob packag instead normal pybind packag packag use instal file directli environ root directori use pybindglob setuppi read version pybind_versionpi verifi match includespybinddetailcommonh cmake run dcmake_install_preifxpybind sinc cmake instal procedur use rel path ident platform file valid long stay correct rel posit includ pybindsharecmakepybind cmake file pybindinclud includ build directori discard simpler file place sdist toolssetup_pyin toolspyprojecttoml main global packag creat run setup function toolssetup_pi setup_mainpi fill python packag setup_globalpi fill datahead slot context manag clean temporari cmake instal directori even error thrown build sdist sinc sdist render templat file tool along includ cmake file correct locat build complet trivial simpl extra requir requir even use pip realli want precommit httpsprecommitcom clangformat httpsclangllvmorgdocsclangformathtml clangtidi httpsclangllvmorgextraclangtidi pybindreadthedocsorg httppybindreadthedocsorgenlatest issu tracker httpsgithubcompybindpybindissu gitter httpsgitterimpybindlobbi use pull request httpshelpgithubcomarticlesusingpullrequest name featur request file issu ad featur titl feat make sure youv complet follow step submit issu thank check featur alreadi mention reject plan issu resourc didnt help consid ask gitter chat room see interest use larger audienc possibl implement reason use featur pass previou item suitabl chat pleas fill detail gitter chat room httpsgitterimpybindlobbi read remov checklist name question file issu unexplain behavior titl question question pleas check follow first check question alreadi answer faq section make sure youv read document issu may address resourc didnt help short question bug report consid ask gitter chat room search issu tracker includ close issu see question alreadi askedansw comment ask answer complex question answer previou item suitabl chat pleas fill detail includ selfcontain minim piec code illustr question that possibl tri make descript clear possibl faq httppybindreadthedocsioenlatestfaqhtml document httpspybindreadthedocsio issu tracker httpsgithubcompybindpybindissu gitter chat room httpsgitterimpybindlobbi read remov checklist name bug report file issu bug titl bug make sure youv complet follow step submit issu thank make sure youv read document issu may address search issu tracker verifi hasnt alreadi report comment consid ask first gitter chat room includ selfcontain minim piec code reproduc problem that possibl tri make descript clear possibl possibl make pr new fail test give us start point work document httpspybindreadthedocsio issu tracker httpsgithubcompybindpybindissu gitter chat room httpsgitterimpybindlobbi read remov checklist templat text parenthes issu descript provid short descript state expect behavior actual happen reproduc exampl code code minim extern depend isol function caus breakag submit match complet c python snippet easili compil run diagnos issu titl pyarmadillo streamlin linear algebra librari python tag linear algebra scientif comput mathemat python author name jason rumengan orcid affili name terri yue zhuo orcid affili name conrad sanderson orcid affili affili name datacsiro australia index name queensland univers technolog australia index name univers new south wale australia index name griffith univers australia index date octob bibliographi paperbib summari pyarmadillo linear algebra librari python languag aim close mirror program interfac wide use armadillo c librari turn deliber similar matlab pyarmadillo henc facilit algorithm prototyp matlablik syntax directli python rel straightforward convers pyarmadillobas python code perform armadillobas c code convert code use purpos speed pythonbas program conjunct pybind pybind integr algorithm origin prototyp python larger c codebas pyarmadillo provid object matric cube well associ function manipul data store object integ float point complex number support variou matrix factoris provid integr lapack andersonlapack one high perform dropin replac intel mkl intel_mkl openbla xianyi_openbla statement need armadillo popular linear algebra scientif comput librari c languag sanderson_ sanderson_ three main characterist highlevel program interfac deliber similar matlab ii express evalu base templat metaprogram automat combin sever oper increas speed effici iii effici mapper mathemat express lowlevel blaslapack function psarras_ matlab wide use industri academ context provid program interfac allow mathemat express written concis natur manner linge_matlaboctave_ especi comparison directli use lowlevel librari lapack andersonlapack industri set algorithm often first prototyp matlab convers anoth languag c purpos integr product similar program interfac armadillo matlab facilit direct prototyp c well convers research code product environ armadillo also often use implement perform critic part softwar packag run r environ statist comput r_manual via rcpparmadillo bridg eddelbuettel_ past year python becom popular data scienc machin learn partli stem rich ecosystem support framework packag well lack licens cost comparison matlab python allow rel quick prototyp algorithm aid dynam type natur interpret execut user code avoid timeconsum compil machin code howev joint purpos algorithm prototyp deploy flexibl python come two main issu slow execut speed due interpret natur languag ii difficulti integr code written python larger program andor framework written anoth languag first issu somewhat address convers pythonbas code lowlevel cython languag cython howev sinc cython close tie python convers python code c may prefer also address second issu well provid higherlevel abstract pyarmadillo aim user prefer compact matlablik syntax rather somewhat verbos syntax provid numpyscipi harrisarray scipynmeth ii user would like straightforward convers path perform c code specif pyarmadillo aim close mirror program interfac armadillo librari therebi facilit prototyp algorithm matlablik syntax directli python furthermor pyarmadillobas python code easili convert highperform armadillobas c code due similar program interfac risk introduc bug convers process consider reduc moreov convers c base code allow take advantag express optimis perform compiletim armadillo result speedup result code use larger c program use replac perform critic part within python program aid pybind interfac layer pybind function pyarmadillo provid matrix object sever distinct element type integ singl doubleprecis float point number well complex number addit matric pyarmadillo also support cube dimension array cube treat order set matric multidimension array beyond dimens explicitli beyond scope pyarmadillo function provid manipul data store object cover follow area fundament arithmet oper contigu noncontigu submatrix view diagon view elementwis function scalarvectormatrix valu function matric gener variou vectorsmatric statist signal process storag matric file matrix decompositionsfactoris matrix invers equat solver see onlin document httpspyarmasourceforgeiodocshtmlhttpspyarmasourceforgeiodocshtml detail pyarmadillo matric cube convert tofrom numpi array allow user tap wider python data scienc ecosystem includ plot tool matplotlib hunter implement pyarmadillo reli pybind pybind interfac c python well armadillo underli c implement matrix object associ function due express rel straightforward use pybind select interfac approach boostpython osti_ manual write c extens python turn armadillo interfac lowlevel routin bla lapack andersonlapack bla use matrix multipl lapack use variou matrix decompositionsfactoris equat solver lowlevel routin bla lapack consid _de facto_ standard numer linear algebra possibl use high perform dropin replac intel mkl intel_mkl openbla xianyi_openbla pyarmadillo opensourc softwar distribut apach licens apach make use opensourc proprietari closedsourc context laurent_ obtain httpspyarmasourceforgeiohttpspyarmasourceforgeio via python packag index precompil form acknowledg would like thank colleagu datacsiro dan pagendam dan gladish andrew bolt piotr szul provid feedback test refer figur httpsgithubcompybindpybindrawmasterdocspybindlogopng alt pybind logo pybind seamless oper c python latest document statu stabl document statu gitter chat ci build statu repolog pypi packag condaforg python version setuptool exampl httpsgithubcompybindpython_example_ scikitbuild exampl httpsgithubcompybindscikit_build_example_ cmake exampl httpsgithubcompybindcmake_example_ start warn combin older version pybind python trigger undefin behavior typic manifest crash interpret shutdown could also destroy data warn recommend updat latest patch releas python includ fix httpsgithubcompythoncpythonpull_ resolv problem use python pleas updat latest version pybind newer includ temporari workaround specif python detect runtim pybind lightweight headeronli librari expos c type python vice versa mainli creat python bind exist c code goal syntax similar excel boostpython httpwwwboostorgdoclibs__libspythondoc_ librari david abraham minim boilerpl code tradit extens modul infer type inform use compiletim introspect main issu boostpythonand reason creat similar projecti boost boost enorm larg complex suit util librari work almost everi c compil exist compat cost arcan templat trick workaround necessari support oldest buggiest compil specimen ccompat compil wide avail heavi machineri becom excess larg unnecessari depend think librari tini selfcontain version boostpython everyth strip away isnt relev bind gener without comment core header file requir k line code depend python pypi c standard librari compact implement possibl thank new c languag featur specif tupl lambda function variad templat sinc creation librari grown beyond boostpython mani way lead dramat simpler bind code mani common situat tutori refer document provid pybindreadthedocsio httpspybindreadthedocsioenlatest_ pdf version manual avail httpspybindreadthedocsio_downloadsenlatestpdf_ sourc code alway avail githubcompybindpybind httpsgithubcompybindpybind_ core featur pybind map follow core c featur python function accept return custom data structur per valu refer pointer instanc method static method overload function instanc attribut static attribut arbitrari except type enumer callback iter rang custom oper singl multipl inherit stl data structur smart pointer refer count like stdshared_ptr intern refer correct refer count c class virtual pure virtual method extend python goodi addit core function pybind provid extra goodi python pypypypi support implementationagnost interfac possibl bind c lambda function captur variabl lambda captur data store insid result python function object pybind use c move constructor move assign oper whenev possibl effici transfer custom data type easi expos intern storag custom data type python buffer protocol handi eg fast convers c matrix class like eigen numpi without expens copi oper pybind automat vector function transpar appli entri one numpi array argument python slicebas access assign oper support line code everyth contain header file need link addit librari binari gener smaller factor least compar equival bind gener boostpython recent pybind convers pyrosetta enorm boostpython bind project report httpgraylabjhuedurosettaconpyrosettapdf_ binari size reduct x compil time reduct x function signatur precomput compil time use constexpr lead smaller binari littl extra effort c type pickl unpickl similar regular python object support compil clangllvm newer appl xcode clang newer gcc newer microsoft visual studio updat newer intel classic c compil newer icc test ci cygwingcc previous test nvcc cuda test ci nvidia pgi test ci project creat wenzel jakob httprglepflchpeoplewjakob_ signific featur andor improv code contribut jona adler lori burn sylvain corlay eric cousineau ralf grossekunstlev trent houliston axel huebl hulucc yannick jadoul sergey lyskov johan mabil tomasz miąsko dean moldovan ben pritchard jason rhineland bori schäling pim schellart henri schreiner ivan smirnov bori stalet patrick stewart thank googl gener financi contribut continu integr infrastructur use project contribut see contribut guid httpsgithubcompybindpybindblobmastergithubcontributingmd_ inform build contribut pybind licens pybind provid bsdstyle licens found licens httpsgithubcompybindpybindblobmasterlicense_ file use distribut contribut project agre term condit licens latest document statu imag httpsreadthedocsorgprojectspybindbadgeversionlatest target httppybindreadthedocsorgenlatest stabl document statu imag httpsimgshieldsiobadgedocsstablebluesvg target httppybindreadthedocsorgenst gitter chat imag httpsimgshieldsiogitterroomgitterhqgittersvg target httpsgitterimpybindlobbi ci imag httpsgithubcompybindpybindworkflowscibadgesvg target httpsgithubcompybindpybindact build statu imag httpsciappveyorcomapiprojectsstatusriajpnhxysvgtru target httpsciappveyorcomprojectwjakobpybind pypi packag imag httpsimgshieldsiopypivpybindsvg target httpspypiorgprojectpybind condaforg imag httpsimgshieldsiocondavncondaforgepybindsvg target httpsgithubcomcondaforgepybindfeedstock repolog imag httpsrepologyorgbadgelatestversionspythonpybindsvg target httpsrepologyorgprojectpythonpybindvers python version imag httpsimgshieldsiopypipyversionspybindsvg target httpspypiorgprojectpybind upgrad guid companion guid docchangelog changelog briefli list new featur improv bug fix upgrad guid focus subset directli impact experi upgrad new version goe detail includ thing like deprec api replac build system chang gener code modern use inform _upgradeguid v usag pybind_overload macro get_overload function replac pybind_overrid get_overrid futur old macro may deprec remov pymodul renam pymodule_ backward compat typedef includ chang avoid languag chang c requir unqualifi modul place start logic line qualifi usag unaffect typedef remain unless c languag rule chang public constructor pymodule_ deprec use pybind_modul module_create_extension_modul instead error thrown __init__ forgotten subclass incorrect check add call __init__ miss pytype_error thrown cast subclass like pybyt pyobject convers valid make valid convers instead undocu hget_typ method deprec replac pytypeofh enum __str__ method predefin want overrid simplest fix add new pyprepend tag defin __str__ __eq__ defin __hash__ __hash__ set none normal cpython add __hash__ intend class hashabl possibl use new pyhash shortcut constructor pyarray alway take sign integ size consist may lead compil warn system cast pyssize_t instead stdsize_t toolsclang submodul toolsmkdocpi move standalon packag pybindmkdoc_ use tool pleas use via pip instal new locat pybind packag pypi longer fill wheel header slot use header slot avail request global extra pip instal pybindglob user unaffect pybindinclud locat report python pybind includ pybindget_includ still correct chang sinc _pybindmkdoc httpsgithubcompybindpybindmkdoc cmake support minimum requir version cmake sever detail cmake support deprec warn shown need chang someth chang pybind_cpp_standardplatformflag deprec pleas use cmake_cxx_standardnumb instead valid cmake cxx cuda standard select method like target_compile_featur request standard pybind target compil compil default less c instead forc c alway depend old behavior pleas use setcmake_cxx_standard cach string instead direct pybindmodul usag alway accompani least setcmake_cxx_visibility_preset hidden similar use tri manual forc compil flag correctli compil cuda pybind_add_modul system argument deprec noth link behav like import librari consist config submodul mode behav like system librari default python_execut set virtual environ venv virtualenv conda priorit standard search similar new findpython mode addit follow chang may interest cmake_interprocedural_optim respect pybind_add_modul set instead link pybindlto pybindthin_lto use find_packagepython compon interpret develop pybind caus pybind use new python mechan instead custom search base patch version classic findpythoninterp findpythonlib futur may becom default recent version cmake recommend v python packag includ header data packag well header wheel slot pybind includ pybindget_includ report new locat alway correct regardless pybind instal make old user argument meaningless use function get locat alreadi encourag switch packag locat v deprec pybind_plugin macro pybind_modul prefer way creat modul entri point old macro emit compiletim deprec warn codeblock cpp old pybind_pluginexampl pymodul mexampl document string mdefadd int int b return b return mptr new pybind_moduleexampl mdoc document string option mdefadd int int b return b new api defin custom constructor pickl function old placementnew custom constructor deprec new approach use pyinit factori function greatli improv type safeti placementnew call accident incompat type without compil error warn initi object multipl time care pythonsid __init__ call newstyl custom constructor prevent mistak see refcustom_constructor detail codeblock cpp old deprec runtim warn shown debug mode pyclassfoom foo def__init__ foo self new self foo use placementnew new pyclassfoom foo defpyinit note self argument return new foo return raw pointer return stdmake_uniquefoo return holder return foo return valu move constructor mirror custom constructor chang pypickl prefer way get set object state see refpickl detail codeblock cpp old deprec runtim warn shown debug mode pyclassfoom foo def__getstate__ const foo self return pymake_tupleselfvalu selfvalu def__setstate__ foo self pytupl new self footcaststdstr new pyclassfoom foo defpypickl const foo self __getstate__ return pymake_tupleselfvalu selfvalu unchang pytupl __setstate__ note self argument return new footcaststdstr return stdmake_uniquefoo return holder return foo return valu move constructor constructor pickl warn shown modul initi time import function call theyr visibl compil debug mode sampl warn codeblock none pybindbound class mymodulefoo use oldstyl placementnew __init__ deprec see upgrad guid pybind doc stricter enforc hidden symbol visibl pybind modul pybind tri activ enforc hidden symbol visibl modul your use either one pybind doccmak python build system compil two exampl repositori havent export symbol there noth concern chang done transpar background build manual reli specif default visibl read set default symbol visibl hidden alway recommend pybind see reffaqsymhidden linux maco hidden symbol visibl conjunct strip util yield much smaller modul binari cpython extens docs_ also recommend hide symbol default goal avoid symbol name clash modul start v pybind enforc strictli declar symbol insid pybind namespac hidden includ fvisibilityhidden flag linux maco extens modul embed interpret _cpython extens doc httpsdocspythonorgextendingextendinghtmlprovidingacapiforanextensionmodul namespacescop hidden visibl done automat pybind header gener transpar user ensur modul compil differ pybind version dont clash new featur like pymodule_loc bind work intend fvisibilityhidden flag appli visibl user bind outsid pybind namespac set automat pybind cmake python build system need done manual user build system ad flag minim chanc symbol conflict modul eg two unrel modul static link differ abiincompat version thirdparti librari symbol clash would like would end unpredict result produc smaller binari linux maco point previous within pybind cmake build system pybind_add_modul alway set fvisibilityhidden flag releas mode appli uncondit even debug mode longer opt no_extra option pybindmodul target also add flag interfac pybindemb target unchang signific chang pybindmodul target previous reli default visibl ie python modul doubl share librari depend youll need either export symbol manual recommend crossplatform librari factor share librari python modul link like depend temporari workaround also restor default visibl use cmake code recommend long run codeblock cmake target_link_librariesmymodul privat pybindmodul add_libraryrestore_default_vis interfac target_compile_optionsrestore_default_vis interfac fvisibilitydefault target_link_librariesmymodul privat restore_default_vis local stl contain bind previou pybind version could bind type global pybind modul even unrel one would access export type howev would also result conflict two modul export c type especi problemat common type eg stdvectorint refmodule_loc ad resolv see section complet usag guid pyclass_ still default global bind type usual uniqu across modul howev order avoid clash opaqu type pybind_vector pybind_map bind stl contain pymodule_loc element builtin int float etc bound use pyclass_ bound pymodule_loc exampl chang allow multipl modul bind stdvectorint without caus conflict see refstl_bind detail upgrad version multipl modul depend singl global bind stl contain note modul still accept foreign pymodule_loc type direct pythontoc local affect ctopython direct need multipl modul youll need either add copi stl bind modul need restor global statu singl bind mark pymodule_localfals latter easi workaround long run would best local common type bind order avoid conflict thirdparti modul neg stride python buffer object numpi array support neg stride requir chang integ type unsign sign interfac pybuffer_info pyarray compil warn enabl may notic new convers warn upgrad resolv use static_cast deprec pyobject api compar pyobject instanc pointer use objisobj equival obj obj python previous pybind use oper obj obj could confus deprec eventu replac proper rich object comparison futur releas class inherit pyobject borrow stolen previous avail protect constructor tag type use directli instead borrowed_t stolen_t httpsgithubcompybindpybindpull_ stricter compiletim error check error check move run time compil time notabl automat convers stdshared_ptrt possibl directli regist pyclass_t eg stdshared_ptrint stdshared_ptrstdvectort automat convert attempt bind function argument result compiletim error instead wait fail run time pyinit constructor definit also stricter prevent bind could caus unexpect behavior codeblock cpp struct exampl exampleint pyclass_examplem exampl defpyinitint ok exact match defpyinitint compiletim error mismatch nonconst lvalu refer allow bind rvalu howev note constructor take const still regist use pyinitt const lvalu refer bind rvalu v minimum compil version enforc compil time minimum also appli v check explicit compiletim error rais compil meet requir gcc clang appleclang msvc u intel c pymetaclass attribut requir static properti bind class static properti possibl default zeroparamet version pymetaclass deprec howev new oneparamet pymetaclasspython_typ version ad rare case custom metaclass need overrid pybind default codeblock cpp old emit deprec warn pyclass_foom foo pymetaclass def_property_readonly_staticfoo new static properti work without attribut pyclass_foom foo def_property_readonly_staticfoo new advanc featur overrid pybind default metaclass pyclass_barm bar pymetaclasscustom_python_typ v break chang pyclass_ chang necessari make type definit pybind futureproof support pypi via cpyext mechan httpsgithubcompybindpybindpull_ improv effici rev httpsgithubcompybindpybindcommitd_ declar type provid access via buffer protocol must includ pybuffer_protocol annot argument pyclass_ constructor codeblock cpp pyclass_matrixmatrix pybuffer_protocol defpyinit def_buff class includ static properti eg def_readwrite_stat must includ pymetaclass attribut note requir sinc remov v your upgrad x recommend skip directli v newer version pybind use redesign mechan instanti trampolin class use overrid virtual method within python led follow uservis syntax chang codeblock cpp old vx syntax pyclass_trampolineclassmyclass aliasmyclass new vx syntax pyclass_myclass trampolineclassmyclass importantli origin trampolin class specifi argument pyclass_ templat alia call gone new scheme zero overhead case python doesnt overrid function underli c class rev httpsgithubcompybindpybindcommitd_ class type must first templat argument given pyclass_ trampolin mix arbitrari order argument see follow section deprec pybaset attribut pybaset deprec favor specifi templat argument pyclass_ new syntax also support multipl inherit note type export must first argument pyclass_class templat order follow type base holder andor trampolin import codeblock cpp old vx pyclass_derivedderiv pybasebas new vx pyclass_deriv basederiv new multipl inherit pyclass_deriv base basederiv new apart deriv argument order arbitrari pyclass_deriv base holder base trampolinederiv outofthebox support stdshared_ptr relev type caster built longer necessari includ declar form codeblock cpp pybind_declare_holder_typet stdshared_ptrt continu wont caus error even deprec warn complet redund deprec pyobject api oldstyl call emit deprec warn old syntax new syntax objcallarg objarg objstr pystrobj auto l pylistobj lcheck pyisinstancepylistobj pyobjectptr true pyreinterpret_borrowpyobjectptr pyobjectptr fals pyreinterpret_stealpyobjectptr objattrfoo pyhasattrobj foo objbar objcontainsbar _instal instal librari sever way get pybind sourc live pybindpybind github httpsgithubcompybindpybind_ pybind develop recommend one first three way list submodul pypi condaforg obtain pybind _include_as_a_submodul includ submodul work project git use pybind repositori submodul git repositori use codeblock bash git submodul add b stabl pybindpybind externpybind git submodul updat init assum place depend extern use github use github use full http ssh url instead rel url pybindpybind server also requir git extens github includ externpybindinclud use variou integr tool see refcompil pybind provid directli local folder includ pypi download sourc cmake file python packag pypi use pip use codeblock bash pip instal pybind provid pybind standard python packag format want pybind avail directli environ root use codeblock bash pip instal pybindglob recommend instal system python add file usrlocalincludepybind usrlocalsharecmakepybind unless want recommend use virtual environ pyprojecttoml file see refcompil includ condaforg use pybind conda packag via condaforg httpsgithubcomcondaforgepybindfeedstock_ codeblock bash conda instal c condaforg pybind includ vcpkg download instal pybind use microsoft vcpkg httpsgithubcommicrosoftvcpkg_ depend manag codeblock bash git clone httpsgithubcommicrosoftvcpkggit cd vcpkg bootstrapvcpkgsh vcpkg integr instal vcpkg instal pybind pybind port vcpkg kept date microsoft team member commun contributor version date pleas creat issu pull request httpsgithubcommicrosoftvcpkg_ vcpkg repositori global instal brew brew packag manag homebrew maco linuxbrew linux pybind packag httpsgithubcomhomebrewhomebrewcoreblobmasterformulapybindrb_ instal codeblock bash brew instal pybind list conan possibl c packag manag hunter perhap conan clean cmake integr would good show option locat find pybind list httpsrepologyorgprojectpythonpybindversions_ maintain variou packag commun _refer warn pleas advis refer document discuss pybind intern current incomplet pleas refer previou section pybind header file nitti gritti detail refer _macro macro doxygendefin pybind_modul _core_typ conveni class arbitrari python type common member function doxygenclass object_api member without refer count doxygenclass handl member refer count doxygenclass object member doxygenfunct reinterpret_borrow doxygenfunct reinterpret_st conveni class specif python type doxygenclass module_ member doxygengroup pytyp member _extra pass extra argument def class_ doxygengroup annot member embed interpret doxygendefin pybind_embedded_modul doxygenfunct initialize_interpret doxygenfunct finalize_interpret doxygenclass scoped_interpret redirect c stream doxygenclass scoped_ostream_redirect doxygenclass scoped_estream_redirect doxygenfunct add_ostream_redirect python builtin function doxygengroup python_builtin member inherit see docclass docadvancedclass detail doxygendefin pybind_overrid doxygendefin pybind_override_pur doxygendefin pybind_override_nam doxygendefin pybind_override_pure_nam doxygenfunct get_overrid except doxygenclass error_already_set member doxygenclass builtin_except member liter doxygennamespac liter _class objectori code creat bind custom type let look complex exampl well creat bind custom c data structur name pet definit given codeblock cpp struct pet petconst stdstring name namenam void setnameconst stdstring name_ name name_ const stdstring getnam const return name stdstring name bind code pet look follow codeblock cpp includ pybindpybindh namespac py pybind pybind_moduleexampl pyclass_petm pet defpyinitconst stdstring defsetnam petsetnam defgetnam petgetnam classclass_ creat bind c class structstyl data structur funcinit conveni function take type constructor paramet templat argument wrap correspond constructor see refcustom_constructor section detail interact python session demonstr exampl shown codeblock pycon python import exampl p examplepetmolli printp examplepet object xcd pgetnam umolli psetnamecharli pgetnam ucharli seealso static member function bound way use funcclass_def_stat keyword default argument possibl specifi keyword default argument use syntax discuss previou chapter refer section refkeyword_arg refdefault_arg detail bind lambda function note printp produc rather useless summari data structur exampl codeblock pycon printp examplepet object xcd address could bind util function return humanread summari special method slot name __repr__ unfortun suitabl function pet data structur would nice chang easili accomplish bind lambda function instead codeblock cpp pyclass_petm pet defpyinitconst stdstring defsetnam petsetnam defgetnam petgetnam def__repr__ const pet return examplepet name anam stateless f_ state lambda closur support pybind chang python code produc follow output codeblock pycon printp examplepet name molli f stateless closur empti pair bracket captur object _properti instanc static field also directli expos name field use funcclass_def_readwrit method similar funcclass_def_readonli method also exist const field codeblock cpp pyclass_petm pet defpyinitconst stdstring def_readwritenam petnam remaind make possibl write codeblock pycon p examplepetmolli pname umolli pname charli pname ucharli suppos petnam privat intern variabl access via setter getter codeblock cpp class pet public petconst stdstring name namenam void setnameconst stdstring name_ name name_ const stdstring getnam const return name privat stdstring name case method funcclass_def_properti funcclass_def_property_readonli readonli data use provid fieldlik interfac within python transpar call setter getter function codeblock cpp pyclass_petm pet defpyinitconst stdstring def_propertynam petgetnam petsetnam remaind write properti defin pass nullptr input read function seealso similar function funcclass_def_readwrite_stat funcclass_def_readonly_stat funcclass_def_property_stat funcclass_def_property_readonly_stat provid bind static variabl properti pleas also see section refstatic_properti advanc part document dynam attribut nativ python class pick new attribut dynam codeblock pycon class pet name molli p pet pname charli overwrit exist page dynam add new attribut default class export c support writabl attribut one explicitli defin use funcclass_def_readwrit funcclass_def_properti codeblock cpp pyclass_petm pet defpyinit def_readwritenam petnam tri set attribut result error codeblock pycon p examplepet pname charli ok attribut defin c page fail attributeerror pet object attribut age enabl dynam attribut c class classpydynamic_attr tag must ad classpyclass_ constructor codeblock cpp pyclass_petm pet pydynamic_attr defpyinit def_readwritenam petnam everyth work expect codeblock pycon p examplepet pname charli ok overwrit valu c page ok dynam add new attribut p__dict__ like nativ python class age note small runtim cost class dynam attribut addit __dict__ also expens garbag collect track must activ resolv possibl circular refer nativ python class incur cost default anyth worri default pybind class effici nativ python class enabl dynam attribut bring par _inherit inherit automat downcast suppos exampl consist two data structur inherit relationship codeblock cpp struct pet petconst stdstring name namenam stdstring name struct dog pet dogconst stdstring name petnam stdstring bark const return woof two differ way indic hierarch relationship pybind first specifi c base class extra templat paramet classclass_ codeblock cpp pyclass_petm pet defpyinitconst stdstring def_readwritenam petnam method templat paramet pyclass_dog pet specifi c parent type dog defpyinitconst stdstring defbark dogbark altern also assign name previous bound pet classclass_ object refer bind dog class codeblock cpp pyclass_pet petm pet petdefpyinitconst stdstring def_readwritenam petnam method pass parent class_ object pyclass_dogm dog pet specifi python parent type defpyinitconst stdstring defbark dogbark functionalitywis approach equival afterward instanc expos field method type codeblock pycon p exampledogmolli pname umolli pbark uwoof c class defin regular nonpolymorph type inherit relationship reflect python codeblock cpp return base pointer deriv instanc mdefpet_stor return stdunique_ptrpetnew dogmolli codeblock pycon p examplepet_stor typep dog instanc behind pet pointer pet pointer downcast regular nonpolymorph type pbark attributeerror pet object attribut bark function return dog instanc nonpolymorph type behind base pointer python see pet c type consid polymorph least one virtual function pybind automat recogn codeblock cpp struct polymorphicpet virtual polymorphicpet default struct polymorphicdog polymorphicpet stdstring bark const return woof bind code pyclass_polymorphicpetm polymorphicpet pyclass_polymorphicdog polymorphicpetm polymorphicdog defpyinit defbark polymorphicdogbark return base pointer deriv instanc mdefpet_stor return stdunique_ptrpolymorphicpetnew polymorphicdog codeblock pycon p examplepet_stor typep polymorphicdog automat downcast pbark uwoof given pointer polymorph base pybind perform automat downcast actual deriv type note goe beyond usual situat c dont get access virtual function base get concret deriv type includ function attribut base type may even awar seealso inform polymorph behavior see refoverriding_virtu overload method sometim sever overload c method name take differ kind input argument codeblock cpp struct pet petconst stdstring name int age namenam ageag void setint age_ age age_ void setconst stdstring name_ name name_ stdstring name int age attempt bind petset caus error sinc compil know method user intend select disambigu cast function pointer bind multipl function python name automat creat chain function overload tri sequenc codeblock cpp pyclass_petm pet defpyinitconst stdstring int defset static_castvoid petintpetset set pet age defset static_castvoid petconst stdstring petset set pet name overload signatur also visibl method docstr codeblock pycon helpexamplepet class pet__builtin__object method defin __init__ signatur pet str int nonetyp set signatur pet int nonetyp set pet age signatur pet str nonetyp set pet name c compat compil cpp_ use altern syntax cast overload function codeblock cpp pyclass_petm pet defset pyoverload_castintpetset set pet age defset pyoverload_castconst stdstring petset set pet name pyoverload_cast requir paramet type specifi return type class deduc avoid addit nois void pet seen raw cast function overload base const pyconst_ tag use codeblock cpp struct widget int fooint x float int fooint x float const pyclass_widgetm widget deffoo_mut pyoverload_castint floatwidgetfoo deffoo_const pyoverload_castint floatwidgetfoo pyconst_ prefer pyoverload_cast syntax c compat compil use pydetailoverload_cast_impl addit set parenthes codeblock cpp templat typenam arg use overload_cast_ pybinddetailoverload_cast_implarg pyclass_petm pet defset overload_cast_intpetset set pet age defset overload_cast_const stdstring petset set pet name cpp compil support stdc flag visual studio updat newer note defin multipl overload constructor simpli declar one use defpyinit syntax exist machineri specifi keyword default argument also work enumer intern type let suppos exampl class contain intern enumer type eg codeblock cpp struct pet enum kind dog cat petconst stdstring name kind type namenam typetyp stdstring name kind type bind code exampl look follow codeblock cpp pyclass_pet petm pet petdefpyinitconst stdstring petkind def_readwritenam petnam def_readwritetyp pettyp pyenum_petkindpet kind valuedog petkinddog valuecat petkindcat export_valu ensur kind type creat within scope pet pet classclass_ instanc must suppli classenum_ constructor funcenum_export_valu function export enum entri parent scope skip newer cstyle strongli type enum codeblock pycon p petluci petcat ptype kindcat intptyp l entri defin enumer type expos __members__ properti codeblock pycon petkind__members__ dog kinddog cat kindcat name properti return name enum valu unicod string note also possibl use strenum howev accomplish differ goal follow show two approach differ codeblock pycon p pet luci petcat pet_typ ptype pet_typ petcat strpet_typ petcat pet_typenam cat note special tag pyarithmet specifi enum_ constructor pybind creat enumer also support rudimentari arithmet bitlevel oper like comparison xor negat etc codeblock cpp pyenum_petkindpet kind pyarithmet default omit conserv space limit design choic pybind strive gener solut bind gener also certain limit pybind cast away const function argument return valu line python languag concept const valu mean addit care need avoid bug would caught type checker tradit c program numpi interfac pybindarray greatli simplifi access numer data c vice versa fullblown array class like eigenarray boostmulti_array eigen object directli support howev pybindeigenh larg use featur could implement pybind would lead signific increas complex pybind strive simpl compact user requir larg new featur encourag write extens pybind see pybind_json httpsgithubcompybindpybind_json_ exampl known bug issu hope one day fix current unsolv know help one issu contribut welcom intel current issu test suit httpsgithubcompybindpybindpull_ debug mode python support test test suit current httpsgithubcompybindpybindpull_ pypi issu sever test bit window known limit issu probabl solvabl fix yet clean well written patch would like accept solv type caster kept aliv recurs httpsgithubcompybindpybindissues_ one consequ contain char current support httpsgithubcompybindpybindissues_ cpptest run window python newer due dll loader chang user code correctli instal affect httpsgithubcompybindpybindissue_ python warn combin older version pybind python trigger undefin behavior typic manifest crash interpret shutdown could also destroy data warn issu fix python httpsgithubcompythoncpythonpull_ mitig releas commonli use pybind newer includ temporari workaround specif python detect runtim leak byte memori callback function garbag collect refer pybind test suit callback garbag collect endofprocess wheel built python correctli avoid leak run python _basic first step section demonstr basic featur pybind get start make sure develop environ set compil includ set test case compil test case linuxmaco linux youll need instal pythondev pythondev packag well cmake maco includ python version work box cmake must still instal instal prerequisit run codeblock bash mkdir build cd build cmake make check j last line compil run test window window visual studio newer support sinc pybind reli variou c languag featur break older version visual studio note use c visual studio msvc pybind requir flag permiss pass compil enforc standard conformance_ build visual studio strictli necessari still advis _to enforc standard conform httpsdocsmicrosoftcomenuscppbuildreferencepermissivestandardsconformanceviewv compil run test codeblock batch mkdir build cd build cmake cmake build config releas target check creat visual studio project compil run target command line note test fail make sure python binari testcas compil processor type bit ie either x_ specifi x_ target architectur gener visual studio project use cmake x seealso advanc user alreadi familiar boostpython may want skip tutori look test case filetest directori exercis featur pybind header namespac convent breviti code exampl assum follow two line present codeblock cpp includ pybindpybindh namespac py pybind featur may requir addit header specifi need _simple_exampl creat bind simpl function let start creat python bind extrem simpl function add two number return result codeblock cpp int addint int j return j simplic f_ well put function bind code file name fileexamplecpp follow content codeblock cpp includ pybindpybindh int addint int j return j pybind_moduleexampl mdoc pybind exampl plugin option modul docstr mdefadd add function add two number f practic implement bind code gener locat separ file funcpybind_modul macro creat function call import statement issu within python modul name exampl given first macro argument quot second argument defin variabl type classpymodule_ modul main interfac creat bind method funcmodule_def gener bind code expos add function python note notic littl code need expos function python detail regard function paramet return valu automat infer use templat metaprogram overal approach use syntax borrow boostpython though underli implement differ pybind headeronli librari henc necessari link special librari intermedi magic translat step linux exampl compil use follow command codeblock bash c wall share stdc fpic python pybind includ examplecpp examplepythonconfig extensionsuffix note use refinclude_as_a_submodul get pybind sourc use pythonconfig includ iexternpybindinclud instead python pybind includ compil explain refbuilding_manu detail requir compil flag linux maco see refbuilding_manu complet crossplatform compil instruct refer refcompil page python_example_ cmake_example_ repositori also good place start complet project exampl crossplatform build system differ two python_example_ use python setuptool build modul cmake_example_ use cmake may prefer exist c project _python_exampl httpsgithubcompybindpython_exampl _cmake_exampl httpsgithubcompybindcmake_exampl build c code produc binari modul file import python assum compil modul locat current directori follow interact python session show load execut exampl codeblock pycon python python default aug gcc compat appl llvm clang darwin type help copyright credit licens inform import exampl exampleadd l _keyword_arg keyword argument simpl code modif possibl inform python name argument j case codeblock cpp mdefadd add function add two number pyargi pyargj classarg one sever special tag class use pass metadata funcmodule_def modifi bind code call function use keyword argument readabl altern particularli function take mani paramet codeblock pycon import exampl exampleaddi j l keyword name also appear function signatur within document codeblock pycon helpexampl function add signatur int j int int function add two number shorter notat name argument also avail codeblock cpp regular notat mdefadd add pyargi pyargj shorthand use namespac pybindliter mdefadd add i_a j_a var_a suffix form c liter equival classarg note liter oper must first made visibl direct use namespac pybindliter bring anyth els pybind namespac except liter _default_arg default argument suppos function bound default argument eg codeblock cpp int addint int j return j unfortun pybind automat extract paramet sinc part function type inform howev simpl specifi use extens classarg codeblock cpp mdefadd add function add two number pyargi pyargj default valu also appear within document codeblock pycon helpexampl function add signatur int j int int function add two number shorthand notat also avail default argument codeblock cpp regular notat mdefadd add pyargi pyargj shorthand mdefadd add i_a j_a export variabl expos valu c use attr function regist modul shown builtin type gener object later automat convert assign attribut explicitli convert use function pycast codeblock cpp pybind_moduleexampl mattrthe_answ pyobject world pycastworld mattrwhat world access python codeblock pycon import exampl examplethe_answ examplewhat world _supported_typ support data type larg number data type support box use seamlessli function argument return valu pycast gener full overview see docadvancedcastindex section benchmark follow result synthet benchmark compar compil time modul size pybind boostpython detail report boostpython pybind convers real project avail f_ f httpgraylabjhuedurosettaconpyrosettapdf setup python script see docsbenchmarkpi file use gener set file dummi class whose count increas success benchmark class power two class four method randomli gener signatur return valu four argument particular reason setup desir gener mani uniqu function signatur whose count could control simpl way exampl bind code one class codeblock cpp class cl public cl fn_cl cl cl cl cl fn_cl cl cl cl cl fn_cl cl cl cl cl fn_cl cl cl cl pybind_moduleexampl pyclass_clm cl deffn_ clfn_ deffn_ clfn_ deffn_ clfn_ deffn_ clfn_ boostpython version look almost ident except return valu polici specifi argument def librari compil done codeblock bash appl llvm version clang follow compil flag codeblock bash g os share rdynam undefin dynamic_lookup fvisibilityhidden stdc compil time follow loglog plot show compil time grow increas number class function declar pybind includ mani fewer header initi lead shorter compil time perform ultim fairli similar pybind second faster largest largest file class total method modest x speedup rel boostpython requir second latex imag pybind_vs_boost_pythonsvg latex imag pybind_vs_boost_pythonpng modul size differ two librari becom much pronounc consid file size gener python plugin largest file binari gener boostpython requir mib time megabyt larger output gener pybind small input boostpython edg plot howev note store mani definit extern librari whose size includ henc comparison slightli shift boostpython favor latex imag pybind_vs_boost_pythonsvg latex imag pybind_vs_boost_pythonpng frequent ask question importerror dynam modul defin init function make sure name specifi pybind_modul ident filenam extens librari without suffix fix issu like use incompat version python instanc extens librari compil python interpret run top version python vice versa symbol found __py_zerostruct _pyinstancemethod_typ see first answer systemerror dynam modul initi properli see first answer python interpret immedi crash import modul see first answer _faq_reference_argu limit involv refer argument c fairli common pass argument use mutabl refer mutabl pointer allow read write access valu suppli caller sometim done effici reason realiz function multipl return valu two basic exampl codeblock cpp void incrementint void increment_ptrint python argument pass refer gener issu bind code python howev certain basic python type like str int bool float etc immut mean follow attempt port function python doesnt effect valu provid caller fact noth codeblock python def incrementi nope pybind also affect languagelevel convent mean bind increment increment_ptr also creat python function dont modifi argument although inconveni one workaround encapsul immut type custom type allow modif altern involv bind small wrapper lambda function return tupl output argument see remaind document exampl bind lambda function exampl codeblock cpp int fooint return bind code codeblock cpp mdeffoo int int rv fooi return stdmake_tuplerv reduc build time good practic split bind code multipl file follow exampl fileexamplecpp codeblock cpp void init_expymodule_ void init_expymodule_ pybind_moduleexampl init_exm init_exm fileexcpp codeblock cpp void init_expymodule_ mdefadd int int b return b fileexcpp codeblock cpp void init_expymodule_ mdefsub int int b return b commandpython codeblock pycon import exampl exampleadd examplesub shown variou init_ex function contain separ file compil independ one anoth link togeth final share object follow approach reduc memori requir per compil unit enabl parallel build desir allow faster increment build instanc singl class definit chang subset bind code gener need recompil recurs templat instanti exceed maximum depth receiv error excess recurs templat evalu tri specifi larger valu eg ftemplatedepth gccclang culprit gener gener function signatur compil time use c templat metaprogram _faqhidden_vis someclass declar greater visibl type field someclassmemb wattribut error typic indic compil without requir fvisibl flag pybind code intern forc hidden visibl intern code nonhidden thu export code attempt includ pybind type exampl pyobject pylist run warn avoid make sure specifi fvisibilityhidden compil pybind code fvisibilityhidden necessari pybind modul could compil differ version pybind also import symbol defin one modul clash potentiallyincompat symbol defin anoth python extens modul usual load local symbol posix system typic use dlopen rtld_local flag python default chang even isnt alway enough guarante complet independ symbol involv use fvisibilityhidden addit fvisiblityhidden deliv consider binari size save see follow section detail _faqsymhidden creat smaller binari job pybind extens reli program techniqu known templat metaprogram way perform comput compil time use type inform templat metaprogam usual instanti code involv signific number deepli nest type either complet remov reduc instruct compil optim phase howev due nest natur type result symbol name compil extens librari extrem long instanc includ test suit contain follow symbol html codeblock none __znpybindcpp_functioncivexamplejrnst__vectorins_basic_stringiwns_char_traitsiweens_allocatoriweeeens_isa_eeeeejns_nameens_siblingens_is_methodea_ceeemt_ft_dpt_edprkt_ html codeblock cpp __znpybindcpp_functioncivexamplejrnst__vectorins_basic_stringiwns_char_traitsiweens_allocatoriweeeens_isa_eeeeejns_nameens_siblingens_is_methodea_ceeemt_ft_dpt_edprkt_ mangl form follow function type codeblock cpp pybindcpp_functioncpp_functionvoid exampl std__vectorstd__basic_stringwchar_t std__char_traitswchar_t std__allocatorwchar_t std__allocatorstd__basic_stringwchar_t std__char_traitswchar_t std__allocatorwchar_t pybindnam pybinds pybindis_method char void examplestd__vectorstd__basic_stringwchar_t std__char_traitswchar_t std__allocatorwchar_t std__allocatorstd__basic_stringwchar_t std__char_traitswchar_t std__allocatorwchar_t pybindnam const pybinds const pybindis_method const char const memori need store mangl name function byte larger actual piec code byte repres hand silli even give function name tini cog bigger piec machineri expos outsid world well gener want export symbol function actual call outsid achiev specifi paramet fvisibilityhidden gcc clang set default symbol visibl hidden tremend impact final binari size result extens librari visual studio symbol alreadi hidden default noth need done addit decreas binari size fvisibilityhidden also avoid potenti seriou issu load multipl modul requir proper pybind oper see previou faq entri detail work ancient visual studio build window offici window distribut python compil use truli ancient version visual studio lack good c support user implicitli assum would imposs load plugin built visual studio python distribut compil use visual studio howev issu exist perfectli legitim interfac dll built differ compil andor c librari common gotcha watch involv free memori region malloc anoth share librari use data structur incompat abi pybind care make type mistak properli handl ctrlc longrun function ctrlc receiv python interpret hold gil releas longrun function wont interrupt interrupt insid function use pyerr_checksign function tell signal rais python side function mere check flag impact neglig signal receiv must either explicitli interrupt execut throw pyerror_already_set propag exist keyboardinterrupt clear error usual want codeblock cpp pybind_moduleexampl mdeflong running_func pyerr_checksign throw pyerror_already_set long run iter cmake doesnt detect right python version cmakebas build system tri automat detect instal version python link fail multipl version python find wrong one delet cmakecachetxt add dpython_executablewhich python cmake configur line replac python path python prefer altern tri dpybind_findpythonon activ new cmake findpython support instead pybind custom search requir cmake even better set cmakeliststxt ad find pybind well inconsist detect python version cmake pybind function find_packagepythoninterp find_packagepythonlib provid cmake python version detect modifi pybind due unreli limit make unsuit pybind need instead pybind provid reliabl python detect cmake code conflict aris howev use pybind project also use cmake python detect system sever python version instal differ may caus inconsist error mechan use project consid follow cmake code execut system python x instal codeblock cmake find_packagepythoninterp find_packagepythonlib find_packagepybind detect python pybind pick well contrast code codeblock cmake find_packagepybind find_packagepythoninterp find_packagepythonlib detect python x pybind may crash find_packagepythonlib afterward three possibl solut avoid use find_packagepythoninterp find_packagepythonlib cmake reli pybind detect python version possibl cmake machineri call includ pybind set pybind_findpython true use find_packagepython compon interpret develop modern cmake better best pybind case use new cmake findpython instead old deprec search tool modul much better find correct python set pybind_nopython true pybind search python howev use targetbas system setup know includ thing depend python like pybind_add_modul might ideal integr exist system like scikitbuild python helper cite project suggest follow bibtex templat cite pybind scientif discours codeblock bash miscpybind author wenzel jakob jason rhineland dean moldovan year note httpsgithubcompybindpybind titl pybind seamless oper c python latex intro includ readmerst latex content toctre maxdepth changelog upgrad toctre caption basic maxdepth instal basic class compil toctre caption advanc topic maxdepth advancedfunct advancedclass advancedexcept advancedsmart_ptr advancedcastindex advancedpycppindex advancedembed advancedmisc toctre caption extra inform maxdepth faq benchmark limit refer cmakeindex _compil build system _buildsetuptool build setuptool project pypi build setuptool way go sylvain corlay kindli provid exampl project show set everyth includ automat gener document use sphinx pleas refer python_example_ repositori python_exampl httpsgithubcompybindpython_exampl helper file provid pybind simplifi usag setuptool use pybind insid setuppi system ensur pybind instal build packag four possibl way pybind support four ask user instal pybind beforehand bad use refsetup_helperspep good new requir pip refsetup_helperssetup_requir discourag python packag pep avail still work everywher refsetup_helperscopymanu alway work manual sync copi get updat exampl setuppi use pybind helper codeblock python glob import glob setuptool import setup pybindsetup_help import pybindextens ext_modul pybindextens python_exampl sortedglobsrccpp sort sourc file reproduc setup ext_modulesext_modul want automat search highest support c standard support via build_ext command overrid affect pybindextens codeblock python glob import glob setuptool import setup pybindsetup_help import pybindextens build_ext ext_modul pybindextens python_exampl sortedglobsrccpp setup cmdclassbuild_ext build_ext ext_modulesext_modul sinc pybind requir numpi build lightweight replac numpi parallel compil distutil tool includ use like codeblock python pybindsetup_help import parallelcompil option multithread build parallelcompilenpy_num_build_jobsinstal setup argument name environ variabl control number thread npy_num_build_job use numpi though set someth differ want cmake_build_parallel_level anoth choic user might expect also pass defaultn set default number thread take number thread avail maxn maximum number thread larg extens may want set memori depend number develop rapidli lot c file may want avoid rebuild file chang simpl case use pip instal e local header skip rebuild object file newer sourc header check follow codeblock python pybindsetup_help import parallelcompil naive_recompil smartcompilenpy_num_build_job needs_recompilenaive_recompileinstal complex build implement smarter function pass needs_recompil use ccache_ instead cxxcach g pip instal e would way use gcc exampl unlik simpl solut even work even compil edit mode requir ccach instal keep mind pip even attempt rebuild think alreadi built copi code deduc version number one way avoid use setuptools_scm_ gener version number includ number commit sinc last tag hash dirti directori anoth way forc rebuild purg cach use pip nocachedir option ccach httpsccachedev setuptools_scm httpsgithubcompypasetuptools_scm _setup_helperspep pep requir pip requir use pep httpswwwpythonorgdevpepspep_ pyprojecttoml file ensur pybind avail compil project file exist pip make new virtual environ download packag list requir build wheel binari python packag throw away environ instal wheel pyprojecttoml file like look someth like codeblock toml buildsystem requir setuptool wheel pybind buildbackend setuptoolsbuild_meta note main drawback method pep _ compliant build tool pip requir approach work older version pip complet ignor file distribut binari call wheel python use someth like cibuildwheel_ rememb setuppi pyprojecttoml even contain wheel high pip requir sourc build affect user binari wheel build sdist wheel pypabuild_ recommend offic tool _pep httpswwwpythonorgdevpepspep _cibuildwheel httpscibuildwheelreadthedocsio _pypabuild httpspypabuildreadthedocsioenlatest _setup_helperssetup_requir classic setup_requir want support old version pip classic setup_requirespybind keyword argument setup trigger twophas setuppi run need use someth like ensur first pass work yet instal setup_requir packag sinc cant instal someth know codeblock python tri pybindsetup_help import pybindextens except importerror setuptool import extens pybindextens doesnt matter extens class enhanc subclass first pass run second pass setup_requir requir obvious hack pep method support ancient version pip _setup_helperscopymanu copi manual also copi setup_helperspi directli project design usabl standalon like old exampl setuppi set include_pybindfals skip includ pybind packag header use git submodul specif git version use need import local file setuppi ensur helper file part manifest close relat includ pybind subproject run setup_helperspi inplac load correctli even pick correct includ pybind though turn shown want input manual suggest usag pybind submodul externpybind codeblock python dir ospathabspathospathdirname__file__ syspathappendospathjoindir extern pybind pybindsetup_help import pybindextens noqa e del syspath versionchang ad setup_help file build cppimport cppimport_ small python import hook determin whether c sourc file whose name match request modul file compil python extens use pybind place folder c sourc file python abl find modul load cppimport httpsgithubcomtbenthompsoncppimport _cmake build cmake c codebas exist cmakebas build system python extens modul creat line code codeblock cmake cmake_minimum_requiredvers projectexampl languag cxx add_subdirectorypybind pybind_add_moduleexampl examplecpp assum pybind repositori locat subdirectori name filepybind code locat file name fileexamplecpp cmake command add_subdirectori import pybind project provid pybind_add_modul function take care detail need build python extens modul platform work sampl project includ way invok cmake filesetuppi pypi integr found cmake_example_ repositori cmake_exampl httpsgithubcompybindcmake_exampl versionchang cmake requir inform found doccmakeindex pybind_add_modul eas creation python extens modul pybind provid cmake function follow signatur codeblock cmake pybind_add_modulenam modul share exclude_from_al no_extra thin_lto opt_siz sourc sourc function behav much like cmake builtin add_librari fact wrapper function around command add librari target call name built list sourc file addit take care pythonspecif compil linker flag well os pythonversionspecif file extens produc target name manipul regular cmake command modul share may given specifi type librari type given modul use default ensur creation pythonexclus modul specifi share creat tradit dynam librari also link elsewher exclude_from_al remov target default build see cmake doc detail sinc pybind templat librari pybind_add_modul add compil flag ensur high qualiti code gener without bloat aris long symbol name duplic code differ translat unit set default visibl hidden requir pybind featur function attempt load multipl pybind modul compil differ pybind version also add addit flag enabl lto link time optim strip unneed symbol see reffaq entri faqsymhidden detail explan latter optim never appli debug mode no_extra given alway disabl even releas mode howev result code bloat gener recommend state lto enabl default newer compil also support differ flavor lto thinlto_ set thin_lto caus function prefer flavor avail function fall back regular lto fltothin avail cmake_interprocedural_optim set either respect instead builtin flag search note want set properti form target cmake_interprocedural_optimization_config version still use setcmake_interprocedural_optim otherwis noop disabl pybind ipo flag opt_siz flag enabl sizebas optim equival standard os os compil flag minsizerel build type avoid optim substanti increas size result binari flag particularli use project split performancecrit part associ bind case compil project releas mode henc optim perform global specifi opt_siz bind target size might main concern perform often less critic size reduct observ practic flag chang optim behavior pertarget level take preced global cmake build type releas relwithdebinfo except debug build optim remain disabl _thinlto httpclangllvmorgdocsthinltohtml configur variabl default pybind compil modul compil default minimum standard requir pybind whichev higher set standard explicitli cmake_cxx_standard httpscmakeorgcmakehelplatestvariablecmake_cxx_standardhtml_ codeblock cmake setcmake_cxx_standard cach string c version select setcmake_cxx_standard_requir option ensur standard support setcmake_cxx_extens option keep compil extensionsn variabl also set call cmake command line use dvariablevalu flag also manual set cxx_standard target use target_compile_featur target anyth cmake support classic python support target python version select set pybind_python_vers exact python instal specifi python_execut exampl codeblock bash cmake dpybind_python_vers anoth method cmake dpython_executablepathtopython often good way get current python work environ cmake dpython_executablepython c import sy printsysexecut find_packag vs add_subdirectori cmakebas project dont includ pybind repositori intern extern instal detect find_packagepybind see config file_ docstr detail relev cmake variabl codeblock cmake cmake_minimum_requiredvers projectexampl languag cxx find_packagepybind requir pybind_add_moduleexampl examplecpp note find_packagepybind work correctli pybind correctli instal system e g download clone pybind repositori codeblock bash classic cmake cd pybind mkdir build cd build cmake make instal cmake cd pybind cmake b build cmake build build j build core cmake instal build detect aforement pybind_add_modul employ function usag configur variabl ident matter pybind ad subdirectori found instal packag refer cmake_example_ repositori full sampl project swap add_subdirectori find_packag _config file httpsgithubcompybindpybindblobmastertoolspybindconfigcmakein _findpythonmod findpython mode cmake recommend ideal ad new modul call findpython highli improv search algorithm modern target tool use findpython pybind detect use exist target instead codeblock cmake cmake_minumum_requiredvers projectexampl languag cxx find_packagepython compon interpret develop requir find_packagepybind config requir add_subdirectorypybind pybind_add_moduleexampl examplecpp also use target list findpython defin pybind_findpython pybind perform findpython step mostli use build pybind test way chang search algorithm cmake invoc dpybind_findpythonon warn use findpython findpython dualtarget python use individu target list avoid target directli includ python part mani way hint forc discoveri specif python instal httpscmakeorgcmakehelplatestmodulefindpythonhtml_ set python_root_dir may common one though virtualenvvenv support conda support tend find correct python version often old system warn python librari ie libpythonxxa libpythonxxso unix avail case manylinux imag develop compon resolv findpython use embed function cmake allow specifi developmentmodul instead develop resolv issu versionad advanc interfac librari target pybind support modern cmake usag pattern set interfac target avail mode target provid pybindhead pybind header minimum compil requir pybindpython_no_regist quiet warningerror mix c higher python pybindpybind python header pybindhead pybindpython_no_regist python pybindpython_link_help link part pybindmodul pybindmodul everyth extens modul pybindpybind pythonmodul findpython cmake pybindpython_link_help pybindemb everyth embed python interpret pybindpybind pythonemb findpython python lib pybindlto pybindthin_lto altern interprocedural_optim ad linktim optim pybindwindows_extra bigobj mp msvc pybindopt_s os msvc os compil noth debug build two helper function also provid pybind_striptarget strip target use cmake_strip target built pybind_extensiontarget set correct extens soabi target use target build complex applic exampl add_python_modul function ident codeblock cmake cmake_minimum_requiredvers projectexampl languag cxx find_packagepybind requir add_subdirectorypybind add_libraryexampl modul maincpp target_link_librariesexampl privat pybindmodul pybindlto pybindwindows_extra pybind_extensionexampl pybind_stripexampl set_target_propertiesexampl properti cxx_visibility_preset hidden cuda_visibility_preset hidden instead set properti set cmake_ variabl initi correctli warn sinc pybind metatempl librari crucial certain compil flag provid ensur high qualiti code gener contrast pybind_add_modul command cmake interfac provid compos set target ensur retain flexibl expeci import provid set properti reffaq faqsymhidden contain explan need versionad _nopythonmod advanc nopython mode want complet control set pybind_nopython complet disabl python integr also happen run findpython findpython without run findpython give complet freedom integr exist system like scikitbuild httpsscikitbuildreadthedocsio_ pythonextens pybind_add_modul pybind_extens unavail target miss python specif behavior versionad embed python interpret addit extens modul pybind also support embed python c execut librari cmake simpli link pybindemb target provid everyth need get interpret run python header librari attach target unlik pybindmodul need manual set addit properti inform usag c see docadvancedembed codeblock cmake cmake_minimum_requiredvers projectexampl languag cxx find_packagepybind requir add_subdirectorypybind add_executableexampl maincpp target_link_librariesexampl privat pybindemb _building_manu build manual pybind headeronli librari henc necessari link special librari intermedi magic translat step linux compil exampl one given refsimple_exampl use follow command codeblock bash c wall share stdc fpic python pybind includ examplecpp examplepythonconfig extensionsuffix flag given assum your use python python chang execut appropri python python python pybind includ command fetch includ path pybind python header assum pybind instal use pip conda hasnt also manual specifi pathtopybindinclud togeth python includ path pythonconfig includ note python modul dont use special suffix simpli use exampleso instead examplepythonconfig extensionsuffix besid extensionsuffix option may may avail depend distribut latter case modul extens manual set maco build command almost also requir pass undefin dynamic_lookup flag ignor miss symbol build modul codeblock bash c wall share stdc undefin dynamic_lookup python pybind includ examplecpp examplepythonconfig extensionsuffix gener advis includ sever addit build paramet consider reduc size creat binari refer section refcmak detail exampl suitabl crossplatform cmakebas build system work platform includ window note linux maco better intent link libpython symbol resolv extens librari load python binari prefer might sever differ instal given python version eg systemprovid python one ship piec commerci softwar way plugin work version instead possibl import second python librari process alreadi contain one lead segfault build bazel build bazel build system use pybind_bazel httpsgithubcompybindpybind_bazel_ repositori gener bind code automat binder project tool automat gener pybind bind code introspect exist c codebas use llvmclang see binder_ document detail binder httpcppbinderreadthedocsioenlatestabouthtml autowig_ python librari wrap automat compil librari highlevel languag pars c code use llvmclang technolog gener wrapper use mako templat engin approach automat extens appli complex c librari compos thousand class incorpor modern metaprogram construct autowig httpsgithubcomstatiskitautowig robotpybuild_ pure python cross platform build tool aim simplifi creation python wheel pybind project provid crossproject depend manag addit abl autogener customiz pybindbas wrapper pars c header file robotpybuild httpsrobotpybuildreadthedocsio version number two version number c python must match combin check build pypi packag must valid pep httpswwwpythonorgdevpepspep_ version combin exampl codeblock c defin pybind_version_major x defin pybind_version_minor defin pybind_version_patch zdev beta pybind_version_patch zb rc zrc alway includ dot even though pep allow drop final releas must simpl integ releas new version pybind updat version number updat pybind_version_major etc includepybinddetailcommonh patch simpl integ updat pybind_versionpi match ensur inform setupcfg uptod like support python version add releas date docschangelogrst check make sure needschangelog httpsgithubcompybindpybindpullsqisaprisaclosedlabelaneedschangelog_ issu enter changelog clear label done git add git commit git push ensur ci pass fail due known flake issu either ignor restart ci add releas branch new minor version updat exist releas branch patch version new branch git checkout b vxi git push u origin vxi updat branch git checkout vxi git merg releas branch git push updat tag option skip github releas make nonannot tag git tag vxyz vxyz releas git push tag updat stabl git checkout stabl git merg master git push make github releas show ui send new releas notif user watch releas also upload pypi packag note use exist tag creat new lightweight tag could skip step gui method click creat new releas far right fill tag name didnt tag made fill releas name like version xyz option copyandpast changelog descript process markdown pandoc check prereleas betarc get partway cat docschangelogrst pandsoc f rst markdown cli method gh instal run gh releas creat vxyz version xyz prereleas add p get back work make sure master somewher els git checkout master updat version macro includepybinddetailcommonh set patch dev increment minor updat _versionpi match add spot indevelop updat docschangelogrst git add git commit git push version branch updat rememb set patch dev youd like bump homebrew run codeblock brew bumpformulapr url httpsgithubcompybindpybindarchivevxyztargz condaforg automat make pr hour automat merg issu manual packag need manual upload releas download releas job artifact upload twine also make file local recommend gener local directori like dirti sdist love pick random unrelatedhidden file procedur codeblock bash python pip instal build python build pybind_sdist_glob python build twine upload dist make sdist wheel final line upload _changelog changelog start version pybind releas use semant version httpsemverorg_ polici v jan minor miss function ad enum add miss enumvalu properti httpsgithubcompybindpybindpull_ allow thread termin avoid shutdown cpython via disarm gil_scoped_acquiregil_scoped_releas httpsgithubcompybindpybindpull_ fix improv behavior special case fix bug constructor object subclass would throw pass python object wrong type httpsgithubcompybindpybindpull_ type_cast integ convert python object __int__ anymor noconvert first round tri overload httpsgithubcompybindpybindpull_ cast c integ __index__ alway call consid convers consist python httpsgithubcompybindpybindpull_ build improv setup helper extra_compile_arg extra_link_arg automat set pybindextens prepend allow overridden userset extra_compile_arg extra_link_arg httpsgithubcompybindpybindpull_ setup helper dont trigger unus paramet warn httpsgithubcompybindpybindpull_ cmake support run warnuniniti activ httpsgithubcompybindpybindpull_ cmake avoid error includ two submodul directori httpsgithubcompybindpybindpull_ cmake fix static share ignor findpython mode httpsgithubcompybindpybindpull_ cmake respect set cmake_cxx_visibility_preset defin httpsgithubcompybindpybindpull_ cmake fix issu findpythonfindpython work pybindemb httpsgithubcompybindpybindpull_ cmake mix local instal pybind would priorit instal one local one regress httpsgithubcompybindpybindpull_ bug fix fix segfault multithread environ use scoped_ostream_redirect httpsgithubcompybindpybindpull_ leav docstr unset docstringrel option disabl rather set empti string httpsgithubcompybindpybindpull_ modul key builtin pybind use store intern chang stdstring python str type natur python chang python httpsgithubcompybindpybindpull_ fix assert error relat unhandl later overwritten except cpython debug build httpsgithubcompybindpybindpull_ fix pygil_scoped_acquir assert cpython debug build httpsgithubcompybindpybindpull_ fix issu test fail pytest httpsgithubcompybindpybindpull_ warn fix fix warn modifi constructor paramet flag shadow field set_flag wshadowfieldinconstructormodifi httpsgithubcompybindpybindpull_ suppress deprec warn oldstyl __init____setstate__ test httpsgithubcompybindpybindpull_ valgrind work fix invalid access call pybind __init__ nonpybind class instanc httpsgithubcompybindpybindpull_ fix variou minor memori leak pybind test suit httpsgithubcompybindpybindpull_ resolv memori leak cpp_function initi except occur httpsgithubcompybindpybindpull_ ad valgrind build check leak memoryrel ub ci httpsgithubcompybindpybindpull_ compil support intel compil activ c support due broken defin httpsgithubcompybindpybindpull_ support icc nvidia hpc sdk c mode httpsgithubcompybindpybindpull_ support intel oneapi compil icc add ci httpsgithubcompybindpybindpull_ v nov pyexec pyeval pyeval_fil add builtin modul __builtins__ global argument better match exec eval pure python httpsgithubcompybindpybindpull_ setup_help longer set minimum maco version higher current version httpsgithubcompybindpybindpull_ allow delet static properti httpsgithubcompybindpybindpull_ seal leak def_buff clean captur object class_ object goe scope httpsgithubcompybindpybindpull_ pybind_include_dir incorrect potenti caus regress expect includ python_include_dir pleas use target instead httpsgithubcompybindpybindpull_ ad paramet name pyenum_ constructor method avoid arg gener docstr httpsgithubcompybindpybindpull_ ad needs_recompil option function parallelcompil helper allow recompil skip base userdefin function httpsgithubcompybindpybindpull_ v oct see refupgradeguid help upgrad new version new featur keywordonli argument support python pykw_onli httpsgithubcompybindpybindpull_ positionalonli argument support python pypos_onli httpsgithubcompybindpybindpull_ pyis_fin class modifi block subclass cpython httpsgithubcompybindpybindpull_ ad pyprepend allow function place begin overload chain httpsgithubcompybindpybindpull_ access type object provid pytypeoft pytypeofh httpsgithubcompybindpybindpull_ perfect forward support method httpsgithubcompybindpybindpull_ ad pyerror_already_setdiscard_as_unrais httpsgithubcompybindpybindpull_ pyhash public httpsgithubcompybindpybindpull_ pyclass_union_typ support note write one data member union read anoth type pun ub c thu pybindbound enum never use convers httpsgithubcompybindpybindpull_ class check local scope regist member allow subclass member name parent enum httpsgithubcompybindpybindpull_ code correct featur error thrown __init__ forgotten subclass httpsgithubcompybindpybindpull_ throw error convers pybind type python object isnt valid instanc type pybyteso pyobject isnt byte instanc httpsgithubcompybindpybindpull_ throw convers str fail httpsgithubcompybindpybindpull_ api chang pymodul renam pymodule_ avoid issu c use unqualifi alia pymodul provid backward compat httpsgithubcompybindpybindpull_ public constructor pymodule_ deprec pleas use pybindmodule_create_extension_modul use public constructor fairli rare pybind_modul introduc httpsgithubcompybindpybindpull_ pybind_overload macro get_overload function replac correctlynam pybind_overrid get_overrid fix inconsist presenc close macro get_type_overload deprec httpsgithubcompybindpybindpull_ packag build improv python packag rework power use httpsgithubcompybindpybindpull_ refbuildsetuptool easier thank new pybindsetup_help modul provid util use setuptool pybind use via pep setup_requir directli import copi setup_helperspi project cmake configur file includ python packag use pybindget_cmake_dir python pybind cmakedir get directori cmake configur file includ sitepackag locat cmake_module_path use new pybindglob extra instal pybind instal cmake file header base environ standard locat pybindconfig anoth way write python pybind path set ad extern type support helper modul code import pybind type check httpsgithubcompybindpybindpull_ minimum cmake requir increas httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ full integr cmake c standard system compil featur replac pybind_cpp_standard gener config file portabl differ pythoncompilercmak version virtual environ priorit python_execut set venv virtualenv conda similar new findpython mode cmake featur nativ support like cmake_interprocedural_optim setcmake_cxx_visibility_preset hidden cuda languag support helper function pybind_strip pybind_extens pybind_find_import ad see doccmakeindex option reffindpythonmod refnopythonmod cmake httpsgithubcompybindpybindpull_ uninstal target ad httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ pybind_add_modul accept option opt_siz flag switch bind target sizebas optim global build type alway fix minsizerel except debug mode optim remain disabl minsizerel flag reduc binari size quit substanti platform httpsgithubcompybindpybindpull_ smaller develop focus featur fix move mkdocpi new repo pybindmkdoc_ longer submodul main repo pymemoryview segfault fix updat new pymemoryviewfrom_memori python document httpsgithubcompybindpybindpull_ fix buffer_info python httpsgithubcompybindpybindpull_ __eq__ defin __hash__ __hash__ set none httpsgithubcompybindpybindpull_ pyellipsi also work python httpsgithubcompybindpybindpull_ pointer stdtupl stdpair support cast httpsgithubcompybindpybindpull_ small fix numpi support pyarray use pyssize_t first argument type httpsgithubcompybindpybindpull_ ad miss signatur pyarray httpsgithubcompybindpybindpull_ unchecked_mutable_refer access oper const httpsgithubcompybindpybindpull_ pyvector support function return void httpsgithubcompybindpybindpull_ pycapsul support get_point set_point httpsgithubcompybindpybindpull_ fix crash differ instanc share pointer type httpsgithubcompybindpybindpull_ fix pylen clear python error state fail throw httpsgithubcompybindpybindpull_ bugfix relat extens test new github action ci httpsgithubcompybindpybindpull_ bug timezon issu eastern hemispher midnight fix httpsgithubcompybindpybindpull_ stdchronotime_point work resolut system httpsgithubcompybindpybindpull_ bug fix pyarray_t could accept array match request order httpsgithubcompybindpybindpull_ avoid segfault compil type remov python httpsgithubcompybindpybindpull_ pyargnon also respect pass keyword argument httpsgithubcompybindpybindpull_ pypi fix pypi x support includ pypi known issu pypi window httpsgithubcompybindpybindissues_ httpsgithubcompybindpybindpull_ cpython workaround undefin behavior maco segfault httpsgithubcompybindpybindpull_ cpython warn fix httpsgithubcompybindpybindpull_ improv c support test ci httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ improv still incomplet debug python interpret support httpsgithubcompybindpybindpull_ nvcc cuda support test ci httpsgithubcompybindpybindpull_ nvidia pgi compil support test ci httpsgithubcompybindpybindpull_ least intel explicitli requir compil intel httpsgithubcompybindpybindpull_ extens style check ci precommit_ support code modern check clangtidi expand doc includ new main page new instal section cmake helper page along dozen new section exist page github new doc contribut new issu templat _precommit httpsprecommitcom _pybindmkdoc httpsgithubcompybindpybindmkdoc v mar use c fold express type caster avail improv perform overload resolut function multipl argument httpsgithubcompybindpybindpull_ chang includ directori resolut pybind__init__pi instal setuppi fix number open issu pybind header could found certain environ httpsgithubcompybindpybindpull_ c char_t ustr support httpsgithubcompybindpybindpull_ cmake search python bbc httpsgithubcompybindpybindcommitbbc_ fix msysbas build environ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ stl bind stdvectorclear httpsgithubcompybindpybindpull_ readonli flag pybuff httpsgithubcompybindpybindpull_ except handl modul initi bfb httpsgithubcompybindpybindcommitbfb_ support link cpython debug build httpsgithubcompybindpybindpull_ fix issu involv avail use align new delet httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindcommit_ fix resourc leak upon interpret shutdown httpsgithubcompybindpybindpull_ fix error handl boolean caster httpsgithubcompybindpybindpull_ v oct adapt pybind c api convent chang python httpsgithubcompybindpybindpull_ v sep replac usag c construct httpsgithubcompybindpybindpull_ made ifdef futureproof python fd httpsgithubcompybindpybindcommitfd_ v sep fix problem involv implicit convers enumer integ python httpsgithubcompybindpybindpull_ v sep tri harder keep pybindintern data structur separ potenti abi incompat fix crash occur load multipl pybind extens eg compil gcc libstdc clang libc httpsgithubcompybindpybindpull_ cfa httpsgithubcompybindpybindcommitcfa_ ad support __await__ __aiter__ __anext__ protocol httpsgithubcompybindpybindpull_ pybind_add_modul dont strip symbol compil relwithdebinfo mode httpsgithubcompybindpybindpull_ enum_ reproduc python behavior compar invalid valu eg none string etc add back support __invert__ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ list insert oper pylist ad empti collect type ad pysetcontain pydictcontain httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ pydetailsoverload_cast_impl avail c mode use like overload_cast addit set paranthes httpsgithubcompybindpybindpull_ fix get_includ conda httpsgithubcompybindpybindpull_ stl_bindh neg index support httpsgithubcompybindpybindpull_ minor cmake fix add mingw compat httpsgithubcompybindpybindpull_ gilrel fix httpsgithubcompybindpybindpull_ bb httpsgithubcompybindpybindcommitbb_ minorsubtl fix improv httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ v june significantli reduc modul binari size compil c mode gccclang mode msvc function signatur alway precomput compil time previous avail c mode nonmsvc compil httpsgithubcompybindpybindpull_ add basic support tagbas static polymorph class provid method return desir type instanc httpsgithubcompybindpybindpull_ python type wrapper pyhandl pyobject etc support map python number protocol onto c arithmet oper oper oper etc httpsgithubcompybindpybindpull_ number improv relat enumer enum_ implement rewritten scratch reduc code bloat rather instanti full implement enumer code contain gener base class httpsgithubcompybindpybindpull_ valu method pyenum_ accept option docstr shown document associ enumer httpsgithubcompybindpybindpull_ check alreadi exist enum valu throw error present httpsgithubcompybindpybindpull_ support overalign type alloc via cs align new statement httpsgithubcompybindpybindpull_ ad pyellipsi method slice multidimension numpi array httpsgithubcompybindpybindpull_ numer improv mkdocpi script extract document c header file httpsgithubcompybindpybindpull_ pybind_add_modul allow includ python system includ path httpsgithubcompybindpybindpull_ pybindstlh convert string vectorstr anymor httpsgithubcompybindpybindissues_ mark static method fix autogener sphinx document httpsgithubcompybindpybindpull_ rethrow forc unwind except eg pthread termin httpsgithubcompybindpybindpull_ ad __contains__ method bind map stdmap stdunordered_map httpsgithubcompybindpybindpull_ improv gil_scoped_acquir httpsgithubcompybindpybindpull_ type caster support stddequet httpsgithubcompybindpybindpull_ support stdunique_ptr holder whose delet differ base deriv class httpsgithubcompybindpybindpull_ construct stl arrayvectorlik data structur iter ad extend oper httpsgithubcompybindpybindpull_ cmake build system improv project includ nonc file eg plain c cuda pybind_add_modul et al httpsgithubcompybindpybindpull_ fix asynchron invoc dealloc python function wrap stdfunction httpsgithubcompybindpybindpull_ fix regard return valu polici propag stl type caster httpsgithubcompybindpybindpull_ fix scope enum comparison httpsgithubcompybindpybindpull_ fix iostream redirect code releas gil httpsgithubcompybindpybindpull_ number cirel fix httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ v septemb use new python thread specif storag tss implement avail httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ fix newer msvc version c mode httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ propag return valu polici typespecif caster cast stl contain httpsgithubcompybindpybindpull_ allow ostreamredirect charact httpsgithubcompybindpybindpull_ set py_debug defin compil debug python build httpsgithubcompybindpybindpull_ untangl integ logic number type caster work custom type may castabl restrict set builtin type httpsgithubcompybindpybindpull_ cmake build system rememb python version cach file httpsgithubcompybindpybindpull_ fix custom smart pointer use stdaddressof obtain holder address instead oper httpsgithubcompybindpybindpull_ properli report except thrown modul initi httpsgithubcompybindpybindpull_ fix segment fault creat emptyshap numpi array httpsgithubcompybindpybindpull_ version intel c compil must check header file httpsgithubcompybindpybindpull_ minor typo fix improv test suit patch silenc compil warn vector support construct gener well extend list gener httpsgithubcompybindpybindpull_ v april pybind header locat detect replac new implement longer depend pip intern recent releas pip restrict access api httpsgithubcompybindpybindpull_ small adjust implement detail work around compil segment fault clang httpsgithubcompybindpybindpull_ minim support version intel compil sinc pybind v check explicit compiletim error rais compil meet requir httpsgithubcompybindpybindpull_ fix endiannessrel fault test suit httpsgithubcompybindpybindpull_ v februari fix segfault combin embed interpret shutdownreiniti extern load pybind modul httpsgithubcompybindpybindpull_ eigen support fix bug nxxn numpi input couldnt pass argument eigen vector eigen simpli compiletim fix nxxn matric httpsgithubcompybindpybindpull_ clarifi licens move licens contribut licens contributingmd licens contribut actual part softwar licens distribut isnt meant substanti chang licens project address concern claus made licens nonstandard httpsgithubcompybindpybindissues_ fix regress introduc broke bind function lvalu charact liter argument httpsgithubcompybindpybindpull_ msvc fix compil failur permiss ad flag appveyor test suit httpsgithubcompybindpybindpull_ fix __qualname__ gener turn fix class name especi nest class name shown gener docstr httpsgithubcompybindpybindpull_ updat faq suggest project citat refer httpsgithubcompybindpybindpull_ ad fix deprec warn compil c wdeprec turn add wdeprec test suit compil flag httpsgithubcompybindpybindpull_ fix outdat pypi url setuppi httpsgithubcompybindpybindpull_ fix refcount leak argument end pyarg argument function fix posit pyarg argument httpsgithubcompybindpybindpull_ fix potenti segfault result possibl prematur destruct pyargspykwarg argument overload function httpsgithubcompybindpybindpull_ fix del mapitem stl_bindh bound stl map httpsgithubcompybindpybindpull_ fix regress vx aggreg initi could unintent end constructor take templat stdinitializer_listt argument httpsgithubcompybindpybindpull_ fix issu call function keep_al polici nursepati pair would caus intern patient storag needlessli grow unboundedli nurs longliv httpsgithubcompybindpybindissues_ variou minor fix v septemb ad pymodule_reload member function reload modul httpsgithubcompybindpybindpull_ fix refer leak number convert httpsgithubcompybindpybindpull_ fix compil clang host gcc old libstdc isnt fulli c compliant httpsgithubcompybindpybindpull_ fix regress automat stdvectorbool caster would fail compil fix also appli contain return element proxi instead refer httpsgithubcompybindpybindpull_ fix regress pykeep_al polici could appli constructor httpsgithubcompybindpybindpull_ fix nullptr derefer load pymodule_loc type that regist extern modul httpsgithubcompybindpybindpull_ fix implicit convers accessor type deriv pyobject httpsgithubcompybindpybindpull_ name pybind_modulenam variabl macro httpsgithubcompybindpybindpull_ relax overli strict pypickl check match get set type httpsgithubcompybindpybindpull_ convers error tri inform like miss header caus eg forget pybindstlh httpsgithubcompybindpybindpull_ v august support embed python interpret see docdocument page advancedembed full overview new featur httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ codeblock cpp includ pybindembedh namespac py pybind int main pyscoped_interpret guard start interpret keep aliv pyprinthello world use python api support inherit multipl c base python httpsgithubcompybindpybindpull_ codeblock python cpp_modul import cppbase cppbase class pyderivedcppbas cppbase def __init__self cppbase__init__self c base must initi explicitli cppbase__init__self pybind_modul prefer way creat modul entri point pybind_plugin deprec see refmacro detail httpsgithubcompybindpybindpull_ codeblock cpp new pybind_moduleexampl mdefadd int int b return b old pybind_pluginexampl pymodul mexampl mdefadd int int b return b return mptr pybind header build system strictli enforc hidden symbol visibl extens modul seamless user see docupgrad use custom build system httpsgithubcompybindpybindpull_ support pymodule_loc type allow multipl modul export c type without conflict use opaqu type like stdvectorint pybind_vector pybind_map default pymodule_loc element builtin local type see refmodule_loc detail httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ custom constructor ad easili use lambda factori function return class instanc valu pointer holder supersed old placementnew __init__ techniqu see refcustom_constructor detail httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ codeblock cpp struct exampl examplestdstr pyclass_examplem exampl defpyinitstdstr exist constructor defpyinitint n custom constructor return stdmake_uniqueexamplestdto_stringn similarli custom constructor pickl support function bound use pypickl adaptor improv type safeti see docupgrad refpickl detail httpsgithubcompybindpybindpull_ builtin support convert c standard librari type gener convers improv c stdvariant support right box c equival eg boostvari also ad simpl userdefin special see refcpp_container_cast detail httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ outofthebox support c stdstring_view httpsgithubcompybindpybindpull_ improv compat builtin option convert httpsgithubcompybindpybindpull_ bool convert accept numpybool_ type defin __bool__ python x __nonzero__ python httpsgithubcompybindpybindpull_ ctopython caster effici move element rvalu contain whenev possibl httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ fix byte stdstringchar convers python httpsgithubcompybindpybindpull_ fix lifetim temporari c object creat pythontoc convers httpsgithubcompybindpybindpull_ scope guard call polici raii type eg pycall_guardpygil_scoped_releas pycall_guardpyscoped_ostream_redirect see refcall_polici detail httpsgithubcompybindpybindpull_ util redirect c stream python eg stdcout sysstdout scope guard pyscoped_ostream_redirect c context manag python see refostream_redirect httpsgithubcompybindpybindpull_ improv handl type except across modul boundari httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ fix destruct order pykeep_al nursepati object refer cycl httpsgithubcompybindpybindpull_ numpi buffer protocol relat improv support neg stride python buffer objectsnumpi array requir chang integ unsign sign relat c api note compil warn enabl may notic new convers warn upgrad resolv static_cast httpsgithubcompybindpybindpull_ support stdcomplex array insid pybind_numpy_dtyp httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ support construct pybuffer_info pyarray use arbitrari contain iter instead requir stdvector httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ explicitli check numpi version requir httpsgithubcompybindpybindpull_ support allowingprohibit none specif argument improv none overload resolut order see refnone_argu detail httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ ad pyexec shortcut pyevalpyeval_stat support c raw string liter input see refev httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ pyvector ignor nonvectoriz argument support member function httpsgithubcompybindpybindpull_ support bound method callback pybindfunctionalh httpsgithubcompybindpybindpull_ allow alias pybind method clsattrfoo clsattrbar httpsgithubcompybindpybindpull_ dont allow mix staticnonstat overload httpsgithubcompybindpybindpull_ fix overrid static properti deriv class httpsgithubcompybindpybindpull_ ad support write properti httpsgithubcompybindpybindpull_ improv deduct member function deriv class base arent regist pybind httpsgithubcompybindpybindpull_ codeblock cpp struct base int foo return struct deriv base work previous requir also bind base pyclass_derivedm deriv deffoo derivedfoo function actual base implement pyinit use c brace initi syntax construct instanc permit bind implicit constructor aggreg type httpsgithubcompybindpybindpull_ codeblock cpp struct aggreg int stdstring b pyclass_aggregatem aggreg defpyinitint const stdstring fix issu multipl inherit offset basederiv pointer httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ fix refer leak type object httpsgithubcompybindpybindpull_ improv support stdc stdclatest mode msvc httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ fix detect privat oper new msvc httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ intel c compil compat fix httpsgithubcompybindpybindpull_ fix implicit convers pyenum_ integ type python httpsgithubcompybindpybindpull_ ad pyhash fetch hash valu python object defhashpyself provid c stdhash python __hash__ method httpsgithubcompybindpybindpull_ fix __truediv__ python __itruediv__ python httpsgithubcompybindpybindpull_ pycapsul object support name attribut use interfac scipylowlevelcal httpsgithubcompybindpybindpull_ fix pymake_iter __next__ pasttheend call httpsgithubcompybindpybindpull_ ad error_already_setmatch check python except httpsgithubcompybindpybindpull_ deprec pyerror_already_setclear longer need follow simplif pyerror_already_set class httpsgithubcompybindpybindpull_ deprec pyhandleoper favor pyhandlei httpsgithubcompybindpybindpull_ deprec pyobjectborrowedpyobjectstolen use pyobjectborrowed_tpyobjectstolen_t instead httpsgithubcompybindpybindpull_ chang intern data structur version avoid conflict modul compil differ revis pybind httpsgithubcompybindpybindpull_ addit compiletim runtim error check inform messag httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ variou minor improv fix httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ test improv httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ v april fix minimum version requir msvc u httpsgithubcompybindpybindpull_ v march pybind perform function overload resolut two phase first phase consid exact type match second allow implicit convers take place special noconvert syntax use complet disabl implicit convers specif argument httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ fix regress static properti longer work class use multipl inherit pymetaclass attribut longer necessari deprec releas bind class static properti httpsgithubcompybindpybindpull_ class bound use pybind use custom metaclass httpsgithubcompybindpybindpull_ pyarg pykwarg mix posit argument bind function use pybind httpsgithubcompybindpybindpull_ improv support c unicod string charact type ad extens document regard pybind string convers behavior httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ pybind avoid expens copi convert eigen array numpi array vice versa httpsgithubcompybindpybindpull_ fast path pyvector work fullsiz group c fcontigu array nonfast path also faster sinc longer perform copi input argument except type convers necessari httpsgithubcompybindpybindpull_ ad fast uncheck access numpi array via proxi object httpsgithubcompybindpybindpull_ transpar support classspecif oper new oper delet implement httpsgithubcompybindpybindpull_ slimmer effici stlcompat iter interfac sequenc type httpsgithubcompybindpybindpull_ improv custom holder type support httpsgithubcompybindpybindpull_ nullptr none convers fix variou builtin type caster httpsgithubcompybindpybindpull_ enum_ expos member via special __members__ attribut httpsgithubcompybindpybindpull_ stdvector bind creat use stl_bindh option implement buffer protocol httpsgithubcompybindpybindpull_ autom c refer document use doxygen breath httpsgithubcompybindpybindpull_ ad minimum compil version assert httpsgithubcompybindpybindpull_ improv compat cz httpsgithubcompybindpybindpull_ improv pycapsul api use implement cleanup callback involv modul destruct time httpsgithubcompybindpybindpull_ variou minor improv fix httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ v jan fix pointer refer error type_cast msvc httpsgithubcompybindpybindpull_ fix segment test suit due typo cdeac httpsgithubcompybindpybindcommitcdeac_ v jan fix refer count regress affect type custom metaclass introduc vrc httpsgithubcompybindpybindpull_ quench cmake polici warn httpsgithubcompybindpybindpull_ vrc dec pybind develop excit issu releas candid pybind subsequ v releas plan earli januari next year incred amount effort went pybind last month lead releas jampack excit new featur numer usabl improv follow list link pr individu commit whenev applic happi christma support bind c class hierarchi make use multipl inherit httpsgithubcompybindpybindpull_ pypi support pybind support nightli build pypi interoper futur releas code chang necessari everyth work usual note target python branch support x ad cpyext extens support catch minor featur remain unsupport time notabl dynam attribut custom type httpsgithubcompybindpybindpull_ signific work document particular monolith advancedrst file restructur easier read hierarch organ httpsgithubcompybindpybindpull_ mani numpyrel improv objectori api access modifi numpi ndarray instanc replic much correspond numpi c api function httpsgithubcompybindpybindpull_ numpi array dtype array descriptor firstclass citizen expos via new class pydtyp structur dtype regist use pybind_numpy_dtyp macro special array constructor accept dtype object also ad one potenti caveat involv chang format descriptor string access via format_descriptorformat howev compat purpos old syntax format_descriptorvalu still work nonstructur data type httpsgithubcompybindpybindpull_ improv support structur dtype throughout system httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ fast access oper httpsgithubcompybindpybindpull_ constructor array whose storag own anoth object httpsgithubcompybindpybindpull_ ad constructor array array_t explicitli accept shape stride stride provid deduc assum ccontigu also ad simplifi constructor dimension case ad buffernumpi support charn stdarraychar n type ad memoryview wrapper type construct buffer_info eigen mani addit convers support noncontigu arraysslic httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ incompat chang class_class_ declar type provid access via buffer protocol must includ pybuffer_protocol annot argument class_ constructor declar type requir custom metaclass ie class includ static properti via command def_readwrite_stat must includ pymetaclass annot argument class_ constructor two chang necessari make type definit pybind futureproof support pypi via cpyext mechan httpsgithubcompybindpybindpull_ version pybind use redesign mechan instanti trampolin class use overrid virtual method within python led follow uservis syntax chang instead codeblock cpp pyclass_trampolineclassmyclass aliasmyclass write codeblock cpp pyclass_myclass trampolineclassmyclass importantli origin trampolin class specifi argument arbitrari order pyclass_ templat alia call gone new scheme zero overhead case python doesnt overrid function underli c class rev httpsgithubcompybindpybindcommitd_ ad eval eval_fil function evalu express statement string file rev dfc httpsgithubcompybindpybindcommitdfc_ pybind creat type modifi dictionari httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ support translat arbitrari c except python counterpart httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ report full backtrac mix cpython code better report import error fix gil manag except process httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ rev ed httpsgithubcompybindpybindcommited_ rev de httpsgithubcompybindpybindcommitde_ support bitlevel oper comparison serial c enumer httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ class_ constructor accept templat argument order httpsgithubcompybindpybindpull_ attribut item accessor complet interfac make possibl chain attribut objattrakeyattrbattrmethod httpsgithubcompybindpybindpull_ major redesign default convers constructor pytypesh httpsgithubcompybindpybindpull_ ad builtin support stdshared_ptr holder type longer necessari includ declar form pybind_declare_holder_typet stdshared_ptrt though continu wont caus error httpsgithubcompybindpybindpull_ new pyoverload_cast cast oper select among multipl possibl overload function exampl codeblock cpp pyclass_petm pet defset pyoverload_castintpetset set pet age defset pyoverload_castconst stdstring petset set pet name featur work ccapabl compil httpsgithubcompybindpybindpull_ c type automat cast python type eg assign attribut instanc follow legal codeblock cpp pymodul mattrconst previous pycast call necessari avoid compil error httpsgithubcompybindpybindpull_ redesign pytestbas test suit httpsgithubcompybindpybindpull_ instanc track detect refer leak test suit httpsgithubcompybindpybindpull_ pybind distinguish multipl differ instanc locat memori address differ type httpsgithubcompybindpybindpull_ improv logic move return valu polici httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ gener unpack api permit call python function c use notat fooa arg ka_a kb_a kwarg httpsgithubcompybindpybindpull_ pyprint function whose behavior match nativ python print function httpsgithubcompybindpybindpull_ ad pydict keyword constructorauto dictnumber_a name_aworld httpsgithubcompybindpybindpull_ ad pystrformat method _s liter pystr _sformat httpsgithubcompybindpybindpull_ ad pyrepr function equival python builtin repr httpsgithubcompybindpybindpull_ improv construct destruct logic holder type possibl refer instanc smart pointer holder type without construct holder desir pybind_declare_holder_typ macro accept option second paramet indic whether holder type use intrus refer count httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ map stateless c function python back free ie extra indirect argument convers overhead rev b httpsgithubcompybindpybindcommitb_ bind stdvalarrayt httpsgithubcompybindpybindpull_ improv support c capabl compil httpsgithubcompybindpybindpull_ bind stdoptionalt httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ stl_bindh gener improv support stdmap stdunordered_map httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ httpsgithubcompybindpybindpull_ stdtupl stdpair stdlist stdvector type caster accept python sequenc type input rev httpsgithubcompybindpybindcommit_ improv cmake python detect multiarchitectur linux httpsgithubcompybindpybindpull_ infrastructur select disabl enabl part automat gener docstr httpsgithubcompybindpybindpull_ refer reference_intern default return valu properti static nonstat properti respect httpsgithubcompybindpybindpull_ previou default automat httpsgithubcompybindpybindpull_ support stdunique_ptr nondefault delet delet pynodelet httpsgithubcompybindpybindpull_ deprec handlecal method new syntax call python function simpli handl also invok explicitli via handleoperatorx x option return valu polici print inform error messag make_tupl cast fail httpsgithubcompybindpybindpull_ creation holder type class deriv stdenable_shared_from_thi also work const valu httpsgithubcompybindpybindpull_ make_iter improv better compat variou type use prefix increment oper also accept iter differ beginend type long equal compar httpsgithubcompybindpybindpull_ arg accept wider rang argument type default valu httpsgithubcompybindpybindpull_ support keep_al nurs object may none httpsgithubcompybindpybindpull_ ad constructor str byte zerotermin char pointer char pointer length ad constructor str byte byte str perform utf decodingencod requir mani improv librari intern without uservis chang juli fix rare potenti sever issu garbag collector ran pybind type creation june redesign cmake build system export conveni pybind_add_modul function parent project stdvector type bind analog boostpython indexing_suit transpar convers spars dens eigen matric vector eigenh ad extraflag templat argument numpi array_t wrapper disabl enforc cast may lose precis eg creat overload differ precis complex vs realvalu matric prevent implicit convers float point valu integr type function argument fix incorrect default return valu polici function return share pointer dont allow regist type via class_ twice dont allow cast none valu c lvalu refer fix crash enum_oper trigger help command improv detect whether custom c type copymoveconstruct extend str type also work byte instanc ad name_a user defin string liter equival pyargnam specifi function argument via pyarg test verifi number argument run compil time ad noreturn attribut pybind_fail quench compil warn list function argument except text dispatch code find match overload ad pybind_overload_nam pybind_overload_pure_nam macro use overrid virtual method whose name differ c python eg __call__ oper variou minor iter make_iter improv transpar support __bool__ python x python x fix issu destructor unpickl object call minor cmake build system improv window new pybindarg pybindkwarg type creat function take arbitrari number argument keyword argument new syntax call python function c use arg kwarg function def_property_ correctli process docstr argument formerli caus segment fault mani mkdocpi improv enumer templat argument doc macro accept argument cygwin support document improv pickl support keep_al macro usag april ad new move return valu polici trigger c move semant automat return valu polici fall back case whenev rvalu refer encount significantli gener gil state routin use instead python troublesom pygilstate_ensur pygilstate_releas api redesign opaqu type drastic simplifi usag extend abil pass valu type const void keep_al fix dont fail patient functionalh acquir gil call python function ad python raii type wrapper none iter ad arg kwarg passthrough paramet pybindget_includ function iter improv fix document return valu polici opaqu type improv april skip due upload pypi gone wrong inabl recov httpsgithubcompypapackagingproblemsissu april polymorph type use rtti tri return closest type regist pybind pickl support serial unseri c instanc byte stream python ad conveni routin make_iter turn rang indic pair c iter iter python object ad len variad make_tupl function address rare issu could confus current virtual function dispatch anoth could lead crash multithread applic ad get_includ function python modul return path directori contain instal pybind header file document improv import issu symbol visibl pickl limit ad cast support stdreference_wrapp april transpar type convers stdwstring wchar_t allow pass nullptrvalu string transpar pass void pointer use capsul transpar support return valu wrap stdunique_ptr improv docstr gener compat sphinx nicer debug error messag default paramet construct fail support opaqu type bypass transpar convers layer stl contain redesign type cast interfac avoid ambigu could occasion caus compil error redesign properti implement fix crash due unfortun default return valu polici anaconda packag gener support march ad support intel c compil v ad support stl unord setmap data structur ad support stl link list data structur numpystyl broadcast support pybindvector pybind display verbos error messag argoper fail pybind intern data structur live versiondepend namespac avoid abi issu mani mani bugfix involv corner case advanc usag februari option effici gener function signatur compil time use c switch simpler gener way deal function default argument unus keyword argument function call detect caus error expect new keep_al call polici analog boostpython with_custodian_and_ward new pybindbas attribut indic subclass relationship improv interfac raii type wrapper pytypesh use raii type wrapper consist within pybind fix variou potenti refcount leak except occur ad new byte raii type wrapper map string python made handl relat raii class const correct use consist everywher got rid ugli __pybind__ attribut python sidethey store c hash tabl visibl python fix refcount leak involv numpi array bound function vastli improv handl sharedsmart pointer remov unnecessari copi oper pybindvector fix name clash pybind numpi header includ ad convers addit except type document improv use multipl extens modul smart pointer minor clarif unifi infrastructur pars variad argument class_ cpp_function fix licens text zlib claus bsd python compat fix remain issu access type anoth plugin modul ad enum comparison cast method improv sfinaebas detect whether type copyconstruct elimin mani warn unus variabl use offsetof support stdarray convers decemb document improv gil wrap function cast fix mani typo gener convers integ type improv support cast function object improv support stdshared_ptr convers initi support stdset convers fix type resolut issu type defin separ plugin modul cmake build system improv factor gener function nontempl code smaller code size ad code size compil time benchmark vs boostpython ad appveyor ci script octob initi releas miscellan _macro_not gener note regard conveni macro pybind provid conveni macro funcpybind_declare_holder_typ pybind_override_ sinc macro evalu preprocessor concept type get confus comma templat argument exampl consid codeblock cpp pybind_overridemyreturntypet classt func limit c preprocessor interpret five argument new argument begin comma rather three get around two altern use type alia wrap type use pybind_typ macro codeblock cpp version use type alia use returntyp myreturntypet use classtyp classt pybind_overridereturntyp classtyp func version use pybind_typ macro pybind_overridepybind_typemyreturntypet pybind_typeclasst func pybind_make_opaqu macro requir workaround _gil global interpret lock gil call c function python gil alway held class classgil_scoped_releas classgil_scoped_acquir use acquir releas global interpret lock bodi c function call way longrun c code parallel use multipl python thread take refoverriding_virtu exampl could realiz follow import chang highlight codeblock cpp emphasizelin class pyanim public anim public inherit constructor use animalanim trampolin need one virtual function stdstring goint n_time acquir gil call python code pygil_scoped_acquir acquir pybind_override_pur stdstring return type anim parent class go name function n_time argument pybind_moduleexampl pyclass_anim pyanim animalm anim anim defpyinit defgo animalgo pyclass_dogm dog anim defpyinit mdefcall_go anim anim stdstring releas gil call potenti longrun c code pygil_scoped_releas releas return call_goanim call_go wrapper also simplifi use call_guard polici see refcall_polici yield result codeblock cpp mdefcall_go call_go pycall_guardpygil_scoped_releas bind sequenc data type iter slice protocol etc pleas refer supplement exampl detail seealso file fileteststest_sequences_and_iteratorscpp contain complet exampl show bind sequenc data type includ length queri __len__ iter __iter__ slice protocol kind use oper partit code multipl extens modul straightforward split bind code multipl extens modul referenc type declar elsewher everyth work without special precaut one except rule occur extend type declar anoth extens modul recal basic exampl section refinherit codeblock cpp pyclass_pet petm pet petdefpyinitconst stdstring def_readwritenam petnam pyclass_dogm dog pet specifi parent defpyinitconst stdstring defbark dogbark suppos pet bind defin modul name basic wherea dog bind defin somewher els challeng cours variabl pet avail anymor though need indic inherit relationship constructor class_dog howev acquir follow codeblock cpp pyobject pet pyobject pymodule_importbasicattrpet pyclass_dogm dog pet defpyinitconst stdstring defbark dogbark altern specifi base class templat paramet option class_ perform autom lookup correspond python type like code howev also requir invok import function ensur pybind bind code modul basic execut codeblock cpp pymodule_importbas pyclass_dog petm dog defpyinitconst stdstring defbark dogbark natur method fail cyclic depend note pybind code compil hiddenbydefault symbol visibl eg via command line flag fvisibilityhidden gccclang requir proper pybind function interfer abil access type defin anoth extens modul work around requir manual export type access multipl extens modul pybind provid macro codeblock cpp class pybind_export dog public anim note also possibl although would rare requir share arbitrari c object extens modul runtim intern librari data share modul use capsul machineri f_ also util store modifi access userdefin data note extens modul see extens data built pybind version consid follow exampl codeblock cpp auto data reinterpret_castmydata pyget_shared_datamydata data data static_castmydata pyset_shared_datamydata new mydata snippet use sever separ compil extens modul first one import would creat mydata instanc associ mydata key pointer extens import later would abl access data behind pointer f httpsdocspythonorgextendingextendinghtmlusingcapsul modul destructor pybind provid explicit mechan invok cleanup code modul destruct time rare case function requir possibl emul use python capsul weak refer destruct callback codeblock cpp auto cleanup_callback perform cleanup function call gil held madd_object_cleanup pycapsulecleanup_callback approach potenti downsid instanc class expos within modul may still aliv cleanup callback invok whether accept gener depend applic altern capsul may also stash within type object ensur call instanc type collect codeblock cpp auto cleanup_callback mattrbaseclassattr_cleanup pycapsulecleanup_callback approach also expos potenti danger _cleanup attribut python may undesir api standpoint prematur explicit call python might lead undefin behavior yet anoth approach avoid issu involv weak refer cleanup callback codeblock cpp regist callback function invok baseclass object collect pycpp_funct cleanup_callback pyhandl weakref perform cleanup function call gil held weakrefdec_ref releas weak refer creat weak refer cleanup callback initi leak void pyweakrefmattrbaseclass cleanup_callbackreleas note pypi garbag collect object interpret exit altern approach also work cpython use pymodatexit modul f_ exampl codeblock cpp auto atexit pymodule_importatexit atexitattrregisterpycpp_funct perform cleanup function call gil held f httpsdocspythonorglibraryatexithtml gener document use sphinx sphinx f_ abil inspect signatur document string pybindbas extens modul automat gener beauti document varieti format python_exampl repositori f_ contain simpl exampl repositori use approach two potenti gotcha use approach first make sure result string contain kbdtab charact break docstr pars routin may want use c raw string liter conveni multilin comment conveni excess indent automat remov sphinx howev work import line indent consist ie codeblock cpp ok mdeffoo foo rmydelimit foo function paramet mydelimit ok mdeffoo foo rmydelimiterth foo function paramet mydelimit default pybind automat gener prepend signatur docstr function regist module_def class_def sometim behavior desir want provid signatur remov docstr complet exclud function sphinx document class option allow select suppress autogener signatur codeblock cpp pybind_moduleexampl pyoption option optionsdisable_function_signatur mdefadd int int b return b function add two number note chang set affect function bind creat lifetim option instanc goe scope end modul init function default set restor prevent unwant side effect f httpwwwsphinxdocorg f httpgithubcompybindpython_exampl _avoidingcpptypesindocstr avoid c type docstr docstr gener time declar eg def call point paramet return type known pybind custom type expos yet pyclass_ constructor custom type caster c type name use instead gener signatur docstr codeblock text __init__ __init__self examplefoo arg nsbar none limit circumv ensur c class regist pybind use paramet return type function codeblock cpp pybind_moduleexampl auto pyfoo pyclass_nsfoom foo auto pybar pyclass_nsbarm bar pyfoodefpyinitconst nsbar pybardefpyinitconst nsfoo smart pointer stdunique_ptr given class exampl python bind possibl return instanc wrap c uniqu pointer like codeblock cpp stdunique_ptrexampl create_exampl return stdunique_ptrexamplenew exampl codeblock cpp mdefcreate_exampl create_exampl word noth special need done return uniqu pointer way allow illeg use function argument instanc follow function signatur process pybind codeblock cpp void do_something_with_examplestdunique_ptrexampl ex signatur would impli python need give ownership object pass function gener possibl instanc object might referenc elsewher stdshared_ptr bind gener class classclass_ pass templat type denot special holder type use manag refer object holder type templat argument given default type name type stdunique_ptrtyp mean object dealloc python refer count goe zero possibl switch type refer count wrapper smart pointer use codebas reli instanc follow snippet caus stdshared_ptr use instead codeblock cpp pyclass_exampl stdshared_ptrexampl holder type objm exampl note particular class associ singl holder type one potenti stumbl block use holder type need appli consist guess what broken follow bind code codeblock cpp class child class parent public parent childstdmake_sharedchild child get_child return childget hint dont privat stdshared_ptrchild child pybind_moduleexampl pyclass_child stdshared_ptrchildm child pyclass_par stdshared_ptrparentm parent defpyinit defget_child parentget_child follow python code caus undefin behavior like segment fault codeblock python exampl import parent printparentget_child problem parentget_child return pointer instanc child fact instanc alreadi manag stdshared_ptr lost pass raw pointer case pybind creat second independ stdshared_ptr also claim ownership pointer end object freed twice sinc share pointer way know two way resolv issu type manag smart pointer class never use raw pointer function argument return valu word alway consist wrap pointer design holder type stdshared_ptr case signatur get_child modifi follow codeblock cpp stdshared_ptrchild get_child return child adjust definit child specifi stdenable_shared_from_thist see cppreference_ detail base class add small bit inform child allow pybind realiz alreadi exist stdshared_ptr commun case declar child look follow _cpprefer httpencppreferencecomwcppmemoryenable_shared_from_thi codeblock cpp class child public stdenable_shared_from_thischild _smart_point custom smart pointer pybind support stdunique_ptr stdshared_ptr right box custom smart pointer transpar convers enabl use macro invoc similar follow must declar top namespac level bind code codeblock cpp pybind_declare_holder_typet smartptrt first argument funcpybind_declare_holder_typ placehold name use templat paramet second argument thu feel free use identifi use consist side also dont use name type alreadi exist codebas macro also accept third option boolean paramet set fals default specifi codeblock cpp pybind_declare_holder_typet smartptrt true smartptrt alway initi pointer without risk inconsist multipl independ smartptr instanc believ sole owner pointer common situat true pass instanc use intrus refer count pleas take look refmacro_not use featur default pybind assum custom smart pointer standard interfac ie provid get member function access underli raw pointer case pybind holder_help must special codeblock cpp alway need custom holder type pybind_declare_holder_typet smartptrt need type get goe anoth name namespac pybind namespac detail templat typenam struct holder_helpersmartptrt special static const getconst smartptrt p return pgetpoint special inform pybind custom smartptr class provid get function via getpoint seealso file fileteststest_smart_ptrcpp contain complet exampl demonstr work custom referencecount holder type detail class section present advanc bind code class assum alreadi familiar basic docclass _overriding_virtu overrid virtual function python suppos c class interfac virtual function wed like overrid within python well focu class anim dog given specif exampl one would tradit c code codeblock cpp class anim public virtual anim virtual stdstring goint n_time class dog public anim public stdstring goint n_time overrid stdstring result int in_tim result woof return result let also suppos given plain function call function go arbitrari anim instanc codeblock cpp stdstring call_goanim anim return animalgo normal bind code class would look follow codeblock cpp pybind_moduleexampl pyclass_animalm anim defgo animalgo pyclass_dog animalm dog defpyinit mdefcall_go call_go howev bind imposs extend anim construct clearli requir kind trampolin redirect virtual call back python defin new type anim within python possibl requir helper class defin follow codeblock cpp class pyanim public anim public inherit constructor use animalanim trampolin need one virtual function stdstring goint n_time overrid pybind_override_pur stdstring return type anim parent class go name function c must match python name n_time argument macro cmacropybind_override_pur use pure virtual function cmacropybind_overrid use function default implement also two altern macro cmacropybind_override_pure_nam cmacropybind_override_nam take stringvalu name argument parent class name function slot defin name function python requir c python version function differ name eg oper vs __call__ bind code also need minor adapt highlight codeblock cpp emphasizelin pybind_moduleexampl pyclass_anim pyanim trampolinem anim defpyinit defgo animalgo pyclass_dog animalm dog defpyinit mdefcall_go call_go importantli pybind made awar trampolin helper class specifi extra templat argument classclass_ also combin templat argument custom holder type order templat type matter follow abl defin constructor usual bind made actual class trampolin helper class codeblock cpp emphasizelin pyclass_anim pyanim trampolinem anim defpyinit defgo pyanimalgo wrong use animalgo note howev suffici allow python class extend anim dog see refvirtual_and_inherit necessari step requir provid proper overrid support inherit class python session show overrid animalgo invok via virtual method call codeblock pycon exampl import dog call_god uwoof woof woof class catanim def goself n_time return meow n_time c cat call_goc umeow meow meow defin custom constructor deriv python class must ensur explicitli call bound c constructor use __init__ regardless whether default constructor otherwis memori c portion instanc left uniniti gener leav c instanc invalid state caus undefin behavior c instanc subsequ use versionchang default pybind metaclass throw typeerror detect __init__ call deriv class exampl codeblock python class dachshunddog def __init__self name dog__init__self without typeerror rais selfnam name def barkself return yap note direct __init__ constructor call super use simpl case linear inherit super may work begin mix python c multipl inherit thing fall apart due differ python mro cs mechan pleas take look refmacro_not use featur note overridden type return refer pointer type pybind convert python exampl numer valu stdstring builtin valueconvert type limit awar case c variabl refer valu store referenc python variabl pybind provid one pybind_overrid macro need static storag durat note mean invok overridden method instanc chang referenc valu store instanc type attempt modifi nonconst refer desir effect chang static cach variabl chang propag underli python instanc chang replac next time overrid invok warn cmacropybind_overrid accompani macro use call pybind_overload pybind v funcget_overrid use call get_overload name correct older macro function name may soon deprec order reduc confus overload function method pyoverload_cast see refclass seealso file fileteststest_virtual_functionscpp contain complet exampl demonstr overrid virtual function use pybind detail _virtual_and_inherit combin virtual function inherit combin virtual method inherit need sure provid overrid method want allow overrid deriv python class exampl suppos extend animaldog exampl follow codeblock cpp class anim public virtual stdstring goint n_time virtual stdstring name return unknown class dog public anim public stdstring goint n_time overrid stdstring result int in_tim result bark return result virtual stdstring bark return woof trampolin class anim must describ previou section overrid go name order allow python code inherit properli dog also need trampolin class dog overrid ad bark method go name method inherit anim even though dog doesnt directli overrid name method codeblock cpp class pyanim public anim public use animalanim inherit constructor stdstring goint n_time overrid pybind_override_purestdstr anim go n_time stdstring name overrid pybind_overridestdstr anim name class pydog public dog public use dogdog inherit constructor stdstring goint n_time overrid pybind_overridestdstr dog go n_time stdstring name overrid pybind_overridestdstr dog name stdstring bark overrid pybind_overridestdstr dog bark note note trail comma pybind_overid call name bark need portabl implement trampolin function take argument function take nonzero number argument trail comma must omit regist class deriv pybindregist class virtual method requir similar trampolin class even doesnt explicitli declar overrid virtual method codeblock cpp class huski public dog class pyhuski public huski public use huskyhuski inherit constructor stdstring goint n_time overrid pybind_override_purestdstr huski go n_time stdstring name overrid pybind_overridestdstr huski name stdstring bark overrid pybind_overridestdstr huski bark howev techniqu use avoid duplic especi help base class sever virtual method techniqu involv use templat trampolin class follow codeblock cpp templat class animalbas anim class pyanim public animalbas public use animalbaseanimalbas inherit constructor stdstring goint n_time overrid pybind_override_purestdstr animalbas go n_time stdstring name overrid pybind_overridestdstr animalbas name templat class dogbas dog class pydog public pyanimaldogbas public use pyanimaldogbasepyanim inherit constructor overrid pyanim pure virtual go nonpur one stdstring goint n_time overrid pybind_overridestdstr dogbas go n_time stdstring bark overrid pybind_overridestdstr dogbas bark techniqu advantag requir one trampolin method declar per virtual method pure virtual method overrid howev requir compil gener least mani method possibl pure virtual overridden pure virtual method expos class regist pybind use codeblock cpp pyclass_anim pyanim animalm anim pyclass_dog anim pydog dogm dog pyclass_huski dog pydoghuski huskym huski add anim dog huski definit note huski requir dedic trampolin templat class sinc neither declar new virtual method provid pure virtual method implement either repeatedvirtu templat trampolin method place creat python class inherit dog codeblock python class shihtzudog def barkself return yip seealso see file fileteststest_virtual_functionscpp complet exampl use duplic templat trampolin approach _extended_alias extend trampolin class function _extended_class_functionality_forced_trampolin forc trampolin class initialis trampolin class describ previou section default initi need specif initi python class actual inherit regist type instead mere creat instanc regist type regist constructor valid trampolin class regist class primarili perform reason trampolin class need anyth except virtual method dispatch initi trampolin class improv perform avoid need runtim check see inherit python instanc overridden method sometim howev use alway initi trampolin class intermedi class handl virtual method dispatch exampl class might perform extra class initi extra destruct oper might defin new member method enabl pythonlik interfac class order tell pybind alway initi trampolin class creat new instanc type class constructor declar use pyinit_aliasarg instead usual pyinitarg forc construct via trampolin class ensur member initi eventu destruct seealso see file fileteststest_virtual_functionscpp complet exampl show normal forc trampolin instanti differ method signatur macro introduc refoverriding_virtu cover standard use case expos c class python sometim hard unwieldi creat direct oneonon map argument method return type exampl would c signatur contain output argument use refer see also reffaq_reference_argu anoth way solv use method bodi trampolin class convers input return python method main build block funcget_overrid function allow retriev method implement python within trampolin method consid exampl c method signatur bool mymethodint_t valu return indic whether someth done valu made conveni python side allow python function return none int codeblock cpp bool myclassmymethodint_t valu pybindgil_scoped_acquir gil acquir gil scope tri look overridden method python side pybindfunct overrid pybindget_overridethi mymethod overrid method found auto obj overridevalu call python function pyisinstancepyint_obj check return python integ type valu objcastint_t cast assign valu return true return true valu use els return fals python return none return fals return fals altern return myclassmymethodvalu _custom_constructor custom constructor syntax bind constructor previous introduc work constructor appropri argument actual exist c side extend gener case pybind make possibl bind factori function constructor exampl suppos class like codeblock cpp class exampl privat exampleint privat constructor public factori function static exampl createint return examplea pyclass_examplem exampl defpyinitexamplecr possibl creat straightforward bind static creat method may sometim prefer expos constructor python side accomplish call defpyinit function refer return new instanc pass argument also possibl use approach bind function return new instanc raw pointer holder eg stdunique_ptr follow exampl show differ approach codeblock cpp class exampl privat exampleint privat constructor public factori function return valu static exampl createint return examplea constructor publicli callabl exampledoubl exampleint int examplestdstr pyclass_examplem exampl bind factori function constructor defpyinitexamplecr bind lambda function return pointer wrap holder defpyinitstdstr arg return stdunique_ptrexamplenew examplearg return raw pointer defpyinitint int b return new examplea b mix regular c constructor bind well defpyinitdoubl constructor invok python pybind call factori function store result c instanc python instanc combin factori function constructor refvirtu function trampolin overriding_virtu two approach first add constructor alia class take base valu rvaluerefer constructor avail use construct alia instanc valu return factori function second option provid two factori function pyinit first invok alia class requir ie class use inherit python second invok alia requir also specifi singl factori function alway return alia instanc result behaviour similar pyinit_alia describ refextend trampolin class document extended_alias follow exampl show differ factori approach class alia codeblock cpp includ pybindfactoryh class exampl public virtual exampl default class pyexampl public exampl public use exampleexampl pyexampleexampl base examplestdmovebas pyclass_exampl pyexamplem exampl return exampl pointer pyexampl need exampl instanc move via extra constructor pyexampl defpyinit return new exampl two callback defpyinit return new exampl alia need return new pyexampl alia need alway return alia instanc like pyinit_alia defpyinit return new pyexampl brace initi pybindinit intern use c brace initi call constructor target class mean use bind implicit constructor well codeblock cpp struct aggreg int stdstring b pyclass_aggregatem aggreg defpyinitint const stdstring note note brace initi preferenti invok constructor overload take stdinitializer_list rare event caus issu work around use pyinit lambda function construct new object desir _classes_with_non_public_destructor nonpubl destructor class privat protect destructor might eg case singleton pattern compil error occur creat bind via pybind underli issu stdunique_ptr holder type respons manag lifetim instanc refer destructor even dealloc ever take place order expos class privat protect destructor possibl overrid holder type via holder type argument class_ pybind provid helper class pynodelet disabl destructor invoc case crucial instanc dealloc c side avoid memori leak codeblock cpp definit class myclass privat myclass bind code pyclass_myclass stdunique_ptrmyclass pynodeletem myclass defpyinit _destructors_that_call_python destructor call python python function invok c destructor except may thrown type classerror_already_set error thrown class destructor stdtermin call termin process class destructor must catch except type classerror_already_set discard python except use funcerror_already_setdiscard_as_unrais everi python function treat possibl throw python gener stop yield item python throw stopiter except pass though c destructor gener stack frame hold last refer c object inform see refth document except unraisable_except codeblock cpp class myclass public myclass tri pyprinteven print danger destructor pyexecrais valueerrorthi unrais except catch pyerror_already_set e error_context inform wherewhi occur eg use __func__ get name current function ediscard_as_unraisable__func__ note pybind support c destructor mark noexceptfals versionad _implicit_convers implicit convers suppos instanc two type b use project easili convert instanc type b exampl could fix arbitrari precis number type codeblock cpp pyclass_am member pyclass_bm b defpyinita member mdeffunc const b invok function func use variabl contain instanc wed write funcba python hand c automat appli implicit type convers make possibl directli write funca situat ie b constructor convert follow statement enabl similar implicit convers python side codeblock cpp pyimplicitly_convertiblea b note implicit convers b work b custom data type expos python via pybind prevent runaway recurs implicit convers nonreentr implicit convers invok part anoth implicit convers type ie b fail _static_properti static properti section refproperti discuss creation instanc properti implement term c getter setter static properti also creat similar way expos getter setter static class attribut note implicit self argument also exist case use pass python type subclass instanc paramet often need c side follow exampl illustr instanti lambda getter function ignor codeblock cpp pyclass_foom foo def_property_readonly_staticfoo pyobject self return foo oper overload suppos given follow vector class vector addit scalar multipl oper implement use overload oper c codeblock cpp class vector public vectorfloat x float xx yy vector operatorconst vector v const return vectorx vx vy vector operatorfloat valu const return vectorx valu valu vector operatorconst vector v x vx vy return vector operatorfloat v x v v return friend vector operatorfloat f const vector v return vectorf vx f vy stdstring tostr const return stdto_stringx stdto_stringi privat float x follow snippet show oper conveni expos python codeblock cpp includ pybindoperatorsh pybind_moduleexampl pyclass_vectorm vector defpyinitfloat float defpyself pyself defpyself pyself defpyself float deffloat pyself defpyself float defpyself def__repr__ vectortostr note line like codeblock cpp defpyself float realli short hand notat codeblock cpp def__mul__ const vector float b return b pyis_oper use expos addit oper dont exist c side perform type custom pyis_oper flag marker need inform pybind oper return notimpl invok incompat argument rather throw type error note use conveni pyself notat addit header file filepybindoperatorsh must includ seealso file fileteststest_operator_overloadingcpp contain complet exampl demonstr work overload oper detail _pickl pickl support python pickl modul provid power facil serial deseri python object graph binari data stream pickl unpickl c class use pybind pypickl definit must provid suppos class question follow signatur codeblock cpp class pickleabl public pickleableconst stdstring valu m_valuevalu const stdstring valu const return m_valu void setextraint extra m_extra extra int extra const return m_extra privat stdstring m_valu int m_extra pickl support python enabl defin __setstate__ __getstate__ method f_ pybind class use pypickl bind two function codeblock cpp pyclass_pickleablem pickleabl defpyinitstdstr defvalu pickleablevalu defextra pickleableextra defsetextra pickleablesetextra defpypickl const pickleabl p __getstate__ return tupl fulli encod state object return pymake_tuplepvalu pextra pytupl __setstate__ tsize throw stdruntime_errorinvalid state creat new c instanc pickleabl ptcaststdstr assign addit state psetextratcastint return p __setstate__ part pypick definit follow rule singleargu version pyinit return type valu pointer holder type see refcustom_constructor detail instanc pickl follow codeblock python tri import cpickl pickl use cpickl python except importerror import pickl p pickleabletest_valu psetextra data pickledumpsp note note cpickl modul support python second argument dump also crucial select pickl protocol version sinc older version support newer version also finefor instanc specifi alway use latest avail version bewar failur follow instruct caus import pybind memori alloc routin skip unpickl like lead memori corrupt andor segment fault seealso file fileteststest_picklingcpp contain complet exampl demonstr pickl unpickl type use pybind detail f httpdocspythonorglibrarypicklehtmlpicklingclassinst deepcopi support python normal use refer assign sometim real copi need prevent chang copi copi modul f_ provid capabl python class pickl support automat also deepcopi compat howev perform improv ad custom __copy__ __deepcopy__ method python custom method mandatori deepcopi compat pybind support cpickl simpl class deepcopi enabl use copi constructor look follow codeblock cpp pyclass_copyablem copyabl def__copy__ const copyabl self return copyableself def__deepcopy__ const copyabl self pydict return copyableself memo_a note dynam attribut copi exampl f httpsdocspythonorglibrarycopyhtml multipl inherit pybind creat bind type deriv multipl base type aka multipl inherit specifi base templat argument class_ declar codeblock cpp pyclass_mytyp basetyp basetyp basetypem mytyp base type specifi arbitrari order even interspers alia type holder type discuss earlier documentpybind automat find requir first templat argument type declar also permit inherit multipli export c class python well inherit multipl python andor pybindexport class one caveat regard implement featur one base type specifi c type actual multipl base pybind assum particip multipl inherit lead undefin behavior case add tag multiple_inherit class constructor codeblock cpp pyclass_mytyp basetypem mytyp pymultiple_inherit tag redund need specifi multipl base type list _module_loc moduleloc class bind creat bind class pybind default make bind global across modul mean type defin one modul return modul result python type exampl allow follow codeblock cpp modulecpp bind code modul pyclass_petm pet defpyinitstdstr def_readonlynam petnam codeblock cpp modulecpp bind code modul mdefcreate_pet stdstring name return new petnam codeblock pycon modul import pet modul import create_pet pet petkitti pet create_petdoggi petnam doggi write bind code librari usual desir allow exampl split complex librari multipl python modul case howev caus conflict exampl suppos two unrel modul make use extern c librari provid custom bind one librari class result error python program attempt import modul directli indirectli conflict definit extern type codeblock cpp dogscpp bind extern librari class pyclasspetspetm pet defnam petspetnam bind local extens class pyclassdog petspetm dog defpyinitstdstr codeblock cpp catscpp complet separ project dogscpp bind extern librari class pyclasspetspetm pet defget_nam petspetnam bind local extend class pyclasscat petspetm cat defpyinitstdstr codeblock pycon import cat import dog traceback recent call last file stdin line modul importerror generic_typ type pet alreadi regist get around tell pybind keep extern class bind local modul pass pymodule_loc attribut pyclass_ constructor codeblock cpp pet bind dogscpp pyclasspetspetm pet pymodule_loc defnam petspetnam codeblock cpp pet bind catscpp pyclasspetspetm pet pymodule_loc defget_nam petspetnam make pythonsid dogspet catspet distinct class avoid conflict allow modul load c code dog modul cast return pet instanc result dogspet python instanc c code cat modul result catspet python instanc come two caveat howev first extern modul return cast pet instanc python unless also provid local bind second python point view two distinct class note local appli c python direct pass pymodule_loc type c function moduleloc class still consid mean follow function ad modul includ limit cat dog modul callabl either dogspet catspet argument codeblock cpp mdefpet_nam const petspet pet return petnam exampl suppos function ad catscpp dogscpp frogscpp frogscpp modul bind pet codeblock pycon import cat dog frog error ad pymodule_loc mycat mydog catscatfluffi dogsdogrov catspet_namemycat dogspet_namemydog fluffi rover catspet_namemydog dogspet_namemycat frogspet_namemycat rover fluffi fluffi possibl use pymodule_loc registr one modul even anoth modul regist type global within modul moduleloc definit c instanc cast associ bound python type modul valu convert global python type creat elsewher note stl bind provid via option filepybindstl_bindh header appli pymodule_loc default bound type might conflict modul see refstl_bind detail note local bound type actual tie share object binari gener compilerlink typic modul creat pybind_modul distinct signific possibl howev refembed emb multipl modul binari see refembedding_modul case local appli across embed modul within binari seealso file fileteststest_local_bindingscpp contain addit exampl demonstr pymodule_loc work bind protect member function normal possibl expos protect member function python codeblock cpp class protect int foo const return pyclass_am deffoo afoo error foo protect member one hand good nonpubl member arent meant access outsid may want make use protect function deriv python class follow pattern make possibl codeblock cpp class protect int foo const return class publicist public helper type expos protect function public use afoo inherit differ access modifi pyclass_am bind primari class deffoo publicistfoo expos protect method via publicist work publicistfoo exactli function afoo signatur address differ access modifi purpos publicist helper class make function name public intent expos protect virtual function overridden python publicist pattern combin previous describ trampolin codeblock cpp class public virtual default protect virtual int foo const return class trampolin public public int foo const overrid pybind_overrideint foo class publicist public public use afoo pyclass_a trampolinem trampolin deffoo publicistfoo publicist trampolin note msvc compil bug fix version requir explicit function bind form deffoo static_castint constpublicistfoo int const type afoo bind final class class may appropri inherit c class use final specifi ensur class inherit pyis_fin attribut use ensur python class inherit specifi type underli c type need declar final codeblock cpp class isfin final pyclass_isfinalm isfin pyis_fin tri inherit class python get error codeblock pycon class pyfinalchildisfin pass typeerror type isfin accept base type note attribut current ignor pypi versionad custom automat downcast explain refinherit pybind come builtin understand dynam type polymorph object c return pet python produc python object know wrap dog pet virtual method pybind know dog pet fact dog sometim might want provid automat downcast behavior creat bind class hierarchi use standard c polymorph llvm f_ long there way determin runtim whether downcast safe proceed special pybindpolymorphic_type_hook templat codeblock cpp enum class petkind cat dog zebra struct pet polymorph virtual method const petkind kind int age protect petpetkind _kind kind_kind struct dog pet dog petpetkinddog stdstring sound woof stdstring bark const return sound namespac pybind templat struct polymorphic_type_hookpet static const void getconst pet src const stdtype_info type note src may nullptr src srckind petkinddog type typeiddog return static_castconst dogsrc return src namespac pybind pybind want convert c pointer type base python object call polymorphic_type_hookbaseget determin downcast possibl get function use whatev runtim inform avail determin src paramet fact instanc class deriv inherit base find deriv set type typeidderiv return pointer deriv object contain src otherwis return src leav type default valu nullptr set type type pybind doesnt know downcast occur origin src pointer use static type base critic return pointer type argument get agre type set someth nonnul return pointer must point start object whose type type hierarchi expos use singl inherit simpl return src achiev fine gener case must cast src appropri derivedclass pointer eg use static_castderivedsrc allow return void f httpsllvmorgdocshowtosetupllvmstylerttihtml note pybind standard support downcast object whose type virtual method implement use polymorphic_type_hook use standard c abil determin mostderiv type polymorph object use typeid cast base pointer mostderiv type even dont know use dynamic_castvoid seealso file fileteststest_tagbased_polymorphiccpp contain complet exampl includ demonstr provid automat downcast entir class hierarchi without write one get function class access type object get type object c class alreadi regist use codeblock python pytyp t_pi pytypeoft directli use pytypeofob get type object python object like typeob python note type like pytypeofint work see reftypeconvers versionad except builtin c python except translat python call c code pybind pybind provid c except handler trap c except translat correspond python except rais python code handl pybind defin translat stdexcept standard subclass sever special except class translat specif python except note actual python except examin use python c api instead pure c object pybind translat correspond python except arriv except handler tabularcolumn ptextwidthptextwidth except thrown c translat python except type classstdexcept runtimeerror classstdbad_alloc memoryerror classstddomain_error valueerror classstdinvalid_argu valueerror classstdlength_error valueerror classstdout_of_rang indexerror classstdrange_error valueerror classstdoverflow_error overflowerror classpybindstop_iter stopiter use implement custom iter classpybindindex_error indexerror use indic bound access __getitem__ __setitem__ etc classpybindkey_error keyerror use indic bound access __getitem__ __setitem__ dictlik object etc classpybindvalue_error valueerror use indic wrong valu pass containerremov classpybindtype_error typeerror classpybindbuffer_error buffererror classpybindimport_error import_error except runtimeerror except translat bidirect catch c except defin trap except origin python catch classpybinderror_already_set see refbelow handling_python_exceptions_cpp detail also special except classcast_error thrown funchandlecal input argument convert python object regist custom translat default except convers polici describ insuffici pybind also provid support regist custom except translat regist simpl except convers translat c except new python except use c except method helper function avail codeblock cpp pyregister_exceptioncppexpmodul pyexp call creat python except class name pyexp given modul automat convert encount except type cppexp python except type pyexp possibl specifi base class except use third paramet handl codeblock cpp pyregister_exceptioncppexpmodul pyexp pyexc_runtimeerror pyexp caught pyexp runtimeerror class object builtin python except list python document standard except httpsdocspythonorgcapiexceptionshtmlstandardexceptions_ default base class pyexc_except advanc except translat need function pyregister_exception_translatortransl use regist function translat arbitrari except type may includ addit logic function take stateless callabl eg function pointer lambda function without captur variabl call signatur voidstdexception_ptr c except thrown regist except translat tri revers order registr ie last regist translat get first shot handl except insid translat stdrethrow_except use within tri block rethrow except one catch claus catch appropri except use claus use pyerr_setstr set python except exstr set python except custom except type see declar custom python except type declar pyexcept variabl use associ except translat note often use make static declar use insid lambda express without requir captur follow exampl demonstr hypothet except class mycustomexcept otherexcept first translat custom python except mycustomerror second translat standard python runtimeerror codeblock cpp static pyexceptionmycustomexcept excm mycustomerror pyregister_exception_translatorstdexception_ptr p tri p stdrethrow_exceptionp catch const mycustomexcept e excewhat catch const otherexcept e pyerr_setstringpyexc_runtimeerror ewhat multipl except handl singl translat shown exampl except caught current translat previous regist one get chanc none regist except translat abl handl except handl default convert describ previou section seealso file fileteststest_exceptionscpp contain exampl variou custom except translat custom except type note call either pyerr_setstr custom except call oper excstr everi except caught custom except translat failur caus python crash systemerror error return without except set except plan handl simpli caught may explicitli rethrown deleg previouslydeclar exist except translat _handling_python_exceptions_cpp handl except python c c call python function callback function manipul python object python rais except pybind convert python except c except type classpybinderror_already_set whose payload contain c string textual summari actual python except error_already_set use propag python except back python possibl handl c tabularcolumn ptextwidthptextwidth except rais python thrown c except type python except classpybinderror_already_set exampl codeblock cpp tri openmissingtxt r auto file pymodule_importioattropenmissingtxt r auto text fileattrread fileattrclos catch pyerror_already_set e ematchespyexc_filenotfounderror pyprintmissingtxt found els ematchespyexc_permissionerror pyprintmissingtxt found access els throw note c python except translat appli sinc method translat c except python vice versa error rais python alway error_already_set exampl illustr behavior codeblock cpp tri pyevalrais valueerrorth ring catch pyvalue_error boromir boromir never get ring assertfals catch pyerror_already_set frodo frodo get ring pyprinti take ring tri pyvalue_error request pybind rais python except throw pyvalue_errorth ball catch pyerror_already_set cat cat wont catch ball sinc pyvalue_error python except assertfals catch pyvalue_error dog dog catch ball pyprintrun spot run throw throw pybind rais valueerror handl error python c api possibl use refpybind wrapper wrapper instead call python c api directli call python c api directli addit manual manag refer count one must follow pybind error protocol outlin call python c api python return error throw pyerror_already_set allow pybind deal except pass back python interpret includ call error set function pyerr_setstr codeblock cpp pyerr_setstringpyexc_typeerror c api type error demo throw pyerror_already_set would easier simpli throw pytype_errorpybind wrapper type error altern ignor error call pyerr_clear httpsdocspythonorgcapiexceptionshtmlcpyerr_clear_ python error must thrown clear pythonpybind left invalid state _unraisable_except handl unrais except python function invok c destructor function mark noexcepttru collect noexcept function throw except way propag except function may throw throw fail catch except call graph c runtim call stdtermin abort immedi similarli python except rais classs __del__ method propag log python unrais error python system hook trigger httpsdocspythonorglibrarysyshtmlsysunraisablehook_ audit event log noexcept function trycatch block trap classerror_already_set except occur note pybind wrapper around python except classpybindvalue_error python except c except pybind catch convert python except noexcept function propag except either use approach convert python except discard_as_unrais shown codeblock cpp void nonthrowing_func noexcepttru tri catch pyerror_already_set ea discard python error use python api use c magic variabl __func__ python alreadi know type valu except object easdiscard_as_unraisable__func__ catch const stdexcept e log discard c except third_partylog versionad function proceed section make sure alreadi familiar basic bind function class explain docbas docclass follow guid applic free member function ie method python _return_value_polici return valu polici python c use fundament differ way manag memori lifetim object manag lead issu creat bind function return nontrivi type look type inform clear whether python take charg return valu eventu free resourc handl c side reason pybind provid sever return valu polici annot pass funcmodule_def funcclass_def function default polici enumreturn_value_policyautomat return valu polici tricki import get right illustr go wrong consid follow simpl exampl codeblock cpp function declar data get_data return _data pointer static data structur bind code mdefget_data get_data kaboom caus crash call python what go get_data call python return valu nativ c type must wrap turn usabl python type case default return valu polici enumreturn_value_policyautomat caus pybind assum ownership static _data instanc python garbag collector eventu delet python wrapper pybind also attempt delet c instanc via oper delet due impli ownership point entir applic come crash though error could also subtl involv silent data corrupt exampl polici enumreturn_value_policyrefer specifi global data instanc referenc without impli transfer ownership ie codeblock cpp mdefget_data get_data return_value_policyrefer hand right polici mani situat ignor ownership could lead resourc leak develop use pybind import familiar differ return valu polici includ situat call one follow tabl provid overview avail polici tabularcolumn ptextwidthptextwidth return valu polici descript enumreturn_value_policytake_ownership refer exist object ie creat new copi take ownership python call destructor delet oper object refer count reach zero undefin behavior ensu c side data dynam alloc enumreturn_value_policycopi creat new copi return object own python polici compar safe lifetim two instanc decoupl enumreturn_value_policymov use stdmove move return valu content new instanc own python polici compar safe lifetim two instanc move sourc destin decoupl enumreturn_value_policyrefer refer exist object take ownership c side respons manag object lifetim dealloc longer use warn undefin behavior ensu c side delet object still referenc use python enumreturn_value_policyreference_intern indic lifetim return valu tie lifetim parent object name implicit self argument call method properti intern polici work like enumreturn_value_policyrefer addit appli keep_al call polici describ next section prevent parent object garbag collect long return valu referenc python default polici properti getter creat via def_properti def_readwrit etc enumreturn_value_policyautomat default polici polici fall back polici enumreturn_value_policytake_ownership return valu pointer otherwis use enumreturn_value_policymov enumreturn_value_policycopi rvalu lvalu refer respect see descript differ polici enumreturn_value_policyautomatic_refer use polici enumreturn_value_policyrefer return valu pointer default convers polici function argument call python function manual c code ie via handleoper probabl wont need use return valu polici also appli properti codeblock cpp class_myclassm myclass def_propertydata myclassgetdata myclasssetdata pyreturn_value_policycopi technic code appli polici getter setter function howev setter doesnt realli care return valu polici make conveni ters syntax altern target argument pass classcpp_funct constructor codeblock cpp class_myclassm myclass def_propertydata pycpp_functionmyclassgetdata pyreturn_value_policycopi pycpp_functionmyclasssetdata warn code invalid return valu polici might access uniniti memori free data structur multipl time lead hardtodebug nondetermin segment fault henc worth spend time understand differ option tabl note one import aspect polici appli instanc pybind seen case polici clarifi essenti question return valu lifetim ownership pybind know instanc alreadi identifi type address memori return exist python object wrapper rather creat new copi note next section refcall_polici discuss call polici specifi addit return valu polici list call polici indic refer relationship involv return valu paramet function note altern elabor call polici lifetim manag logic consid use smart pointer see section refsmart_point detail smart pointer tell whether object still referenc c python gener elimin kind inconsist lead crash undefin behavior function return smart pointer necessari specifi return valu polici _call_polici addit call polici addit return valu polici call polici specifi indic depend paramet ensur certain state function call keep aliv gener polici requir c object kind contain anoth object ad contain keep_alivenurs patient indic argument index patient kept aliv least argument index nurs freed garbag collector argument indic start one zero refer return valu method index refer implicit pointer regular argument begin index arbitrarili mani call polici specifi nurs valu none detect runtim call polici noth nurs pybindregist type implement intern reli abil creat weak refer nurs object nurs object pybindregist type support weak refer except thrown consid follow exampl bind code list append oper tie lifetim newli ad element underli contain codeblock cpp pyclass_listm list defappend listappend pykeep_al consist argument index ident constructor index still refer implicit pointer ie object construct index refer return type presum void constructor view like function follow exampl tie lifetim constructor element construct object codeblock cpp pyclass_nursem nurs defpyinitpati pykeep_al note keep_al analog with_custodian_and_ward nurs patient with_custodian_and_ward_postcal nursepati polici boostpython call guard call_guardt polici allow scope guard type place around function call exampl definit codeblock cpp mdeffoo foo pycall_guardt equival follow pseudocod codeblock cpp mdeffoo arg scope_guard return fooarg forward argument requir defaultconstruct otherwis scope guard work use combin gil_scoped_releas see refgil multipl guard also specifi pycall_guardt constructor order left right destruct happen revers seealso file fileteststest_call_policiescpp contain complet exampl demonstr use keep_al call_guard detail _python_objects_as_arg python object argument pybind expos major python type use thin c wrapper class wrapper class also use paramet function bind make possibl directli work nativ python type c side instanc follow statement iter python dict codeblock cpp void print_dictpydict dict easili interact python type auto item dict stdcout key stdstringpystritemfirst valu stdstringpystritemsecond stdendl export codeblock cpp mdefprint_dict print_dict use python usual codeblock pycon print_dictfoo bar hello keyfoo valu keybar valuehello inform use python object c see docadvancedpycppindex accept arg kwarg python provid use mechan defin function accept arbitrari number argument keyword argument codeblock python def genericarg kwarg someth arg kwarg function also creat use pybind codeblock cpp void genericpyarg arg pykwarg kwarg someth arg kwarg someth kwarg bind code mdefgener gener class pyarg deriv pytupl pykwarg deriv pydict may also use one may combin argument long pyarg pykwarg argument last argument accept function pleas refer exampl detail iter cast entri c object demonstr also avail teststest_kwargs_and_defaultscpp note combin arg kwarg refkeyword_arg includ pyarg tag pyarg pykwarg argument default argument revisit section refdefault_arg previous discuss basic usag default argument use pybind one noteworthi aspect implement default argument convert python object right declar time consid follow exampl codeblock cpp pyclass_myclassmyclass defmyfunct pyargarg sometyp case pybind must alreadi set deal valu type sometyp via prior instanti pyclass_sometyp except thrown anoth aspect worth highlight preview default argument function signatur gener use object __repr__ method avail signatur may help eg codeblock pycon function myfunct signatur myclass arg sometyp sometyp object xbb nonetyp first way address defin sometype__repr__ altern possibl specifi humanread preview default argument manual use arg_v notat codeblock cpp pyclass_myclassmyclass defmyfunct pyarg_varg sometyp sometyp sometim may necessari pass null pointer valu default argument case rememb cast underli type question like codeblock cpp pyclass_myclassmyclass defmyfunct pyargarg static_castsometyp nullptr keywordonli argument python introduc keywordonli argument specifi unnam argument function definit codeblock python def fa b posit via keyword b must via keyword pass fa b good fb good f b good f typeerror f take posit argument given pybind provid pykw_onli object allow implement behaviour specifi object posit keywordonli argument annot regist function codeblock cpp mdeff int int b pyarga pykw_onli pyargb note current combin pyarg argument featur requir python work versionad positionalonli argument python introduc new positionalonli argument syntax use function definit note convent cpython posit argument pow sinc python thing version python use pypos_onli codeblock cpp mdeff int int b pyarga pypos_onli pyargb give argument keyword combin keywordonli argument well versionad _nonconverting_argu nonconvert argument certain argument type may support convers one type anoth exampl convers refimplicit_convers declar use pyimplicitly_convertibleab call method accept doubl integ argument call stdcomplexfloat argument noncomplex python type exampl float requir option pybindcomplexh header call function take eigen matrix refer numpi array wrong type incompat data layout requir option pybindeigenh header behaviour sometim undesir bind code may prefer rais error rather convert argument behaviour obtain pyarg call noconvert method pyarg object codeblock cpp mdeffloats_onli doubl f return f pyargfnoconvert mdeffloats_pref doubl f return f pyargf attempt call second function one without noconvert integ succeed attempt call noconvert version fail typeerror codeblock pycon floats_pref floats_onli traceback recent call last file stdin line modul typeerror floats_onli incompat function argument follow argument type support f float float invok may cours combin var_a shorthand notat see refkeyword_arg andor refdefault_arg also permit omit argument name use pyarg constructor without argument name ie specifi pyargnoconvert note specifi pyarg option necessari provid number option bound function argument thu want enabl noconvert behaviour one sever argument need specifi pyarg annot argument noconvert argument modifi pyargnoconvert _none_argu allowprohibit none argument c type regist classpyclass_ pass argument function take instanc pointer share holder eg shared_ptr custom copyabl holder describ refsmart_point pybind allow none pass python result call c function nullptr empti holder argument explicitli enabl disabl behaviour use none method classpyarg object codeblock cpp pyclass_dogm dogdefpyinit pyclass_catm catdefpyinit mdefbark dog dog stdstring dog return woof call dog instanc els return dog call none dog nullptr pyargdognonetru mdefmeow cat cat stdstring cant call none argument return meow pyargcatnonefals python call barknon return string dog attempt call meownon rais typeerror codeblock pycon anim import dog cat bark meow barkdog woof meowcat meow barknon dog meownon traceback recent call last file stdin line modul typeerror meow incompat function argument follow argument type support cat animalscat str invok none default behaviour tag unspecifi allow none note even nonetru specifi argument none convert nullptr custom refopaqu opaqu type pointer builtin type doubl int stl type stdvectort pybindstlh includ copi convert c see docadvancedcastoverview allow none argument pass option argument copi type consid use stdoptionalt _overload_resolut overload resolut order function method multipl overload call python pybind determin overload call two pass first pass attempt call overload without allow argument convers everi argument specifi pyargnoconvert describ overload succe noconvers first pass second pass attempt argument convers allow except prohibit via explicit pyargnoconvert attribut function definit second pass also fail typeerror rais within pass overload tri order regist pybind pyprepend tag ad definit function place begin overload sequenc instead allow user overload proceed built function mean practic pybind prefer overload requir convers argument overload otherwis prefer earlierdefin overload laterdefin one note pybind priorit base numberpattern overload argument pybind priorit function requir one convers one requir three priorit overload requir convers overload requir convers least one argument versionad pyprepend tag _embed embed interpret pybind mainli focus extend python use c also possibl revers emb python interpret c program document page still appli refer gener pybind usag section cover extra thing requir embed get start basic execut embed interpret creat line cmake pybindemb target shown inform see doccompil codeblock cmake cmake_minimum_requiredvers projectexampl find_packagepybind requir add_subdirectorypybind add_executableexampl maincpp target_link_librariesexampl privat pybindemb essenti structur maincpp file look like codeblock cpp includ pybindembedh everyth need embed namespac py pybind int main pyscoped_interpret guard start interpret keep aliv pyprinthello world use python api interpret must initi use python api includ function class pybind raii guard class scoped_interpret take care interpret lifetim guard destroy interpret shut clear memori python function call execut python code differ way run python code one option use eval exec eval_fil explain refev quick exampl context execut embed interpret codeblock cpp includ pybindembedh namespac py pybind int main pyscoped_interpret guard pyexecr kwarg dictnameworld number messag hello name answer numberformatkwarg printmessag altern similar result achiev use pybind api see docadvancedpycppindex detail codeblock cpp includ pybindembedh namespac py pybind use namespac pyliter int main pyscoped_interpret guard auto kwarg pydictname_aworld number_a auto messag hello name answer number_sformatkwarg pyprintmessag two approach also combin codeblock cpp includ pybindembedh includ iostream namespac py pybind use namespac pyliter int main pyscoped_interpret guard auto local pydictname_aworld number_a pyexecr messag hello name answer numberformatloc pyglob local auto messag localsmessagecaststdstr stdcout messag import modul python modul import use module_import codeblock cpp pymodule_ sy pymodule_importsi pyprintsysattrpath conveni current work directori includ syspath embed interpret make easi import local python file codeblock python calcpi locat work directori def addi j return j codeblock cpp pymodule_ calc pymodule_importcalc pyobject result calcattradd int n resultcastint assertn modul reload use module_reload sourc modifi eg extern process use scenario applic import user defin data process script need updat chang user note function reload modul recurs _embedding_modul ad embed modul embed binari modul ad use pybind_embedded_modul macro note definit must place global scope import like modul codeblock cpp includ pybindembedh namespac py pybind pybind_embedded_modulefast_calc pymodule_ use bind function class mdefadd int int j return j int main pyscoped_interpret guard auto fast_calc pymodule_importfast_calc auto result fast_calcattradd castint assertresult unlik extens modul singl binari modul creat embed side unlimit number modul ad use multipl pybind_embedded_modul definit long uniqu name modul ad python list builtin also import pure python file load interpret everyth interact natur codeblock python py_modulepi locat work directori import cpp_modul cpp_modulea b codeblock cpp includ pybindembedh namespac py pybind pybind_embedded_modulecpp_modul mattra int main pyscoped_interpret guard auto py_modul pymodule_importpy_modul auto local pydictfmt_a py_moduleattr__dict__ assertlocalsacastint assertlocalsbcastint pyexecr c b messag fmtformata b c pyglob local assertlocalsccastint assertlocalsmessagecaststdstr interpret lifetim python interpret shut scoped_interpret destroy creat new instanc restart interpret altern initialize_interpret finalize_interpret pair function use directli set state time modul creat pybind safe reiniti interpret restart howev may appli thirdparti extens modul issu python complet unload extens modul sever caveat regard interpret restart short memori may freed either due python refer cycl usercr global data detail found cpython document warn creat two concurr scoped_interpret guard fatal error call initialize_interpret second time interpret alreadi initi use raw cpython api function py_initi py_fin properli handl lifetim pybind intern data subinterpret support creat multipl copi scoped_interpret possibl repres main python interpret subinterpret someth differ permit exist multipl interpret advanc featur cpython api handl care pybind current offer c interfac subinterpret refer cpython document detail regard featur well mention coupl caveat subinterpret support pybind subinterpret receiv independ copi embed modul instead share modif one interpret may reflect anoth manag multipl thread multipl interpret gil challeng sever caveat even within pure cpython api pleas refer python doc detail pybind keep mind gil_scoped_releas gil_scoped_acquir take subinterpret account _numpi numpi buffer protocol python support extrem gener conveni approach exchang data plugin librari type expos buffer view f_ provid fast direct access raw intern data represent suppos want bind follow simplist matrix class codeblock cpp class matrix public matrixsize_t row size_t col m_rowsrow m_colscol m_data new floatrowscol float data return m_data size_t row const return m_row size_t col const return m_col privat size_t m_row m_col float m_data follow bind code expos matrix content buffer object make possibl cast matric numpi array even possibl complet avoid copi oper python express like nparraymatrix_inst copi fals codeblock cpp pyclass_matrixm matrix pybuffer_protocol def_buffermatrix pybuffer_info return pybuffer_info mdata pointer buffer sizeoffloat size one scalar pyformat_descriptorfloatformat python structstyl format descriptor number dimens mrow mcol buffer dimens sizeoffloat mcol stride byte index sizeoffloat support buffer protocol new type involv specifi special pybuffer_protocol tag pyclass_ constructor call def_buff method lambda function creat pybuffer_info descript record demand describ given matrix instanc content pybuffer_info mirror python buffer protocol specif codeblock cpp struct buffer_info void ptr pyssize_t items stdstring format pyssize_t ndim stdvectorpyssize_t shape stdvectorpyssize_t stride creat c function take python buffer object argument simpli use type pybuff one argument buffer exist great varieti configur henc safeti check usual necessari function bodi see basic exampl defin custom constructor eigen doubl precis matrix eigenmatrixxd type support initi compat buffer object eg numpi matrix codeblock cpp bind matrixxd eigen type python typedef eigenmatrixxd matrix typedef matrixscalar scalar constexpr bool rowmajor matrixflag eigenrowmajorbit pyclass_matrixm matrix pybuffer_protocol defpyinitpybuff b typedef eigenstrideeigendynam eigendynam stride request buffer descriptor python pybuffer_info info brequest saniti check infoformat pyformat_descriptorscalarformat throw stdruntime_errorincompat format expect doubl array infondim throw stdruntime_errorincompat buffer dimens auto stride stride infostridesrowmajor pyssize_tsizeofscalar infostridesrowmajor pyssize_tsizeofscalar auto map eigenmapmatrix stride static_castscalar infoptr infoshap infoshap stride return matrixmap refer def_buff call eigen data type look follow codeblock cpp def_buffermatrix pybuffer_info return pybuffer_info mdata pointer buffer sizeofscalar size one scalar pyformat_descriptorscalarformat python structstyl format descriptor number dimens mrow mcol buffer dimens sizeofscalar rowmajor mcol sizeofscalar rowmajor mrow stride byte index much easier approach bind eigen type although limit refer section docadvancedcasteigen seealso file fileteststest_bufferscpp contain complet exampl demonstr use buffer protocol pybind detail f httpdocspythonorgcapibufferhtml array exchang pybuff pyarray snippet restrict function accept numpi array rather type python object satisfi buffer protocol mani situat want defin function accept numpi array certain data type possibl via pyarray_tt templat instanc follow function requir argument numpi array contain doubl precis valu codeblock cpp void fpyarray_tdoubl array invok differ type eg integ list integ bind code attempt cast input numpi array request type featur requir filepybindnumpyh header includ note filepybindnumpyh depend numpi header thu use without declar buildtim depend numpi numpi runtim depend data numpi array guarante pack dens manner furthermor entri separ arbitrari column row stride sometim use requir function accept dens array use either c rowmajor fortran columnmajor order accomplish via second templat argument valu pyarrayc_styl pyarrayf_styl codeblock cpp void fpyarray_tdoubl pyarrayc_styl pyarrayforcecast array pyarrayforcecast argument default valu second templat paramet ensur nonconform argument convert array satisfi specifi requir instead tri next function overload structur type order pyarray_t work structur record type first need regist memori layout type done via pybind_numpy_dtyp macro call plugin definit code expect type follow field name codeblock cpp struct int x doubl struct b int z pybind_moduletest pybind_numpy_dtypea x pybind_numpy_dtypeb z b use templat argument pyarray_t structur consist fundament arithmet type stdcomplex previous regist substructur array c array stdarray support static assert prevent mani type unsupport structur still user respons use plain structur safe manipul raw memori without violat invari vector function suppos want bind function follow signatur python process arbitrari numpi array argument vector matric gener nd array addit normal argument codeblock cpp doubl my_funcint x float doubl z includ pybindnumpyh header extrem simpl codeblock cpp mdefvectorized_func pyvectorizemy_func invok function like caus call made my_func array element signific advantag compar solut like numpyvector loop element run entir c side crunch tight optim loop compil result return numpi array type numpydtypefloat codeblock pycon x nparray nparray z result vectorized_funcx z scalar argument z transpar replic time input array x automat convert right type type numpydtypeint need numpydtypeint numpydtypefloat respect note arithmet complex pod type pass valu const refer vector argument pass asi function take rvalu refer argument vector case comput complic reduc vector necessari creat access buffer content manual follow snippet contain complet exampl show work code somewhat contriv sinc could done simpli use vector codeblock cpp includ pybindpybindh includ pybindnumpyh namespac py pybind pyarray_tdoubl add_arrayspyarray_tdoubl input pyarray_tdoubl input pybuffer_info buf inputrequest buf inputrequest bufndim bufndim throw stdruntime_errornumb dimens must one bufsiz bufsiz throw stdruntime_errorinput shape must match pointer pass numpi alloc buffer auto result pyarray_tdoublebufs pybuffer_info buf resultrequest doubl ptr static_castdoubl bufptr doubl ptr static_castdoubl bufptr doubl ptr static_castdoubl bufptr size_t idx idx bufshap idx ptridx ptridx ptridx return result pybind_moduletest mdefadd_array add_array add two numpi array seealso file fileteststest_numpy_vectorizecpp contain complet exampl demonstr use funcvector detail direct access perform reason particularli deal larg array often desir directli access array element without intern check dimens bound everi access indic known alreadi valid avoid check array class array_tt templat class offer uncheck proxi object use uncheck access uncheckedn mutable_uncheckedn method n give requir dimension array codeblock cpp mdefsum_d pyarray_tdoubl x auto r xuncheck x must ndim nonwrit doubl sum pyssize_t rshape pyssize_t j j rshape j pyssize_t k k rshape k sum ri j k return sum mdefincrement_d pyarray_tdoubl x auto r xmutable_uncheck throw ndim flagswrit fals pyssize_t rshape pyssize_t j j rshape j pyssize_t k k rshape k ri j k pyargnoconvert obtain proxi array object must specifi data type number dimens templat argument auto r myarraymutable_uncheckedfloat number dimens known compil time omit dimens templat paramet ie call arr_tuncheck arruncheckedt give proxi object work way result less optimiz code thu small effici loss tight loop note return proxi object directli refer array data read shape stride writeabl flag construct must take care ensur referenc array destroy reshap durat return object typic limit scope return instanc return proxi object support method pyarray use dropin replac exist indexcheck use pyarray rndim return number dimens rdata rmutable_data return pointer const data respect given indic latter avail proxi obtain via amutable_uncheck items return size item byte ie sizeoft ndim return number dimens shapen return size dimens n size return total number element ie product shape nbyte return number byte use referenc element ie items time size seealso file fileteststest_numpy_arraycpp contain addit exampl demonstr use featur ellipsi python provid conveni ellipsi notat often use slice multidimension array instanc follow snippet extract middl dimens tensor first last index set zero python syntact sugar avail singleton ellipsi type ellipsi still use directli codeblock python numpi array b function pyellipsi function use perform oper c side codeblock cpp pyarray numpi array pyarray b apymake_tupl pyellipsi versionchang pyellipsi also avali python memori view case simpli want provid direct accessor cc buffer without concret class object return memoryview object suppos wish expos memoryview x uint_t array follow codeblock cpp const uint_t buffer mdefget_memoryviewd return pymemoryviewfrom_buff buffer buffer pointer shape row col sizeofuint_t sizeofuint_t stride byte approach meant provid memoryview cc buffer manag python user respons manag lifetim buffer use memoryview creat way delet buffer c side result undefin behavior also use memoryviewfrom_memori simpl contigu buffer codeblock cpp mdefget_memoryviewd return pymemoryviewfrom_memori buffer buffer pointer sizeofuint_t buffer size note memoryviewfrom_memori avail python versionchang memoryviewfrom_memori ad util use python print function c usual way write output c use stdcout python one would use print sinc method use differ buffer mix lead output order issu resolv pybind modul use funcpyprint function write python sysstdout consist python print function replic c api includ option keyword argument sep end file flush everyth work expect python codeblock cpp pyprint three three pyprint three sep_a three auto arg pymake_tupleunpack true pyprint arg end_a unpack true _ostream_redirect captur standard output ostream often librari use stream stdcout stdcerr print play well python standard sysstdout sysstderr redirect replac librari print pyprint print may feasibl fix use guard around librari function redirect output correspond python stream codeblock cpp includ pybindiostreamh add scope redirect noisi code mdefnoisy_func pyscoped_ostream_redirect stream stdcout stdostream pymodule_importsysattrstdout python output call_noisy_func method respect flush output stream flush need scope guard destroy allow output redirect real time jupyt notebook two argument c stream python output option default standard output given extra type pyscoped_estream_redirect scoped_estream_redirect ident except default stdcerr sysstderr use pycall_guard allow multipl item use default constructor codeblock py altern call singl function use call guard mdefnoisy_func call_noisy_funct pycall_guardpyscoped_ostream_redirect pyscoped_estream_redirect redirect also done python addit context manag use pyadd_ostream_redirect add_ostream_redirect function codeblock cpp pyadd_ostream_redirectm ostream_redirect name python default ostream_redirect name pass creat follow context manag python codeblock python ostream_redirectstdouttru stderrtru noisy_funct default redirect stream though use keyword argument disabl one stream need note method redirect clevel output file descriptor fprintf case youll need redirect file descriptor either directli c python osdup function operatingsystem depend way _eval evalu python express string file pybind provid eval exec eval_fil function evalu python express statement follow exampl illustr use codeblock cpp begin file includ pybindevalh evalu scope main modul pyobject scope pymodule_import__main__attr__dict__ evalu isol express int result pyevalmy_vari scopecastint evalu sequenc statement pyexec printhellon printworld scope evalu statement separ python file disk pyeval_filescriptpi scope c raw string liter also support quit handi purpos requir first statement must new line follow raw string delimit r ensur line common lead indent codeblock cpp pyexecr x get_answ x printhello world els printby scope note eval eval_fil accept templat paramet describ stringfil interpret possibl choic includ eval_expr isol express eval_single_stat singl statement return valu alway none eval_stat sequenc statement return valu alway none eval default eval_expr eval_fil default eval_stat exec shortcut evaleval_stat python type _wrapper avail wrapper major python type avail thin c wrapper class also use function paramet see refpython_objects_as_arg avail type includ classhandl classobject classbool_ classint_ classfloat_ classstr classbyt classtupl classlist classdict classslic classnon classcapsul classiter classiter classfunct classbuff classarray classarray_t warn sure review refpytypes_gotcha use heavili c api _casting_back_and_forth cast back forth kind mix code often necessari convert arbitrari c type python done use funcpycast codeblock cpp myclass cl pyobject obj pycastcl revers direct use follow syntax codeblock cpp pyobject obj myclass cl objcastmyclass convers fail direct throw except classcast_error _python_lib access python librari c also possibl import object defin python standard librari avail current python environ syspath work c exampl obtain refer python decim class codeblock cpp equival decim import decim pyobject decim pymodule_importdecimalattrdecim codeblock cpp tri import scipi pyobject scipi pymodule_importscipi return scipyattr__version__ _calling_python_funct call python function also possibl call python class function method via oper codeblock cpp construct python object class decim pyobject pi decim codeblock cpp use python make directori pyobject os pymodule_importo pyobject makedir osattrmakedir makedirstmppathtosomewher one convert result obtain python pure c version pyclass_ type convers defin codeblock cpp pyfunct f pyobject result_pi f hello some_inst myclass result result_pycastmyclass _calling_python_method call python method call object method one use attr obtain access python method codeblock cpp calcul eπ decim pyobject exp_pi piattrexp pyprintpystrexp_pi exampl piattrexp bound method alway call method instanc class altern one creat unbound method via python class instead instanc pass self object explicitli follow argument codeblock cpp pyobject decimal_exp decimalattrexp comput en n int n n n pyprintdecimal_expdecimaln keyword argument keyword argument also support python usual call syntax codeblock python def fnumber say function code f sayhello tosome_inst keyword call python c call made use codeblock cpp use namespac pybindliter bring _a liter f say_ahello to_asome_inst keyword call c unpack argument unpack arg kwarg also possibl mix argument codeblock cpp unpack pytupl arg pymake_tupl hello some_inst farg unpack pydict kwarg pydictnumber_a say_ahello to_asome_inst fkwarg mix keyword unpack pytupl arg pymake_tupl pydict kwarg pydictto_asome_inst farg say_ahello kwarg gener unpack accord pep_ also support codeblock cpp pydict kwarg pydictnumber_a pydict kwarg pydictto_asome_inst fkwarg say_ahello kwarg seealso file fileteststest_pytypescpp contain complet exampl demonstr pass nativ python type detail file fileteststest_callbackscpp present exampl call python function c includ keyword argument unpack _pep httpswwwpythonorgdevpepspep _implicit_cast implicit cast use c interfac python type call python function object type classobject return possibl invok implicit convers subclass like classdict hold proxi object return oper objattr cast subtyp improv code readabl allow valu pass c function requir specif subtyp rather gener classobject codeblock cpp includ pybindnumpyh use namespac pybindliter pymodule_ os pymodule_importo pymodule_ path pymodule_importospath like import ospath path pymodule_ np pymodule_importnumpi like import numpi np pystr curdir_ab pathattrabspathpathattrcurdir pyprintpystrcurr directori curdir_ab pydict environ osattrenviron pyprintenvironhom pyarray_tfloat arr npattron dtype_afloat pyprintpyreprarr pyint_ implicit convers avail subclass classobject need call objcast explicitli custom class see refcasting_back_and_forth note trivial convers via move constructor possibl implicit explicit cast call objcast attempt rich convers instanc pylist env osattrenviron succeed equival python code env listosenviron produc list dict key todo adapt text pr land handl except python except wrapper class thrown pyerror_already_set see refhandl except python c handling_python_exceptions_cpp inform handl except rais call c wrapper class _pytypes_gotcha gotcha defaultconstruct wrapper wrapper type defaultconstruct valid python object ie pynon simpli pyobject null pointer check use static_castboolmy_wrapp assign pynon wrapper may tempt use type like pystr pydict c signatur either pure c bound signatur assign default valu pynon howev best case scenario fail fast none convert type eg pydict wors case scenario silent work corrupt type want work eg pystrpynon yield none python python c interfac pybind expos python type function use thin c wrapper make possibl conveni call python code c without resort python c api toctre maxdepth object numpi util stl contain automat convers includ addit header file filepybindstlh convers stdvectorstddequestdliststdarraystdvalarray stdsetstdunordered_set stdmapstdunordered_map python list set dict data structur automat enabl type stdpair stdtupl alreadi support box core filepybindpybindh header major downsid implicit convers contain must convert ie copi everi pythonc cpython transit implic program semant perform pleas read next section detail altern approach avoid note arbitrari nest type possibl seealso file fileteststest_stlcpp contain complet exampl demonstr pass stl data type detail _cpp_container_cast c librari contain filepybindstlh header also includ support stdoption stdvariant requir c compil standard librari c mode stdexperimentalopt support avail variou version contain also exist c eg boost pybind provid easi way special type_cast type codeblock cpp boostopt exampl stdoptionallik contain namespac pybind namespac detail templat typenam struct type_casterboostoptionalt optional_casterboostoptionalt place header file includ translat unit automat convers need similarli special provid custom variant type codeblock cpp boostvari exampl stdvariantlik contain namespac pybind namespac detail templat typenam ts struct type_casterboostvariantt variant_casterboostvariantt specifi function use visit variant apply_visitor instead visit templat struct visit_helperboostvari templat typenam arg static auto callarg arg decltypeboostapply_visitorarg return boostapply_visitorarg namespac pybinddetail visit_help special requir namevari provid namevisit function function name special must includ tell pybind visit variant warn convert variant type pybind follow rule determin function overload call refoverload_resolut caveat hold particular order variant altern list import sinc pybind tri convers order mean exampl convert variantint bool bool variant never select python bool alreadi int convert c int chang order altern use variantbool int exampl provid solut note pybind support modern implement boostvari make use variad templat requir boost newer addit window msvc requir boostvari fall back old nonvariad implement msvc _opaqu make opaqu type pybind heavili reli templat match mechan convert paramet return valu construct stl data type vector link list hash tabl etc even work recurs manner instanc deal list hash map pair elementari custom type etc howev fundament limit approach intern convers python c type involv copi oper prevent passbyrefer semant mean suppos bind follow function codeblock cpp void append_stdvectorint v vpush_back call python follow happen codeblock pycon v append_v printv see pass stl data structur refer modif propag back python side similar situat aris expos stl data structur use def_readwrit def_readonli function codeblock cpp definit class myclass stdvectorint content bind code pyclass_myclassm myclass defpyinit def_readwritecont myclasscont case properti read written entireti howev append oper involv list type effect codeblock pycon myclass mcontent printmcont mcontentsappend printmcont final involv copi oper costli deal larg list deal situat pybind provid macro name pybind_make_opaquet disabl templatebas convers machineri type thu render opaqu content opaqu object never inspect extract henc pass refer instanc turn stdvectorint opaqu type add declar codeblock cpp pybind_make_opaquestdvectorint bind code eg invoc class_def etc macro must specifi top level outsid namespac sinc add templat instanti type_cast bind code consist multipl compil unit must present everi file typic via common header preced usag stdvectorint opaqu type must also correspond class_ declar associ name python defin set avail oper eg codeblock cpp pyclass_stdvectorintm intvector defpyinit defclear stdvectorintclear defpop_back stdvectorintpop_back def__len__ const stdvectorint v return vsize def__iter__ stdvectorint v return pymake_iteratorvbegin vend pykeep_al keep vector aliv iter use seealso file fileteststest_opaque_typescpp contain complet exampl demonstr creat expos opaqu type use pybind detail _stl_bind bind stl contain abil expos stl contain nativ python object fairli common request henc pybind also provid option header file name filepybindstl_bindh exactli map contain tri match behavior nativ python counterpart much possibl follow exampl showcas usag filepybindstl_bindh codeblock cpp dont forget includ pybindstl_bindh pybind_make_opaquestdvectorint pybind_make_opaquestdmapstdstr doubl later bind code pybind_vectorstdvectorintm vectorint pybind_mapstdmapstdstr doublem mapstringdoubl bind stl contain pybind consid type contain element decid whether contain confin local modul via refmodule_loc featur contain element type anyth alreadybound custom type bound without pymodule_loc contain bind pymodule_loc appli includ convert type numer type string eigen type type yet bound time stl contain bind moduleloc bind design avoid potenti conflict modul bind exampl two separ modul attempt bind stdvectorint python type possibl overrid behavior forc definit either moduleloc global pass attribut pymodule_loc make bind moduleloc pymodule_localfals make bind global pybind_vector pybind_map argument codeblock cpp pybind_vectorstdvectorintm vectorint pymodule_localfals note howev global bind would make imposs load modul time pybind modul also attempt bind contain type stdvectorint exampl see refmodule_loc detail moduleloc bind seealso file fileteststest_stl_binderscpp show use conveni stl contain wrapper eigen eigen httpeigentuxfamilyorg_ c headerbas librari dens spars linear algebra due popular widespread adopt pybind provid transpar convers limit map support eigen scientif python linear algebra data type enabl builtin eigen support must includ option header file filepybindeigenh passbyvalu bind function ordinari eigen dens object argument exampl eigenmatrixxd pybind accept input valu alreadi convert numpyndarray dimens compat eigen type copi valu temporari eigen variabl appropri type call function temporari variabl spars matric similarli copi scipysparsecsr_matrixscipysparsecsc_matrix object passbyrefer one major limit everi data convers implicitli involv copi expens larg matric disallow bind function chang matrix argument pybind allow work around use eigen eigenrefmatrixtyp class much would write function take gener type eigen subject limit discuss call bound function accept eigenrefconst matrixtyp type pybind attempt avoid copi use eigenmap object map sourc numpyndarray data requir data type eg dtypefloat matrixtypescalar doubl storag layout compat latter limit discuss detail section requir care consider default numpi matric eigen matric storag compat numpi matrix use either type differ eg pass array integ eigen paramet requir doubl storag incompat pybind make temporari copi pass copi instead bound function paramet instead eigenrefmatrixtyp note lack const pybind allow function call map numpi array writeabl aflagswrit true access includ modif made pass variabl transpar carri directli numpyndarray mean write code follow work expect codeblock cpp void scale_by_eigenrefeigenvectorxd v v note howev like run limit due numpi eigen differ default storag order data see section refstorage_ord detail bind code wont run limit note pass refer support spars type return valu python return ordinari dens eigen matrix type numpi eg eigenmatrixxd eigenrowvectorxf pybind keep matrix return numpi array directli refer eigen matrix copi data perform numpi array arrayflagsowndata set fals indic data lifetim store eigen matrix tie return array bind function nonrefer const return type eg const eigenmatrixxd thing happen except pybind also set numpi array writeabl flag fals return lvalu refer pointer usual pybind rule appli dictat bind function return valu polici see document refreturn_value_polici full detail mean without explicit return valu polici lvalu refer copi pointer manag pybind order avoid copi explicitli specifi appropri return valu polici follow exampl codeblock cpp class myclass eigenmatrixxd big_mat eigenmatrixxdzero public eigenmatrixxd getmatrix return big_mat const eigenmatrixxd viewmatrix return big_mat later bind code pyclass_myclassm myclass defpyinit defcopy_matrix myclassgetmatrix make copi defget_matrix myclassgetmatrix pyreturn_value_policyreference_intern defview_matrix myclassviewmatrix pyreturn_value_policyreference_intern codeblock python myclass aget_matrix flagswrit true flagsowndata fals v aview_matrix flagswrit fals flagsowndata fals c acopy_matrix flagswrit true flagsowndata true v refer element c note exampl pyreturn_value_policyreference_intern use tie life myclass object life return array may also return eigenref eigenmap maplik eigen object exampl return valu matrixblock relat method map dens eigen type default behaviour pybind simpli refer return data must take care ensur data remain valid may ask pybind explicitli copi return valu use pyreturn_value_policycopi polici bind function may also use pyreturn_value_policyreference_intern pykeep_al ensur data stay valid long return numpi array return refer map pybind addit respect readonlystatu return valu mark numpi array nonwrit refer map readonli note spars type alway copi return _storage_ord storag order pass argument via eigenref limit must awar order effect pass matric refer first foremost default eigenrefmatrixtyp class requir contigu storag along column columnmajor type default eigen row matrixtyp specif eigenrowmajor storag type former eigen default incompat numpi default rowmajor storag abl pass numpi array eigen refer without make one two chang note appli vector column row matric type rowmajor columnmajor distinct meaningless first approach chang use eigenrefmatrixtyp gener eigenrefmatrixtyp eigenstrideeigendynam eigendynam similar type fulli dynam stride type third templat argument sinc rather cumbersom type pybind provid pyeigendrefmatrixtyp type alia conveni along eigendmap equival map eigendstrid stride type type allow eigen map arbitrari storag order default eigen perform reason contigu storag allow vector done storag known contigu compil time default eigenref stride type allow noncontigu storag along outer dimens row columnmajor matrix column rowmajor matrix along inner dimens type howev ad benefit also abl map numpi array slice exampl follow contriv exampl use eigen numpi slice multipli coeffici even row column codeblock cpp mdefscal pyeigendrefeigenmatrixxd doubl c c codeblock python nparray scale_by_myarray second approach avoid copi intrus rearrang underli data type run noncontigu storag problem first place particular mean use matric eigenrowmajor storag appropri codeblock cpp use rowmatrixxd eigenmatrixdoubl eigendynam eigendynam eigenrowmajor use rowmatrixxd instead matrixxd bound function accept eigenrefrowmatrixxd argument callabl numpi default array without involv copi altern chang storag order numpi array use ad orderf option creat array codeblock python myarray nparraysourc orderf object passabl bound function accept eigenrefmatrixxd similar columnmajor eigen type one major caveat approach howev entir easi simpli flip eigen numpi usag one oper may alter storag order numpi array exampl arraytranspos result view array refer data opposit storag order approach allow fulli optim vector calcul eigen use array slice unlik first approach return matrix python either regular matrix refer via eigenref mapblock matrix special storag consider requir creat numpi array requir stride allow numpi properli interpret array whatev storag order fail rather copi default behaviour bind eigenrefconst matrixtyp eigen refer copi matrix valu pass numpi array conform element type matrixtyp compat stride layout want explicitli avoid copi case bind argument use pyargnoconvert annot describ refnonconverting_argu document follow exampl show exampl argument dont allow data copi take place codeblock cpp method function bound class myclass doubl some_methodconst eigenrefconst matrixxd matrix float some_functionconst eigenrefconst matrixxf big const eigenrefconst matrixxf small associ bind code use namespac pybindliter arg_a pyclass_myclassm myclass class definit defsome_method myclasssome_method pyargnoconvert mdefsome_funct some_funct big_anoconvert dont allow copi arg small_a one copi need bind code attempt call some_methodm method myclass object attempt call some_functionm rais runtimeerror rather make temporari copi array howev allow argument copi temporari necessari note explicitli specifi noconvert requir mutabl eigen refer eg eigenrefmatrixxd without const matrixxd mutabl refer never call temporari copi vector versu columnrow matric eigen numpi fundament differ notion vector eigen vector simpli matrix number column row set compil time column vector row vector respect numpi contrast compar dimension xn nx array also dimension array size n pass dimension xn nx array eigen eigen type must match dimens pass dimension nx numpi array eigen valu expect row vector xn numpi array column vector argument hand pybind allow pass dimension array length n eigen paramet eigen type hold column vector length n pass column vector eigen type constraint accept row vector pass row vector column vector take preced support exampl pass numpi array matrixxd argument note type need explicitli vector permit pass numpi array size eigen matrixdoubl dynam would end x eigen matrix pass eigenmatrixxd would result x eigen matrix return eigen vector numpi convers ambigu row vector length could return either array length array size x encount situat pybind compromis consid return eigen type compiletim vectorthat type either number row column set compil timepybind convert numpi array return valu instanc vector runtim eg matrixxd matrixfloat dynam pybind return vector array numpi isnt want want use arrayreshap get view data desir dimens seealso file fileteststest_eigencpp contain complet exampl show pass eigen spars dens data type detail function follow featur must enabl includ filepybindfunctionalh callback pass anonym function c standard brought lambda function gener polymorph function wrapper stdfunction c program languag enabl power new way work function lambda function come two flavor stateless lambda function resembl classic function pointer link anonym piec code state lambda function addit depend captur variabl store anonym lambda closur object simpl exampl c function take arbitrari function state stateless signatur int int argument run valu codeblock cpp int func_argconst stdfunctionintint f return f exampl involv take function signatur int int return anoth function kind return valu state lambda function store valu f captur object add return valu upon execut codeblock cpp stdfunctionintint func_retconst stdfunctionintint f return fint return fi exampl demonstr use python name paramet c callback requir use pycpp_funct wrapper usag similar defin method class codeblock cpp pycpp_funct func_cpp return pycpp_functionint return pyargnumb includ extra header file filepybindfunctionalh almost trivial gener bind code function codeblock cpp includ pybindfunctionalh pybind_moduleexampl mdeffunc_arg func_arg mdeffunc_ret func_ret mdeffunc_cpp func_cpp follow interact session show call python codeblock pycon python import exampl def squarei return examplefunc_argsquar l square_plus_ examplefunc_retsquar square_plus_ l plus_ func_cpp plus_numb l warn keep mind pass function c python vice versa instanti piec wrapper code translat function invoc two languag natur translat increas comput cost function call somewhat problemat situat aris function copi back forth python c mani time row case underli wrapper accumul correspondingli result long sequenc c python c roundtrip significantli decreas perform one except pybind detect case stateless function ie function pointer lambda function without captur variabl pass argument anoth c function expos python case overhead pybind extract underli c function pointer wrap function sidestep potenti c python c roundtrip demonstr fileteststest_callbackscpp note function use gener bind callback c librari eg gui librari asynchron network librari etc file fileteststest_callbackscpp contain complet exampl demonstr work callback anonym function detail string byte unicod convers note section discuss string handl term python string python replac occurr str unicod byte str python user may find best use __future__ import unicode_liter avoid unintent use str instead unicod pass python string c python str pass python c function accept stdstring char argument pybind encod python string utf python str encod utf oper fail c languag encod agnost respons programm track encod often easiest simpli use utf everywher httputfeverywhereorg_ codeblock c mdefutf_test const stdstring cout utf ice caken cout mdefutf_charptr const char cout favorit food cout codeblock python utf_test utf ice cake utf_charptr favorit food note termin emul support utf emoji font may display exampl correctli result whether c function accept argument valu refer whether const use pass byte c python byte object pass c function accept stdstring char without convers python order make function accept byte str declar take pybyt argument return c string python c function return stdstring char python caller pybind assum string valid utf decod nativ python str use api python use perform bytesdecodeutf implicit convers fail pybind rais unicodedecodeerror codeblock c mdefstd_string_return return stdstringthi string need utf encod codeblock python isinstanceexamplestd_string_return str true utf inclus pure ascii never issu return pure ascii string python possibl string pure ascii necessari ensur encod valid utf warn implicit convers assum return char nulltermin null termin buffer overrun occur explicit convers c code construct stdstring utf string one perform explicit convers return pystr object explicit convers overhead implicit convers codeblock c use python c api convert latin unicod mdefstr_output stdstring send rxesumx alic hr latin pystr py_ pyunicode_decodelatinsdata slength return py_ codeblock python str_output send résumé alic hr python c api httpsdocspythonorgcapiunicodehtmlbuiltincodecs_ provid sever builtin codec one could also use third parti encod librari libiconv transcod utf return c string without convers data c stdstring repres text return python byte one return data pybyt object codeblock c mdefreturn_byt stdstring sxbaxdxbaxd valid utf return pybytess return data without transcod codeblock python examplereturn_byt bxbaxdxbaxd note asymmetri pybind convert byte stdstring without encod convert stdstring back byte implicitli codeblock c mdefasymmetri stdstring accept str byte python return look harmless implicitli convert str codeblock python isinstanceexampleasymmetrybhav byte str true exampleasymmetrybxbaxdxbaxd invalid utf byte unicodedecodeerror utf codec cant decod byte xba posit invalid start byte wide charact string python str pass c function expect stdwstring wchar_t stdustr stdustr str encod utf utf depend c compil implement type platform nativ endian string type return assum contain valid utf utf decod python str codeblock c defin unicod includ windowsh mdefset_window_text hwnd hwnd stdwstring call setwindowtext nulltermin utf string setwindowtexthwnd sc_str mdefget_window_text hwnd hwnd const int buffer_s getwindowtextlengthhwnd auto buffer stdmake_uniqu wchar_t buffer_s getwindowtexthwnd bufferdata buffer_s stdwstring textbufferget wstring convert python str return text warn wide charact string may work describ python python compil enableunicodeuc string multibyt encod shiftji must transcod utf return python charact liter c function accept charact liter input receiv first charact python str input string longer one unicod charact trail charact ignor charact liter return c char wchar_t convert str repres singl charact codeblock c mdefpass_char char c return c mdefpass_wchar wchar_t w return w codeblock python examplepass_chara c cast integ charact type char c x pybind convert python integ charact implicitli python function chr use convert integ charact codeblock python examplepass_charx typeerror examplepass_charchrx desir work bit integ use int_t uint_t argument type graphem cluster singl graphem may repres two unicod charact exampl é usual repres ue also express combin charact sequenc u u letter e follow combin acut accent combin charact lost twocharact sequenc pass argument even though render singl graphem codeblock python examplepass_wcharé é combining_e_acut e u combining_e_acut e combining_e_acut é fals examplepass_wcharcombining_e_acut e normal combin charact pass charact liter c may resolv issu codeblock python examplepass_wcharunicodedatanormalizenfc combining_e_acut é languag thai exampl graphem express singl unicod code point httpunicodeorgreportstrgrapheme_cluster_boundaries_ way captur c charact type c string view c string view automat support compil c mode follow rule encod decod correspond stl string type exampl stdustring_view argument pass utfencod data return stdstring_view decod utf refer absolut minimum everi softwar develop absolut posit must know unicod charact set excus httpswwwjoelonsoftwarecomtheabsoluteminimumeverysoftwaredeveloperabsolutelypositivelymustknowaboutunicodeandcharactersetsnoexcuses_ c use stl string win api boundari httpsmsdnmicrosoftcomencamagazinemtaspx_ custom type caster rare case applic may requir custom type caster express use abstract provid pybind thu requir raw python c api call fairli advanc usag pursu expert familiar intricaci python refer count follow snippet demonstr work simpl inti type convert python type provid __int__self method codeblock cpp struct inti long long_valu void printinti stdcout slong_valu stdendl follow python snippet demonstr intend usag python side codeblock python class def __int__self return exampl import print printa regist necessari convers routin necessari add instanti pybinddetailtype_castert templat although implement detail ad instanti type explicitli allow codeblock cpp namespac pybind namespac detail templat struct type_casterinti public macro establish name inti function signatur declar local variabl valu type inti pybind_type_casterinti _inti convers part pythonc convert pyobject inti instanc return fals upon failur second argument indic whether implicit convers appli bool loadhandl src bool extract pyobject handl pyobject sourc srcptr tri convert python integ valu pyobject tmp pynumber_longsourc tmp return fals tri convert c int valuelong_valu pylong_aslongtmp py_decreftmp ensur return code ok avoid outofrang error etc return valuelong_valu pyerr_occur convers part c python convert inti instanc python object second third argument use indic return valu polici parent object return_value_policyreference_intern gener ignor implicit caster static handl castinti src return_value_polici polici handl parent return pylong_fromlongsrclong_valu namespac pybinddetail note type_castert defin pybind_type_castert requir defaultconstruct valu first default construct load assign warn use custom type caster import declar consist everi compil unit python extens modul otherwis undefin behavior ensu chrono includ addit header file filepybindchronoh convers c chrono datatyp python datetim object automat enabl header also enabl convers python float often sourc timemonoton timeperf_count timeprocess_tim durat overview clock c point confus use convers differ clock provid c three clock type defin c standard user defin need clock differ properti convert python give differ result first clock defin standard stdchronosystem_clock clock measur current date time howev clock chang updat oper system time exampl time synchronis time server clock chang make clock poor choic time purpos good measur wall time second clock defin standard stdchronosteady_clock clock tick steadi rate never adjust make excel time purpos howev valu clock correspond current date time often clock amount time system although clock never clock system clock system clock chang steadi clock third clock defin standard stdchronohigh_resolution_clock clock clock highest resolut clock system normal typedef either system clock steadi clock independ clock import use convers type get python clock might differ depend system typedef system clock python get datetim object differ clock timedelta object provid convers rubric c python stdchronosystem_clocktime_point datetimedatetim system clock time convert python datetim instanc local timezon timezon inform attach naiv datetim object stdchronodur datetimetimedelta durat convert timedelta precis durat greater microsecond lost round toward zero stdchronoother_clockstime_point datetimetimedelta clock time system clock convert time delta timedelta measur time clock epoch rubric python c datetimedatetim datetimed datetimetim stdchronosystem_clocktime_point datetim object convert system clock timepoint timezon inform ignor type treat naiv object datetimetimedelta stdchronodur time delta convert durat microsecond precis datetimetimedelta stdchronoother_clockstime_point time delta convert clock timepoint treat amount time start clock epoch float stdchronodur float pass c durat interpret number second convert durat use duration_cast float float stdchronoother_clockstime_point float pass c time point interpret number second start clock epoch overview rubric nativ type c wrapper python expos custom c type use classpyclass_ cover detail docclass section underli data structur alway origin c class classpyclass_ wrapper provid python interfac intern object like sent c python pybind add outer wrapper layer nativ c object get back python matter peel wrapper rubric wrapper c nativ type python exact opposit situat type nativ python like tupl list one way get data c classpyobject famili wrapper explain detail docadvancedpycppobject section well give quick exampl codeblock cpp void print_listpylist my_list auto item my_list stdcout item codeblock pycon print_list python list convert way wrap c classpylist class core still python object copi classpylist usual referencecount like python return object python remov thin wrapper rubric convert nativ c python type previou two case nativ type one languag wrapper nativ type side convert codeblock cpp void print_vectorconst stdvectorint v auto item v stdcout item n codeblock pycon print_vector case pybind construct new stdvectorint copi element python list newli construct object pass print_vector thing happen direct new list made match valu return c lot convers support box shown tabl conveni keep mind convers fundament base copi data perfectli fine small immut type may becom quit expens larg data structur avoid overrid automat convers custom wrapper ie abovement approach requir manual effort detail avail refopaqu section _conversion_t list builtin convers follow basic data type support box may requir addit extens header includ pass data structur argument return valu refer section bind refclass data type descript header file int_t uint_t bit integ filepybindpybindh int_t uint_t bit integ filepybindpybindh int_t uint_t bit integ filepybindpybindh int_t uint_t bit integ filepybindpybindh ssize_t size_t platformdepend size filepybindpybindh float doubl float point type filepybindpybindh bool twostat boolean type filepybindpybindh char charact liter filepybindpybindh char_t utf charact liter filepybindpybindh char_t utf charact liter filepybindpybindh wchar_t wide charact liter filepybindpybindh const char utf string liter filepybindpybindh const char_t utf string liter filepybindpybindh const char_t utf string liter filepybindpybindh const wchar_t wide string liter filepybindpybindh stdstring stl dynam utf string filepybindpybindh stdustr stl dynam utf string filepybindpybindh stdustr stl dynam utf string filepybindpybindh stdwstring stl dynam wide string filepybindpybindh stdstring_view stl c string view filepybindpybindh stdustring_view etc stdpairt pair two custom type filepybindpybindh stdtupl arbitrari tupl type filepybindpybindh stdreference_wrapp refer type wrapper filepybindpybindh stdcomplext complex number filepybindcomplexh stdarrayt size stl static array filepybindstlh stdvectort stl dynam array filepybindstlh stddequet stl doubleend queue filepybindstlh stdvalarrayt stl valu array filepybindstlh stdlistt stl link list filepybindstlh stdmapt stl order map filepybindstlh stdunordered_mapt stl unord map filepybindstlh stdsett stl order set filepybindstlh stdunordered_sett stl unord set filepybindstlh stdoptionalt stl option type c filepybindstlh stdexperimentaloptionalt stl option type exp filepybindstlh stdvariant typesaf union c filepybindstlh stdfunction stl polymorph function filepybindfunctionalh stdchronodur stl time durat filepybindchronoh stdchronotime_point stl datetim filepybindchronoh eigenmatrix eigen dens matrix filepybindeigenh eigenmap eigen map memori filepybindeigenh eigensparsematrix eigen spars matrix filepybindeigenh _typeconvers type convers apart enabl crosslanguag function call fundament problem bind tool like pybind must address provid access nativ python type c vice versa three fundament differ way thiswhich approach prefer particular type depend situat hand use nativ c type everywher case type must wrap use pybindgener bind python interact use nativ python type everywher need wrap c function interact use nativ c type c side nativ python type python side pybind refer type convers type convers natur option sens nativ nonwrap type use everywher main downsid copi data must made everi python c transit need sinc c python version type gener wont memori layout pybind perform mani kind convers automat overview provid tabl refconversion_t follow subsect discuss differ option detail main focu section type convers repres last case list toctre maxdepth overview string stl function chrono eigen custom cmake helper pybind use add_subdirectoryexternpybind instal find_packagepybind config interfac provid either case function ident cmakemodul toolspybindconfigcmakein